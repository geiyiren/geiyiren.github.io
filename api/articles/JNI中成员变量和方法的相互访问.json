{"title":"JNI中成员变量和方法的相互访问","slug":"JNI中成员变量和方法的相互访问","date":"2022-12-14T16:47:00.000Z","updated":"2023-11-26T08:56:20.894Z","comments":true,"path":"api/articles/JNI中成员变量和方法的相互访问.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/1.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/2.png"],"content":"<h1 id=\"什么是JNI\"><a href=\"#什么是JNI\" class=\"headerlink\" title=\"什么是JNI\"></a>什么是JNI</h1><p>说明：JNI 是 Java Native Interface 的缩写，它提供了若干的API实现了Java和其他语言的通信（主要是C&amp;C++，但是它并不妨碍你使用其他编程语言，只要调用约定受支持就可以了）。从Java1.1开始，JNI 标准成为 java 平台的一部分，它允许 Java 代码和其他语言写的代码进行交互。总的来说，JNI 就是一个允许Java语言和其他编程语言（主要是C&#x2F;C++）通信的接口。</p>\n<p>原因：C&#x2F;C++ 是系统级的编程语言，可以用来开发任何和系统相关的程序和类库，效率也很高。而 Java 本身编写底层的应用比较难以实现，使用 JNI 可以调用现有的本地库，极大地灵活了 Java 的开发。</p>\n<ul>\n<li><p>缺点：</p>\n<ul>\n<li><p>1、使用java与本地已编译的代码交互，通常会丧失平台可移植性。</p>\n</li>\n<li><p>2、程序不再是绝对安全的，本地代码的不当使用可能导致整个程序崩溃。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>注：对于上面所说的java使用了JNI 接口会丧失平台的可移植性解释如下</p>\n<p>JNI 提供出来一个功能接口，但是这个功能是使用本地语言进行实现的，通常是C或者C++。</p>\n<p>以 linux 系统和 window 系统的 printf 函数为例，虽然这两个系统都提供了这个打印函数，并且名字也一样，但是在实现上可能会有各自的不同点。同时在 window 下的动态库为 dll 文件，linux 下的动态库为 so 文件。</p>\n<p>所以我原本在 linux 下可以正常使用的一套 JNI 功能，一旦需要转移到 windows 上执行的时候就需要重新编译实现接口的动态库。虽然 java 是跨平台的，但是使用 jni 调用的本地方法却是与平台相依赖的，会在进行编译的过程中会出现这样或者那样的兼容性问题，一般不能直接拿来即用。</p>\n<ul>\n<li>实现JNI的基本步骤<ul>\n<li>编写带有 native 声明的方法的java类。</li>\n<li>使用 javah + 类名生成扩展名为.h的头文件。</li>\n<li>使用 C&#x2F;C++ 实现本地方法。</li>\n<li>将 C&#x2F;C++ 编写的文件生成动态链接库。</li>\n<li>在 java 类中引用该动态链接库并完成调用。</li>\n<li>注：可以先写 java 的调用，也可以先写 C&#x2F;C++ 的实现，只要两边约定好接口的名称，参数，返回值等信息即可。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"涉及数据类型对照表\"><a href=\"#涉及数据类型对照表\" class=\"headerlink\" title=\"涉及数据类型对照表\"></a>涉及数据类型对照表</h1><h2 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h2><p><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/1.png\"> </p>\n<h2 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h2><p><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/2.png\"> </p>\n<h1 id=\"java访问C-的变量\"><a href=\"#java访问C-的变量\" class=\"headerlink\" title=\"java访问C++的变量\"></a><code>java</code>访问<code>C++</code>的变量</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">JNIEXPORT jint JNICALL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Java_com_fibocom_multicamera_AvmSurfaceViewNative_nativeGetViewInfo</span><span class=\"params\">(JNIEnv *env,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                                    jclass type,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                                    jint cmd,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                                    jobject output)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    jclass objectClass = env-&gt;<span class=\"built_in\">GetObjectClass</span>(output);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 通过GetFieldID方法得到这个对象的dist属性</span></span><br><span class=\"line\">    jfieldID m3DBtnOn = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;m3DBtnOn&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID viewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;viewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID wheelViewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;wheelViewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID trajectoryLineViewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;trajectoryLineViewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID bsdViewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;bsdViewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID brightID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;brightID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    jfieldID dist_l = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;dist_l&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID dist_r = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;dist_r&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID upon = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;upon&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID angle = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;angle&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID viewPointX = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;viewPointX&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID viewPointY = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;viewPointY&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    ParametersInit *m_Instance = ParametersInit::<span class=\"built_in\">GetInstance</span>();</span><br><span class=\"line\">    avmmanager::TAvmViewTag m_view_info;</span><br><span class=\"line\">    m_Instance-&gt;<span class=\"built_in\">getViewInfo</span>(m_view_info);</span><br><span class=\"line\"></span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, m3DBtnOn, m_view_info.m3DBtnOn);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, viewID, m_view_info.viewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, wheelViewID, m_view_info.wheelViewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, trajectoryLineViewID, m_view_info.trajectoryLineViewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, bsdViewID, m_view_info.bsdViewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, brightID, m_view_info.brightID);</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, dist_l, m_view_info.dist_l);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, dist_r, m_view_info.dist_r);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, upon, m_view_info.upon);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, angle, m_view_info.angle);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, viewPointX, m_view_info.viewPointX);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, viewPointY, m_view_info.viewPointY);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"C-访问java的变量\"><a href=\"#C-访问java的变量\" class=\"headerlink\" title=\"C++访问java的变量\"></a><code>C++</code>访问<code>java</code>的变量</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">JNIEXPORT jint JNICALL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Java_com_fibocom_multicamera_AvmSurfaceViewNative_nativeBSDInfo</span><span class=\"params\">(JNIEnv *env,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                jobject obj, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                jobjectArray objectArray)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    jint ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 获取数组的长度</span></span><br><span class=\"line\">    jsize length = env-&gt;<span class=\"built_in\">GetArrayLength</span>(objectArray);</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">XXX:</span>数据长度永远为7，目前测试暂时支取第一个结果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (length)</span><br><span class=\"line\">        length = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 获取Person类的Class对象</span></span><br><span class=\"line\">    jclass class_Rect = env-&gt;<span class=\"built_in\">FindClass</span>(<span class=\"string\">&quot;com/fibocom/aidl/Rect&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (class_Rect == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====FindClass success===== \\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 获取Person的sayHello方法字段</span></span><br><span class=\"line\">    jmethodID getX1 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getX1&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getX1 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getX2 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getX2&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getX2 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getY1 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getY1&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getY1 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getY2 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getY2&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getY2 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getCamID = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getCamID&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getCamID == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getTimestamp = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getTimestamp&quot;</span>, <span class=\"string\">&quot;()J&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getTimestamp == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4. 循环调用每个方法</span></span><br><span class=\"line\">    jint aaa=<span class=\"number\">0</span>;</span><br><span class=\"line\">    avmmanager::TBsdBox *avm_bsd = <span class=\"keyword\">new</span> avmmanager::TBsdBox[length];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取引用类型数组的对象</span></span><br><span class=\"line\">        jobject element = env-&gt;<span class=\"built_in\">GetObjectArrayElement</span>(objectArray, i);</span><br><span class=\"line\">        <span class=\"comment\">// 判断数组元素是否是Person类对象</span></span><br><span class=\"line\">        <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== [%d] ===== \\n&quot;</span>, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (element != <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 调用Person对象的sayHello()方法</span></span><br><span class=\"line\">            avm_bsd[i].left = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getX1);</span><br><span class=\"line\">            avm_bsd[i].right = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getX2);</span><br><span class=\"line\">            avm_bsd[i].top = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getY1);</span><br><span class=\"line\">            avm_bsd[i].bottom = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getY2);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">int</span> camID = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getCamID);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;CallIntMethod %d \\n&quot;</span>, camID);</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (camID)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">2</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">3</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;nativeBSDInfo cam_index %d \\n&quot;</span>, camID);</span><br><span class=\"line\">                avm_bsd[i].cam_index = camID;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            avm_bsd[i].timestamp = env-&gt;<span class=\"built_in\">CallLongMethod</span>(element, getTimestamp);</span><br><span class=\"line\">            avm_bsd[i].size = length;</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== X1[%d] %d  \\n&quot;</span>, i, avm_bsd[i].left);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== X2[%d] %d  \\n&quot;</span>, i, avm_bsd[i].right);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== Y1[%d] %d  \\n&quot;</span>, i, avm_bsd[i].top);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== Y2[%d] %d  \\n&quot;</span>, i, avm_bsd[i].bottom);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== id[%d] %d  \\n&quot;</span>, i, avm_bsd[i].cam_index);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== timestamp[%d] %ld  \\n&quot;</span>, i, avm_bsd[i].timestamp);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== size[%d] %d  \\n&quot;</span>, i, avm_bsd[i].size);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    EventSystem::<span class=\"built_in\">Instance</span>()-&gt;<span class=\"built_in\">SendEvent</span>(<span class=\"string\">&quot;avm_get_bsd_info&quot;</span>, avm_bsd, [](<span class=\"type\">void</span> *ptr_event)</span><br><span class=\"line\">                                       &#123;</span><br><span class=\"line\">        Event *event = (Event *) ptr_event;</span><br><span class=\"line\">        <span class=\"type\">bool</span> *buf = (<span class=\"type\">bool</span> *) event-&gt;<span class=\"built_in\">Parameter</span>();</span><br><span class=\"line\">        <span class=\"keyword\">delete</span> buf;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span> event; &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","more":"<h1 id=\"什么是JNI\"><a href=\"#什么是JNI\" class=\"headerlink\" title=\"什么是JNI\"></a>什么是JNI</h1><p>说明：JNI 是 Java Native Interface 的缩写，它提供了若干的API实现了Java和其他语言的通信（主要是C&amp;C++，但是它并不妨碍你使用其他编程语言，只要调用约定受支持就可以了）。从Java1.1开始，JNI 标准成为 java 平台的一部分，它允许 Java 代码和其他语言写的代码进行交互。总的来说，JNI 就是一个允许Java语言和其他编程语言（主要是C&#x2F;C++）通信的接口。</p>\n<p>原因：C&#x2F;C++ 是系统级的编程语言，可以用来开发任何和系统相关的程序和类库，效率也很高。而 Java 本身编写底层的应用比较难以实现，使用 JNI 可以调用现有的本地库，极大地灵活了 Java 的开发。</p>\n<ul>\n<li><p>缺点：</p>\n<ul>\n<li><p>1、使用java与本地已编译的代码交互，通常会丧失平台可移植性。</p>\n</li>\n<li><p>2、程序不再是绝对安全的，本地代码的不当使用可能导致整个程序崩溃。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>注：对于上面所说的java使用了JNI 接口会丧失平台的可移植性解释如下</p>\n<p>JNI 提供出来一个功能接口，但是这个功能是使用本地语言进行实现的，通常是C或者C++。</p>\n<p>以 linux 系统和 window 系统的 printf 函数为例，虽然这两个系统都提供了这个打印函数，并且名字也一样，但是在实现上可能会有各自的不同点。同时在 window 下的动态库为 dll 文件，linux 下的动态库为 so 文件。</p>\n<p>所以我原本在 linux 下可以正常使用的一套 JNI 功能，一旦需要转移到 windows 上执行的时候就需要重新编译实现接口的动态库。虽然 java 是跨平台的，但是使用 jni 调用的本地方法却是与平台相依赖的，会在进行编译的过程中会出现这样或者那样的兼容性问题，一般不能直接拿来即用。</p>\n<ul>\n<li>实现JNI的基本步骤<ul>\n<li>编写带有 native 声明的方法的java类。</li>\n<li>使用 javah + 类名生成扩展名为.h的头文件。</li>\n<li>使用 C&#x2F;C++ 实现本地方法。</li>\n<li>将 C&#x2F;C++ 编写的文件生成动态链接库。</li>\n<li>在 java 类中引用该动态链接库并完成调用。</li>\n<li>注：可以先写 java 的调用，也可以先写 C&#x2F;C++ 的实现，只要两边约定好接口的名称，参数，返回值等信息即可。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"涉及数据类型对照表\"><a href=\"#涉及数据类型对照表\" class=\"headerlink\" title=\"涉及数据类型对照表\"></a>涉及数据类型对照表</h1><h2 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h2><p><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/1.png\"> </p>\n<h2 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h2><p><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/2.png\"> </p>\n<h1 id=\"java访问C-的变量\"><a href=\"#java访问C-的变量\" class=\"headerlink\" title=\"java访问C++的变量\"></a><code>java</code>访问<code>C++</code>的变量</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">JNIEXPORT jint JNICALL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Java_com_fibocom_multicamera_AvmSurfaceViewNative_nativeGetViewInfo</span><span class=\"params\">(JNIEnv *env,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                                    jclass type,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                                    jint cmd,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                                    jobject output)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    jclass objectClass = env-&gt;<span class=\"built_in\">GetObjectClass</span>(output);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 通过GetFieldID方法得到这个对象的dist属性</span></span><br><span class=\"line\">    jfieldID m3DBtnOn = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;m3DBtnOn&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID viewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;viewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID wheelViewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;wheelViewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID trajectoryLineViewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;trajectoryLineViewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID bsdViewID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;bsdViewID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    jfieldID brightID = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;brightID&quot;</span>, <span class=\"string\">&quot;I&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    jfieldID dist_l = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;dist_l&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID dist_r = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;dist_r&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID upon = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;upon&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID angle = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;angle&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID viewPointX = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;viewPointX&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\">    jfieldID viewPointY = env-&gt;<span class=\"built_in\">GetFieldID</span>(objectClass, <span class=\"string\">&quot;viewPointY&quot;</span>, <span class=\"string\">&quot;F&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    ParametersInit *m_Instance = ParametersInit::<span class=\"built_in\">GetInstance</span>();</span><br><span class=\"line\">    avmmanager::TAvmViewTag m_view_info;</span><br><span class=\"line\">    m_Instance-&gt;<span class=\"built_in\">getViewInfo</span>(m_view_info);</span><br><span class=\"line\"></span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, m3DBtnOn, m_view_info.m3DBtnOn);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, viewID, m_view_info.viewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, wheelViewID, m_view_info.wheelViewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, trajectoryLineViewID, m_view_info.trajectoryLineViewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, bsdViewID, m_view_info.bsdViewID);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetIntField</span>(output, brightID, m_view_info.brightID);</span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, dist_l, m_view_info.dist_l);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, dist_r, m_view_info.dist_r);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, upon, m_view_info.upon);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, angle, m_view_info.angle);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, viewPointX, m_view_info.viewPointX);</span><br><span class=\"line\">    env-&gt;<span class=\"built_in\">SetFloatField</span>(output, viewPointY, m_view_info.viewPointY);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"C-访问java的变量\"><a href=\"#C-访问java的变量\" class=\"headerlink\" title=\"C++访问java的变量\"></a><code>C++</code>访问<code>java</code>的变量</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">JNIEXPORT jint JNICALL</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">Java_com_fibocom_multicamera_AvmSurfaceViewNative_nativeBSDInfo</span><span class=\"params\">(JNIEnv *env,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                jobject obj, </span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">                                                                jobjectArray objectArray)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    jint ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 1. 获取数组的长度</span></span><br><span class=\"line\">    jsize length = env-&gt;<span class=\"built_in\">GetArrayLength</span>(objectArray);</span><br><span class=\"line\">    <span class=\"comment\">// <span class=\"doctag\">XXX:</span>数据长度永远为7，目前测试暂时支取第一个结果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (length)</span><br><span class=\"line\">        length = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 2. 获取Person类的Class对象</span></span><br><span class=\"line\">    jclass class_Rect = env-&gt;<span class=\"built_in\">FindClass</span>(<span class=\"string\">&quot;com/fibocom/aidl/Rect&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (class_Rect == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====FindClass success===== \\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 3. 获取Person的sayHello方法字段</span></span><br><span class=\"line\">    jmethodID getX1 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getX1&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getX1 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getX2 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getX2&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getX2 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getY1 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getY1&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getY1 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getY2 = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getY2&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getY2 == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getCamID = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getCamID&quot;</span>, <span class=\"string\">&quot;()I&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getCamID == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    jmethodID getTimestamp = env-&gt;<span class=\"built_in\">GetMethodID</span>(class_Rect, <span class=\"string\">&quot;getTimestamp&quot;</span>, <span class=\"string\">&quot;()J&quot;</span>); <span class=\"comment\">//(A)B---A为输入参数，B为输出参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getTimestamp == <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 4. 循环调用每个方法</span></span><br><span class=\"line\">    jint aaa=<span class=\"number\">0</span>;</span><br><span class=\"line\">    avmmanager::TBsdBox *avm_bsd = <span class=\"keyword\">new</span> avmmanager::TBsdBox[length];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 获取引用类型数组的对象</span></span><br><span class=\"line\">        jobject element = env-&gt;<span class=\"built_in\">GetObjectArrayElement</span>(objectArray, i);</span><br><span class=\"line\">        <span class=\"comment\">// 判断数组元素是否是Person类对象</span></span><br><span class=\"line\">        <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== [%d] ===== \\n&quot;</span>, i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (element != <span class=\"literal\">nullptr</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 调用Person对象的sayHello()方法</span></span><br><span class=\"line\">            avm_bsd[i].left = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getX1);</span><br><span class=\"line\">            avm_bsd[i].right = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getX2);</span><br><span class=\"line\">            avm_bsd[i].top = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getY1);</span><br><span class=\"line\">            avm_bsd[i].bottom = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getY2);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">int</span> camID = env-&gt;<span class=\"built_in\">CallIntMethod</span>(element, getCamID);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;CallIntMethod %d \\n&quot;</span>, camID);</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (camID)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">2</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                avm_bsd[i].cam_index = <span class=\"number\">3</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;nativeBSDInfo cam_index %d \\n&quot;</span>, camID);</span><br><span class=\"line\">                avm_bsd[i].cam_index = camID;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            avm_bsd[i].timestamp = env-&gt;<span class=\"built_in\">CallLongMethod</span>(element, getTimestamp);</span><br><span class=\"line\">            avm_bsd[i].size = length;</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== X1[%d] %d  \\n&quot;</span>, i, avm_bsd[i].left);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== X2[%d] %d  \\n&quot;</span>, i, avm_bsd[i].right);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== Y1[%d] %d  \\n&quot;</span>, i, avm_bsd[i].top);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== Y2[%d] %d  \\n&quot;</span>, i, avm_bsd[i].bottom);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== id[%d] %d  \\n&quot;</span>, i, avm_bsd[i].cam_index);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== timestamp[%d] %ld  \\n&quot;</span>, i, avm_bsd[i].timestamp);</span><br><span class=\"line\">            <span class=\"built_in\">LOGI</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;====nativeBSDInfo==== size[%d] %d  \\n&quot;</span>, i, avm_bsd[i].size);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    EventSystem::<span class=\"built_in\">Instance</span>()-&gt;<span class=\"built_in\">SendEvent</span>(<span class=\"string\">&quot;avm_get_bsd_info&quot;</span>, avm_bsd, [](<span class=\"type\">void</span> *ptr_event)</span><br><span class=\"line\">                                       &#123;</span><br><span class=\"line\">        Event *event = (Event *) ptr_event;</span><br><span class=\"line\">        <span class=\"type\">bool</span> *buf = (<span class=\"type\">bool</span> *) event-&gt;<span class=\"built_in\">Parameter</span>();</span><br><span class=\"line\">        <span class=\"keyword\">delete</span> buf;</span><br><span class=\"line\">        <span class=\"keyword\">delete</span> event; &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"jni","path":"api/categories/jni.json"}],"tags":[{"name":"C++","path":"api/tags/C++.json"},{"name":"jni","path":"api/tags/jni.json"}]}