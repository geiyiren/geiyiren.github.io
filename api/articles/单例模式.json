{"title":"单例模式","slug":"单例模式","date":"2023-05-19T08:20:00.000Z","updated":"2023-11-24T15:15:00.986Z","comments":true,"path":"api/articles/单例模式.json","excerpt":null,"covers":null,"content":"<h1 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h1><ul>\n<li>当存在一个或多个变量仅初始化一次，却被多个文件多次使用的情况下考虑单例模式</li>\n<li>可实现一次初始化，多文件多次使用</li>\n<li>例如 ：相机的内参和外参一般只初始化一次，然后直接使用。</li>\n</ul>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><h1 id=\"声明与定义\"><a href=\"#声明与定义\" class=\"headerlink\" title=\"声明与定义\"></a>声明与定义</h1><h3 id=\"ParametersInit-h\"><a href=\"#ParametersInit-h\" class=\"headerlink\" title=\"ParametersInit.h\"></a>ParametersInit.h</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> __PARAMETERS_INIT_H__</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> __PARAMETERS_INIT_H__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for thread-safe singleton</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pthread.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ParametersInit</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">static</span> ParametersInit *m_instance;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">pthread_once_t</span> _once;</span><br><span class=\"line\">    <span class=\"type\">int</span> m_test;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ParametersInit</span>(<span class=\"comment\">/* args */</span>);</span><br><span class=\"line\">    ~<span class=\"built_in\">ParametersInit</span>();</span><br><span class=\"line\">    <span class=\"comment\">//使用pthread_once保证init()只调用一次</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> ParametersInit *<span class=\"title\">GetInstance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">camParametersInit</span><span class=\"params\">(<span class=\"type\">int</span> in_test)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getTest</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ParametersInit-cpp\"><a href=\"#ParametersInit-cpp\" class=\"headerlink\" title=\"ParametersInit.cpp\"></a>ParametersInit.cpp</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;../inc/ParametersInit.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 静态成员函数必须初始化后使用</span></span><br><span class=\"line\"><span class=\"type\">pthread_once_t</span> ParametersInit::_once = <span class=\"number\">0</span>;</span><br><span class=\"line\">ParametersInit *ParametersInit::m_instance=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit::<span class=\"built_in\">ParametersInit</span>(<span class=\"comment\">/* args */</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit::~<span class=\"built_in\">ParametersInit</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ParametersInit::init</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!m_instance)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        m_instance = <span class=\"keyword\">new</span> <span class=\"built_in\">ParametersInit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ParametersInit *<span class=\"title\">ParametersInit::GetInstance</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">pthread_once</span>(&amp;_once, ParametersInit::init);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m_instance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ParametersInit::camParametersInit</span><span class=\"params\">(<span class=\"type\">int</span> in_test)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    m_test = in_test;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">ParametersInit::getTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m_test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"init-cpp\"><a href=\"#init-cpp\" class=\"headerlink\" title=\"init.cpp\"></a>init.cpp</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ParametersInit.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit *m_Instance = ParametersInit::<span class=\"built_in\">GetInstance</span>();</span><br><span class=\"line\">m_Instance-&gt;<span class=\"built_in\">camParametersInit</span>(<span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"use1-cpp\"><a href=\"#use1-cpp\" class=\"headerlink\" title=\"use1.cpp\"></a>use1.cpp</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ParametersInit.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit *m_Instance = ParametersInit::<span class=\"built_in\">GetInstance</span>();</span><br><span class=\"line\"><span class=\"comment\">// 这里可以直接使用init.cpp初始化的参数ParametersInit::m_test</span></span><br><span class=\"line\"><span class=\"type\">int</span> m_test = m_Instance-&gt;<span class=\"built_in\">getTest</span>();<span class=\"comment\">//m_test=100</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>参考网站: <a href=\"https://blog.csdn.net/CoderAldrich/article/details/83114881\">https://blog.csdn.net/CoderAldrich/article/details/83114881</a></p>\n</blockquote>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","more":"<h1 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h1><ul>\n<li>当存在一个或多个变量仅初始化一次，却被多个文件多次使用的情况下考虑单例模式</li>\n<li>可实现一次初始化，多文件多次使用</li>\n<li>例如 ：相机的内参和外参一般只初始化一次，然后直接使用。</li>\n</ul>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><h1 id=\"声明与定义\"><a href=\"#声明与定义\" class=\"headerlink\" title=\"声明与定义\"></a>声明与定义</h1><h3 id=\"ParametersInit-h\"><a href=\"#ParametersInit-h\" class=\"headerlink\" title=\"ParametersInit.h\"></a>ParametersInit.h</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> __PARAMETERS_INIT_H__</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> __PARAMETERS_INIT_H__</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for thread-safe singleton</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;pthread.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ParametersInit</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">    <span class=\"type\">static</span> ParametersInit *m_instance;</span><br><span class=\"line\">    <span class=\"type\">static</span> <span class=\"type\">pthread_once_t</span> _once;</span><br><span class=\"line\">    <span class=\"type\">int</span> m_test;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ParametersInit</span>(<span class=\"comment\">/* args */</span>);</span><br><span class=\"line\">    ~<span class=\"built_in\">ParametersInit</span>();</span><br><span class=\"line\">    <span class=\"comment\">//使用pthread_once保证init()只调用一次</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> ParametersInit *<span class=\"title\">GetInstance</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">camParametersInit</span><span class=\"params\">(<span class=\"type\">int</span> in_test)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">getTest</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"ParametersInit-cpp\"><a href=\"#ParametersInit-cpp\" class=\"headerlink\" title=\"ParametersInit.cpp\"></a>ParametersInit.cpp</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;../inc/ParametersInit.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 静态成员函数必须初始化后使用</span></span><br><span class=\"line\"><span class=\"type\">pthread_once_t</span> ParametersInit::_once = <span class=\"number\">0</span>;</span><br><span class=\"line\">ParametersInit *ParametersInit::m_instance=<span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit::<span class=\"built_in\">ParametersInit</span>(<span class=\"comment\">/* args */</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit::~<span class=\"built_in\">ParametersInit</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ParametersInit::init</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!m_instance)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        m_instance = <span class=\"keyword\">new</span> <span class=\"built_in\">ParametersInit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ParametersInit *<span class=\"title\">ParametersInit::GetInstance</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">pthread_once</span>(&amp;_once, ParametersInit::init);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m_instance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ParametersInit::camParametersInit</span><span class=\"params\">(<span class=\"type\">int</span> in_test)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    m_test = in_test;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">ParametersInit::getTest</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> m_test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"init-cpp\"><a href=\"#init-cpp\" class=\"headerlink\" title=\"init.cpp\"></a>init.cpp</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ParametersInit.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit *m_Instance = ParametersInit::<span class=\"built_in\">GetInstance</span>();</span><br><span class=\"line\">m_Instance-&gt;<span class=\"built_in\">camParametersInit</span>(<span class=\"number\">100</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"use1-cpp\"><a href=\"#use1-cpp\" class=\"headerlink\" title=\"use1.cpp\"></a>use1.cpp</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ParametersInit.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">ParametersInit *m_Instance = ParametersInit::<span class=\"built_in\">GetInstance</span>();</span><br><span class=\"line\"><span class=\"comment\">// 这里可以直接使用init.cpp初始化的参数ParametersInit::m_test</span></span><br><span class=\"line\"><span class=\"type\">int</span> m_test = m_Instance-&gt;<span class=\"built_in\">getTest</span>();<span class=\"comment\">//m_test=100</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>参考网站: <a href=\"https://blog.csdn.net/CoderAldrich/article/details/83114881\">https://blog.csdn.net/CoderAldrich/article/details/83114881</a></p>\n</blockquote>\n","categories":[{"name":"设计模式","path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","path":"api/tags/设计模式.json"},{"name":"单例模式","path":"api/tags/单例模式.json"}]}