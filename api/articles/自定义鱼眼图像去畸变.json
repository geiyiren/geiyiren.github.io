{"title":"自定义鱼眼图像去畸变","slug":"自定义鱼眼图像去畸变","date":"2023-02-14T13:56:00.000Z","updated":"2023-11-24T15:10:46.424Z","comments":true,"path":"api/articles/自定义鱼眼图像去畸变.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%B1%BC%E7%9C%BC%E5%9B%BE%E5%83%8F%E5%8E%BB%E7%95%B8%E5%8F%98/0.0-0.0.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.0-1.0.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.3-1.0.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.5-1.0.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/3.0-1.0.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-1.0.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-1.5.png","https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-3.0.png"],"content":"<h1 id=\"畸变图像-rightarrowtail-去畸变图像\"><a href=\"#畸变图像-rightarrowtail-去畸变图像\" class=\"headerlink\" title=\"畸变图像$\\rightarrowtail$ 去畸变图像\"></a>畸变图像$\\rightarrowtail$ 去畸变图像</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> cv::fisheye::<span class=\"built_in\">undistortImage</span>(</span><br><span class=\"line\">    InputArray distorted,            <span class=\"comment\">// 输入的畸变图像</span></span><br><span class=\"line\">    OutputArray undistorted,         <span class=\"comment\">// 输出的去畸变图像</span></span><br><span class=\"line\">    InputArray K,                    <span class=\"comment\">// 相机内参矩阵(3x3)</span></span><br><span class=\"line\">    InputArray D,                    <span class=\"comment\">// 相机畸变系数</span></span><br><span class=\"line\">    InputArray Knew = cv::<span class=\"built_in\">noArray</span>(), <span class=\"comment\">// 新的相机内参矩阵(3x3)</span></span><br><span class=\"line\">    <span class=\"type\">const</span> Size&amp; new_size = <span class=\"built_in\">Size</span>()    <span class=\"comment\">// 新的去畸变图像尺寸</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>new_size</code>一般设置为空，默认输出去畸变图像和畸变图像的尺寸相同。</li>\n<li><code>Knew </code>为新的相机内参矩阵，影响者去畸变之后图像的范围，参数有：<code>fx</code>、<code>fy</code>、<code>cx</code>、<code>cy</code>。<ul>\n<li><code>fx</code>为水平方向的焦距，值越大，水平方向显示图像范围越大。</li>\n<li><code>fy</code>为垂直方向的焦距，值越大，垂直方向显示图像范围越大。</li>\n<li><code>cx</code>主点坐标的x值，值越大，显示图像范围整体越偏左</li>\n<li><code>cy</code>主点坐标的y值，值越大，显示图像范围整体越偏下<blockquote>\n<p><code>cx</code>、<code>cy</code>一般和原应相机的参数一样，这样去畸变后的图像和畸变图像的中心可以对齐；<code>fx</code>、<code>fy</code>需要根据去畸变图像的视野需求进行调整，一般在原相机的参数的基础上进行缩放。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>效果展示<br><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%B1%BC%E7%9C%BC%E5%9B%BE%E5%83%8F%E5%8E%BB%E7%95%B8%E5%8F%98/0.0-0.0.png\" alt=\"原始畸变图像\"><style>\nth, td {\n  text-align: center; /* 设置表头和单元格中的文本居中 */\n}\n</style>\n<table>\n<colgroup>\n  <col style=\"width: 20%;\">\n  <col style=\"width: 20%;\">\n  <col style=\"width: 60%;\">\n</colgroup>\n<tr>\n  <th>fx缩小倍数</th>\n  <th>fy缩小倍数</th>\n  <th>去畸变图像</th>\n</tr>\n<tr>\n  <td>1.0</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.0-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>1.3</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.3-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>1.5</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.5-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>3.0</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/3.0-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>5.0</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>5.0</td>\n  <td>1.5</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-1.5.png\"\"></td>\n</tr>\n<tr>\n  <td>5.0</td>\n  <td>3.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-3.0.png\"\"></td>\n</tr>\n</table></li>\n</ul>\n<h1 id=\"畸变点-rightarrowtail-去畸变点\"><a href=\"#畸变点-rightarrowtail-去畸变点\" class=\"headerlink\" title=\"畸变点$\\rightarrowtail$ 去畸变点\"></a>畸变点$\\rightarrowtail$ 去畸变点</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> cv::fisheye::<span class=\"built_in\">undistortPoints</span>(</span><br><span class=\"line\">    InputArray distorted,          <span class=\"comment\">// 输入的畸变坐标点</span></span><br><span class=\"line\">    OutputArray undistorted,      <span class=\"comment\">// 输出的去畸变坐标点</span></span><br><span class=\"line\">    InputArray K,                  <span class=\"comment\">// 相机内参矩阵(3x3)</span></span><br><span class=\"line\">    InputArray D,                  <span class=\"comment\">// 畸变参数向量</span></span><br><span class=\"line\">    InputArray R = cv::<span class=\"built_in\">noArray</span>(),  <span class=\"comment\">// 旋转矩阵(3x3)，通常是单位矩阵</span></span><br><span class=\"line\">    InputArray P = cv::<span class=\"built_in\">noArray</span>()   <span class=\"comment\">// 投影矩阵(3x3)或新相机内参矩阵Knew(3x3)</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这个函数可以直接向畸变图像上的点转换为去畸变图像上的点，也可以利用<code>R</code>,<code>P</code>矩阵将畸变图像上的点转换为世界坐标系中。</p>\n</blockquote>\n<p><strong>注意</strong>：这里转换为去畸变图像上的点时，不支持图像缩放，仅支持新的内参矩阵，因此图像在去畸变时，一般不改变图像的大小，保证点去畸变时可以与之对应。</p>\n<h1 id=\"去畸变点-rightarrowtail-畸变点\"><a href=\"#去畸变点-rightarrowtail-畸变点\" class=\"headerlink\" title=\"去畸变点$\\rightarrowtail$ 畸变点\"></a>去畸变点$\\rightarrowtail$ 畸变点</h1><p>没有直接的函数将畸变点转换为去畸变点，但是可以利用map映射函数获得映射点来进行转换。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> cv::fisheye::<span class=\"built_in\">initUndistortRectifyMap</span>(</span><br><span class=\"line\">    InputArray K,              <span class=\"comment\">// 相机内参矩阵 (3x3)</span></span><br><span class=\"line\">    InputArray D,              <span class=\"comment\">// 畸变参数向量</span></span><br><span class=\"line\">    InputArray R,              <span class=\"comment\">// 旋转矩阵 (3x3)</span></span><br><span class=\"line\">    InputArray P,              <span class=\"comment\">// 新相机矩阵 (3x3)</span></span><br><span class=\"line\">    <span class=\"type\">const</span> Size&amp; size,          <span class=\"comment\">// 输出映射的图像尺寸</span></span><br><span class=\"line\">    <span class=\"type\">int</span> m1type,                <span class=\"comment\">// 映射矩阵的数据类型 (例如：CV_32FC1)</span></span><br><span class=\"line\">    OutputArray map1,          <span class=\"comment\">// 输出的第一个映射</span></span><br><span class=\"line\">    OutputArray map2           <span class=\"comment\">// 输出的第二个映射</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里<code>map1</code>、<code>map2</code>为映射矩阵，类型为<code>cv::Mat</code>,尺寸为<code>size</code>，也就是说这个<code>Mat</code>的尺寸就是去畸变图像的尺寸，每个位置存储的值为对应畸变图像上点的<code>x</code>值或者<code>y</code>值。这样我们就可以访问这个<code>Mat</code>中每个像素值，进而得到去畸变点对应的畸变点坐标。</p>\n<blockquote>\n<p>众所周知，map映射时存储的映射关系一般为相反的</p>\n</blockquote>\n<ul>\n<li>使用方法<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化映射表</span></span><br><span class=\"line\">cv::Mat map_x, map_y;</span><br><span class=\"line\">std::vector&lt;cv::Point2f&gt; image_points_dist, image_points_undist_new;</span><br><span class=\"line\">cv::fisheye::<span class=\"built_in\">initUndistortRectifyMap</span>(cam_K[cam_index], cam_D[cam_index], cv::Mat::<span class=\"built_in\">eye</span>(<span class=\"number\">3</span>, <span class=\"number\">3</span>, CV_32FC1), cam_K_new[cam_index], cv::<span class=\"built_in\">Size</span>(CAMERA_WIDTH, CAMERA_HEIGHT), CV_32FC1, map_x, map_y);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> point : image_points_undist)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cv::Point2f point_undist = cv::<span class=\"built_in\">Point2f</span>(point.x,</span><br><span class=\"line\">                                           point.y);</span><br><span class=\"line\">    image_points_dist.<span class=\"built_in\">emplace_back</span>(cv::<span class=\"built_in\">Point2f</span>(map_x.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(point_undist), map_y.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(point_undist)));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>注意</strong>: 这里的输出映射的图像尺寸需要为畸变图像的原始尺寸<code>cv::Size(CAMERA_WIDTH, CAMERA_HEIGHT)</code>,旋转矩阵应该为单位矩阵，新相机矩阵与去畸变时的设置保持一直即可。</p>\n<h1 id=\"代码-undist-cpp\"><a href=\"#代码-undist-cpp\" class=\"headerlink\" title=\"代码: undist.cpp\"></a>代码: <code>undist.cpp</code></h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/highgui/highgui.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> UNDIST_SCALE (2.5)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @description: 输入畸变图，输出去畸变图</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Mat&#125; &amp;img_dist</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Mat&#125; &amp;img_undist</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * @author: wangshuaiyang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DistToUndistImage</span><span class=\"params\">(cv::Mat img_dist, cv::Mat &amp;img_undist)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    cv::Mat cam_K = (cv::<span class=\"built_in\">Mat_</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">3</span>) &lt;&lt; <span class=\"number\">319.307046915</span>, <span class=\"number\">0</span>, <span class=\"number\">640</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>, <span class=\"number\">319.715597621</span>, <span class=\"number\">360</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    cv::Mat cam_D = (cv::<span class=\"built_in\">Mat_</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">4</span>, <span class=\"number\">1</span>) &lt;&lt; <span class=\"number\">0.07218855</span>, <span class=\"number\">0.02228145</span>, <span class=\"number\">-0.015075182</span>, <span class=\"number\">0.002351672</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 新的相机内参矩阵和图像尺寸（可选）</span></span><br><span class=\"line\">    cv::Mat cam_K_new = cam_K.<span class=\"built_in\">clone</span>();</span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">0</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">0</span>)/<span class=\"number\">5.0</span>;     <span class=\"comment\">// fx</span></span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">1</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">1</span>)/<span class=\"number\">1.5</span>;     <span class=\"comment\">// fy</span></span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">2</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">2</span>); <span class=\"comment\">// cx</span></span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">2</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// cy</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cv::fisheye::<span class=\"built_in\">undistortImage</span>(img_dist, img_undist, cam_K, cam_D, cam_K_new);</span><br><span class=\"line\"></span><br><span class=\"line\">    cv::<span class=\"built_in\">resize</span>(img_undist, img_undist, img_dist.<span class=\"built_in\">size</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    cv::<span class=\"built_in\">imshow</span>(<span class=\"string\">&quot;image_remap_fish&quot;</span>, img_undist);</span><br><span class=\"line\">    cv::<span class=\"built_in\">waitKey</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cv::Mat img = cv::<span class=\"built_in\">imread</span>(<span class=\"string\">&quot;picture_back.png&quot;</span>, cv::IMREAD_COLOR);</span><br><span class=\"line\">    cv::Mat undist_img;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret = <span class=\"built_in\">DistToUndistImage</span>(img, undist_img);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编译</li>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ undist.cpp -o undist -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_imgcodecs -lopencv_calib3d</span><br></pre></td></tr></table></figure></li>\n</ul>\n<script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text&#x2F;javascript\" src=\"https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text&#x2F;javascript\" src=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css\">","more":"<h1 id=\"畸变图像-rightarrowtail-去畸变图像\"><a href=\"#畸变图像-rightarrowtail-去畸变图像\" class=\"headerlink\" title=\"畸变图像$\\rightarrowtail$ 去畸变图像\"></a>畸变图像$\\rightarrowtail$ 去畸变图像</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> cv::fisheye::<span class=\"built_in\">undistortImage</span>(</span><br><span class=\"line\">    InputArray distorted,            <span class=\"comment\">// 输入的畸变图像</span></span><br><span class=\"line\">    OutputArray undistorted,         <span class=\"comment\">// 输出的去畸变图像</span></span><br><span class=\"line\">    InputArray K,                    <span class=\"comment\">// 相机内参矩阵(3x3)</span></span><br><span class=\"line\">    InputArray D,                    <span class=\"comment\">// 相机畸变系数</span></span><br><span class=\"line\">    InputArray Knew = cv::<span class=\"built_in\">noArray</span>(), <span class=\"comment\">// 新的相机内参矩阵(3x3)</span></span><br><span class=\"line\">    <span class=\"type\">const</span> Size&amp; new_size = <span class=\"built_in\">Size</span>()    <span class=\"comment\">// 新的去畸变图像尺寸</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>new_size</code>一般设置为空，默认输出去畸变图像和畸变图像的尺寸相同。</li>\n<li><code>Knew </code>为新的相机内参矩阵，影响者去畸变之后图像的范围，参数有：<code>fx</code>、<code>fy</code>、<code>cx</code>、<code>cy</code>。<ul>\n<li><code>fx</code>为水平方向的焦距，值越大，水平方向显示图像范围越大。</li>\n<li><code>fy</code>为垂直方向的焦距，值越大，垂直方向显示图像范围越大。</li>\n<li><code>cx</code>主点坐标的x值，值越大，显示图像范围整体越偏左</li>\n<li><code>cy</code>主点坐标的y值，值越大，显示图像范围整体越偏下<blockquote>\n<p><code>cx</code>、<code>cy</code>一般和原应相机的参数一样，这样去畸变后的图像和畸变图像的中心可以对齐；<code>fx</code>、<code>fy</code>需要根据去畸变图像的视野需求进行调整，一般在原相机的参数的基础上进行缩放。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>效果展示<br><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%B1%BC%E7%9C%BC%E5%9B%BE%E5%83%8F%E5%8E%BB%E7%95%B8%E5%8F%98/0.0-0.0.png\" alt=\"原始畸变图像\"><style>\nth, td {\n  text-align: center; /* 设置表头和单元格中的文本居中 */\n}\n</style>\n<table>\n<colgroup>\n  <col style=\"width: 20%;\">\n  <col style=\"width: 20%;\">\n  <col style=\"width: 60%;\">\n</colgroup>\n<tr>\n  <th>fx缩小倍数</th>\n  <th>fy缩小倍数</th>\n  <th>去畸变图像</th>\n</tr>\n<tr>\n  <td>1.0</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.0-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>1.3</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.3-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>1.5</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/1.5-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>3.0</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/3.0-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>5.0</td>\n  <td>1.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-1.0.png\"\"></td>\n</tr>\n<tr>\n  <td>5.0</td>\n  <td>1.5</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-1.5.png\"\"></td>\n</tr>\n<tr>\n  <td>5.0</td>\n  <td>3.0</td>\n  <td><img src=\"https://cdn.jsdelivr.net/gh/geiyiren/MyBlogImage1/自定义鱼眼图像去畸变/5.0-3.0.png\"\"></td>\n</tr>\n</table></li>\n</ul>\n<h1 id=\"畸变点-rightarrowtail-去畸变点\"><a href=\"#畸变点-rightarrowtail-去畸变点\" class=\"headerlink\" title=\"畸变点$\\rightarrowtail$ 去畸变点\"></a>畸变点$\\rightarrowtail$ 去畸变点</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> cv::fisheye::<span class=\"built_in\">undistortPoints</span>(</span><br><span class=\"line\">    InputArray distorted,          <span class=\"comment\">// 输入的畸变坐标点</span></span><br><span class=\"line\">    OutputArray undistorted,      <span class=\"comment\">// 输出的去畸变坐标点</span></span><br><span class=\"line\">    InputArray K,                  <span class=\"comment\">// 相机内参矩阵(3x3)</span></span><br><span class=\"line\">    InputArray D,                  <span class=\"comment\">// 畸变参数向量</span></span><br><span class=\"line\">    InputArray R = cv::<span class=\"built_in\">noArray</span>(),  <span class=\"comment\">// 旋转矩阵(3x3)，通常是单位矩阵</span></span><br><span class=\"line\">    InputArray P = cv::<span class=\"built_in\">noArray</span>()   <span class=\"comment\">// 投影矩阵(3x3)或新相机内参矩阵Knew(3x3)</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这个函数可以直接向畸变图像上的点转换为去畸变图像上的点，也可以利用<code>R</code>,<code>P</code>矩阵将畸变图像上的点转换为世界坐标系中。</p>\n</blockquote>\n<p><strong>注意</strong>：这里转换为去畸变图像上的点时，不支持图像缩放，仅支持新的内参矩阵，因此图像在去畸变时，一般不改变图像的大小，保证点去畸变时可以与之对应。</p>\n<h1 id=\"去畸变点-rightarrowtail-畸变点\"><a href=\"#去畸变点-rightarrowtail-畸变点\" class=\"headerlink\" title=\"去畸变点$\\rightarrowtail$ 畸变点\"></a>去畸变点$\\rightarrowtail$ 畸变点</h1><p>没有直接的函数将畸变点转换为去畸变点，但是可以利用map映射函数获得映射点来进行转换。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> cv::fisheye::<span class=\"built_in\">initUndistortRectifyMap</span>(</span><br><span class=\"line\">    InputArray K,              <span class=\"comment\">// 相机内参矩阵 (3x3)</span></span><br><span class=\"line\">    InputArray D,              <span class=\"comment\">// 畸变参数向量</span></span><br><span class=\"line\">    InputArray R,              <span class=\"comment\">// 旋转矩阵 (3x3)</span></span><br><span class=\"line\">    InputArray P,              <span class=\"comment\">// 新相机矩阵 (3x3)</span></span><br><span class=\"line\">    <span class=\"type\">const</span> Size&amp; size,          <span class=\"comment\">// 输出映射的图像尺寸</span></span><br><span class=\"line\">    <span class=\"type\">int</span> m1type,                <span class=\"comment\">// 映射矩阵的数据类型 (例如：CV_32FC1)</span></span><br><span class=\"line\">    OutputArray map1,          <span class=\"comment\">// 输出的第一个映射</span></span><br><span class=\"line\">    OutputArray map2           <span class=\"comment\">// 输出的第二个映射</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>这里<code>map1</code>、<code>map2</code>为映射矩阵，类型为<code>cv::Mat</code>,尺寸为<code>size</code>，也就是说这个<code>Mat</code>的尺寸就是去畸变图像的尺寸，每个位置存储的值为对应畸变图像上点的<code>x</code>值或者<code>y</code>值。这样我们就可以访问这个<code>Mat</code>中每个像素值，进而得到去畸变点对应的畸变点坐标。</p>\n<blockquote>\n<p>众所周知，map映射时存储的映射关系一般为相反的</p>\n</blockquote>\n<ul>\n<li>使用方法<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 初始化映射表</span></span><br><span class=\"line\">cv::Mat map_x, map_y;</span><br><span class=\"line\">std::vector&lt;cv::Point2f&gt; image_points_dist, image_points_undist_new;</span><br><span class=\"line\">cv::fisheye::<span class=\"built_in\">initUndistortRectifyMap</span>(cam_K[cam_index], cam_D[cam_index], cv::Mat::<span class=\"built_in\">eye</span>(<span class=\"number\">3</span>, <span class=\"number\">3</span>, CV_32FC1), cam_K_new[cam_index], cv::<span class=\"built_in\">Size</span>(CAMERA_WIDTH, CAMERA_HEIGHT), CV_32FC1, map_x, map_y);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> point : image_points_undist)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cv::Point2f point_undist = cv::<span class=\"built_in\">Point2f</span>(point.x,</span><br><span class=\"line\">                                           point.y);</span><br><span class=\"line\">    image_points_dist.<span class=\"built_in\">emplace_back</span>(cv::<span class=\"built_in\">Point2f</span>(map_x.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(point_undist), map_y.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(point_undist)));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><strong>注意</strong>: 这里的输出映射的图像尺寸需要为畸变图像的原始尺寸<code>cv::Size(CAMERA_WIDTH, CAMERA_HEIGHT)</code>,旋转矩阵应该为单位矩阵，新相机矩阵与去畸变时的设置保持一直即可。</p>\n<h1 id=\"代码-undist-cpp\"><a href=\"#代码-undist-cpp\" class=\"headerlink\" title=\"代码: undist.cpp\"></a>代码: <code>undist.cpp</code></h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/highgui/highgui.hpp&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> UNDIST_SCALE (2.5)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @description: 输入畸变图，输出去畸变图</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Mat&#125; &amp;img_dist</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Mat&#125; &amp;img_undist</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;*&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * @author: wangshuaiyang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DistToUndistImage</span><span class=\"params\">(cv::Mat img_dist, cv::Mat &amp;img_undist)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    cv::Mat cam_K = (cv::<span class=\"built_in\">Mat_</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">3</span>) &lt;&lt; <span class=\"number\">319.307046915</span>, <span class=\"number\">0</span>, <span class=\"number\">640</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>, <span class=\"number\">319.715597621</span>, <span class=\"number\">360</span>,</span><br><span class=\"line\">                <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    cv::Mat cam_D = (cv::<span class=\"built_in\">Mat_</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">4</span>, <span class=\"number\">1</span>) &lt;&lt; <span class=\"number\">0.07218855</span>, <span class=\"number\">0.02228145</span>, <span class=\"number\">-0.015075182</span>, <span class=\"number\">0.002351672</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 新的相机内参矩阵和图像尺寸（可选）</span></span><br><span class=\"line\">    cv::Mat cam_K_new = cam_K.<span class=\"built_in\">clone</span>();</span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">0</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">0</span>)/<span class=\"number\">5.0</span>;     <span class=\"comment\">// fx</span></span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">1</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">1</span>)/<span class=\"number\">1.5</span>;     <span class=\"comment\">// fy</span></span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">2</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">0</span>, <span class=\"number\">2</span>); <span class=\"comment\">// cx</span></span><br><span class=\"line\">    cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">2</span>) = cam_K_new.<span class=\"built_in\">at</span>&lt;<span class=\"type\">float</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// cy</span></span><br><span class=\"line\"></span><br><span class=\"line\">    cv::fisheye::<span class=\"built_in\">undistortImage</span>(img_dist, img_undist, cam_K, cam_D, cam_K_new);</span><br><span class=\"line\"></span><br><span class=\"line\">    cv::<span class=\"built_in\">resize</span>(img_undist, img_undist, img_dist.<span class=\"built_in\">size</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    cv::<span class=\"built_in\">imshow</span>(<span class=\"string\">&quot;image_remap_fish&quot;</span>, img_undist);</span><br><span class=\"line\">    cv::<span class=\"built_in\">waitKey</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>  <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cv::Mat img = cv::<span class=\"built_in\">imread</span>(<span class=\"string\">&quot;picture_back.png&quot;</span>, cv::IMREAD_COLOR);</span><br><span class=\"line\">    cv::Mat undist_img;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret = <span class=\"built_in\">DistToUndistImage</span>(img, undist_img);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编译</li>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ undist.cpp -o undist -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_imgcodecs -lopencv_calib3d</span><br></pre></td></tr></table></figure></li>\n</ul>\n","categories":[{"name":"opencv","path":"api/categories/opencv.json"}],"tags":[{"name":"opencv","path":"api/tags/opencv.json"},{"name":"c++","path":"api/tags/c++.json"}]}