<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/samples/hal/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/samples/hal/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Custom-HAL-samples"><a href="#Custom-HAL-samples" class="headerlink" title="Custom HAL samples"></a>Custom HAL samples</h1><p>Samples in this folder are intended to demonstrate functionality replacement mechanism in the OpenCV library.</p><p>The <strong>c_hal</strong> is the example of pure C replacement library with all functions returning error. It can be used to verify error handling in the function switching code.</p><p>The <strong>slow_hal</strong> contains naive C++ implementations of the element-wise logical array operations (and, or, xor, not) making them twice slower than the default.</p><h2 id="Build-custom-HAL-replacement-library"><a href="#Build-custom-HAL-replacement-library" class="headerlink" title="Build custom HAL replacement library"></a>Build custom HAL replacement library</h2><ol><li>Create folder for build (for example <code>&lt;home-dir&gt;/my-hal-build</code>)</li><li>Go to the created folder and run cmake: <code>cmake &lt;opencv-src&gt;/samples/hal/slow_hal</code></li><li>Run make</li></ol><p>After build you will find static library in the build folder: <code>libslow_hal.a</code></p><h2 id="Build-OpenCV-with-HAL-replacement"><a href="#Build-OpenCV-with-HAL-replacement" class="headerlink" title="Build OpenCV with HAL replacement"></a>Build OpenCV with HAL replacement</h2><ol><li>Create folder for build (for example <code>&lt;home-dir&gt;/my-opencv-build</code>)</li><li>Go to the created folder and run cmake: <pre class="line-numbers language-none"><code class="language-none">cmake \    -DOpenCV_HAL_DIR&#x3D;&quot;&lt;home-dir&gt;&#x2F;my-hal-build&#x2F;&quot; \    &lt;opencv-src&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>Run make (or <code>make opencv_perf_core</code> to build the demonstration test executable only)</li><li>After build you can run the tests and verify that some functions works slower: <pre class="line-numbers language-none"><code class="language-none">.&#x2F;bin&#x2F;opencv_perf_core --gtest_filter&#x3D;*bitwise_and*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/platforms/wince/readme/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/platforms/wince/readme/</url>
      
        <content type="html"><![CDATA[<h1 id="Building-OpenCV-from-Source-for-Windows-Embedded-Compact-WINCE-x2F-WEC"><a href="#Building-OpenCV-from-Source-for-Windows-Embedded-Compact-WINCE-x2F-WEC" class="headerlink" title="Building OpenCV from Source for Windows Embedded Compact (WINCE&#x2F;WEC)"></a>Building OpenCV from Source for Windows Embedded Compact (WINCE&#x2F;WEC)</h1><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><p>CMake 3.1.0 or higher<br>Windows Embedded Compact SDK</p><h2 id="Configuring"><a href="#Configuring" class="headerlink" title="Configuring"></a>Configuring</h2><p>To configure CMake for Windows Embedded, specify Visual Studio 2013 as generator and the name of your installed SDK:</p><p><code>cmake -G &quot;Visual Studio 12 2013&quot; -A &quot;MySDK WEC2013&quot; -DCMAKE_TOOLCHAIN_FILE:FILEPATH=../platforms/wince/arm-wince.toolchain.cmake</code></p><p>If you are building for a headless WINCE, specify <code>-DBUILD_HEADLESS=ON</code> when configuring. This will remove the <code>commctrl.lib</code> dependency.</p><p>If you are building for anything else than WINCE800, you need to specify that in the configuration step. Example:</p><pre class="line-numbers language-none"><code class="language-none">-DCMAKE_SYSTEM_VERSION&#x3D;7.0 -DCMAKE_GENERATOR_TOOLSET&#x3D;CE700 -DCMAKE_SYSTEM_PROCESSOR&#x3D;arm-v4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>For headless WEC2013, this configuration may not be limited to but is known to work:</p><pre class="line-numbers language-none"><code class="language-none">-DBUILD_EXAMPLES&#x3D;OFF &#96;-DBUILD_opencv_apps&#x3D;OFF &#96;-DBUILD_opencv_calib3d&#x3D;OFF &#96;-DBUILD_opencv_highgui&#x3D;OFF &#96;-DBUILD_opencv_features2d&#x3D;OFF &#96;-DBUILD_opencv_flann&#x3D;OFF &#96;-DBUILD_opencv_ml&#x3D;OFF &#96;-DBUILD_opencv_objdetect&#x3D;OFF &#96;-DBUILD_opencv_photo&#x3D;OFF &#96;-DBUILD_opencv_shape&#x3D;OFF &#96;-DBUILD_opencv_stitching&#x3D;OFF &#96;-DBUILD_opencv_superres&#x3D;OFF &#96;-DBUILD_opencv_ts&#x3D;OFF &#96;-DBUILD_opencv_video&#x3D;OFF &#96;-DBUILD_opencv_videoio&#x3D;OFF &#96;-DBUILD_opencv_videostab&#x3D;OFF &#96;-DBUILD_opencv_dnn&#x3D;OFF &#96;-DBUILD_opencv_java&#x3D;OFF &#96;-DBUILD_opencv_python2&#x3D;OFF &#96;-DBUILD_opencv_python3&#x3D;OFF &#96;-DBUILD_opencv_java_bindings_generator&#x3D;OFF &#96;-DBUILD_opencv_python_bindings_generator&#x3D;OFF &#96;-DBUILD_TIFF&#x3D;OFF &#96;-DCV_TRACE&#x3D;OFF &#96;-DWITH_OPENCL&#x3D;OFF &#96;-DHAVE_OPENCL&#x3D;OFF &#96;-DWITH_QT&#x3D;OFF &#96;-DWITH_GTK&#x3D;OFF &#96;-DWITH_QUIRC&#x3D;OFF &#96;-DWITH_JASPER&#x3D;OFF &#96;-DWITH_WEBP&#x3D;OFF &#96;-DWITH_PROTOBUF&#x3D;OFF &#96;-DBUILD_SHARED_LIBS&#x3D;OFF &#96;-DWITH_OPENEXR&#x3D;OFF &#96;-DWITH_TIFF&#x3D;OFF &#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Configuring-to-build-as-shared"><a href="#Configuring-to-build-as-shared" class="headerlink" title="Configuring to build as shared"></a>Configuring to build as shared</h2><p>Building OpenCV as shared libraries is as easy as appending</p><pre class="line-numbers language-none"><code class="language-none">-DBUILD_SHARED_LIBS&#x3D;ON &#96;-DBUILD_ZLIB&#x3D;ON<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>to the build configuration.</p><h2 id="Building"><a href="#Building" class="headerlink" title="Building"></a>Building</h2><p>You are required to build using Unicode:<br><code>cmake --build . -- /p:CharacterSet=Unicode</code></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/platforms/js/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/platforms/js/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Building-OpenCV-js-by-Emscripten"><a href="#Building-OpenCV-js-by-Emscripten" class="headerlink" title="Building OpenCV.js by Emscripten"></a>Building OpenCV.js by Emscripten</h1><p><a href="https://emscripten.org/docs/getting_started/downloads.html">Download and install Emscripten</a>.</p><p>Execute <code>build_js.py</code> script:</p><pre class="line-numbers language-none"><code class="language-none">emcmake python &lt;opencv_src_dir&gt;&#x2F;platforms&#x2F;js&#x2F;build_js.py &lt;build_dir&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>If everything is fine, a few minutes later you will get <code>&lt;build_dir&gt;/bin/opencv.js</code>. You can add this into your web pages.</p><p>Find out more build options by <code>-h</code> switch.</p><p>For detailed build tutorial, check out <code>&lt;opencv_src_dir&gt;/doc/js_tutorials/js_setup/js_setup/js_setup.markdown</code>.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/platforms/maven/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/platforms/maven/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Using-Maven-to-build-OpenCV"><a href="#Using-Maven-to-build-OpenCV" class="headerlink" title="Using Maven to build OpenCV"></a>Using Maven to build OpenCV</h1><p>This page describes the how to build OpenCV using <a href="http://maven.apache.org/index.html">Apache Maven</a>. The Maven build is simply a wrapper around the existing CMake process but has the additional aims of creating Java OSGi-compatible bundles with included native support and also allow the build to be carried out on RaspberryPi (ARM) architecture. There is nothing preventing using the POM on x86 Linux however.</p><p>The following assumes building on Debian-based Linux platform.</p><h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1 - Overview"></a>1 - Overview</h2><p>The Maven build process aims to:</p><ol><li>Provide a simpler route to build OpenCV and Java bundles.</li><li>Automatically check the required native dependencies.</li><li>Make the Java libraries OSGi compatible.</li><li>Include the native OpenCV native library inside the Java bundle.</li><li>Integration testing of the bundle within an OSGi environment.</li><li>Allow the build to function on x86, x86_64 or amd architectures, Debian-based Linux platform.</li></ol><h3 id="2-Preparing-The-Build-environment"><a href="#2-Preparing-The-Build-environment" class="headerlink" title="2 - Preparing The Build environment"></a>2 - Preparing The Build environment</h3><p>To build using the Maven build process both <code>Maven</code> and and up-to-date <code>JDK</code> (Java Development Kit) need to be installed. If you know you already have these installed then continue to <code>Environment Variable</code> otherwise the easiest solution is to install them using the aptitude package manager:</p><p><code>sudo aptitude install maven default-jdk</code></p><p>Note that installing via <code>aptitude</code> you are unlikely to get the latest version of Maven or JDK although if you are not developing Java code this shouldn’t matter for this build process.</p><h3 id="3-Starting-the-build"><a href="#3-Starting-the-build" class="headerlink" title="3 - Starting the build"></a>3 - Starting the build</h3><h4 id="3-1-Environment-variables"><a href="#3-1-Environment-variables" class="headerlink" title="3.1 - Environment variables"></a>3.1 - Environment variables</h4><p><strong>Applicability:</strong> All processors.</p><p>   The following environment variables must be set otherwise the build will fail and halt:</p><ul><li><code>$JAVA_HOME</code> (the absolute path to the JDK root directory)</li><li><code>$ANT_HOME</code> (the absolute path to the Ant root directory)</li></ul><p>It is recommended that advantage is taken of multiple processor cores to reduce build time. This can be done by setting a MAKEFLAGS environment variable specifying the number of parallel builds e.g.:</p><ul><li><code>$MAKEFLAGS=&quot;-j8&quot;</code></li></ul><p>However if this flag is not set the build will NOT fail. On a RaspberryPi 2 typical build times are 5 hours with <code>-j1</code> (which is the default if <code>$MAKEFLAGS</code> is not specified) and a little over 2 hours with <code>-j4</code>.</p><p>All of the above environment variables can be set on an ad-hoc basis using ‘export’.</p><h4 id="3-2-Build-Directory"><a href="#3-2-Build-Directory" class="headerlink" title="3.2 - Build Directory"></a>3.2 - Build Directory</h4><p><strong>Applicability:</strong> All processors</p><p>By default the following build directories are created.</p><p><code>&lt;OpenCV_root_dir&gt;/build</code></p><p><code>&lt;OpenCV_root_dir&gt;/build/maven/opencv/target</code></p><p><code>&lt;OpenCV_root_dir&gt;/build/maven/opencv-it/target</code></p><p>Under <code>build</code> are the standard OpenCV artifacts. Under <code>build/maven/opencv/target</code> can be found the OSGi compatible Java bundle. When deploying the bundle into an OSGi framework e.g. <a href="http://karaf.apache.org/">Apache Karaf</a>, loading of the native library is automatically taken care of. An integration testing module is created under the <code>opencv-it</code> directory and is only of use during the build but is disabled by fault. The standard Java library as created by the CMake process is also available as specified in the existing OpenCV documentation.</p><p>The Maven build is initiated from the directory contain the <code>pom.xml</code> file.</p><h4 id="3-3-x86-or-x86-64-Architecture"><a href="#3-3-x86-or-x86-64-Architecture" class="headerlink" title="3.3 - x86 or x86_64 Architecture:"></a>3.3 - x86 or x86_64 Architecture:</h4><p>Generally all that is required is the standard Maven command:</p><p><code>mvn clean install</code></p><p>One of the first things the build will do is check the required native dependencies. The Maven build indicates the status of the required dependencies and will fail at this point if any are missing. Install using the package manager e.g. aptitude or apt-get, and restart the build with the above command.</p><p>Once the build successfully completes the OSGi compatible artifacts are available as described above in ‘Build Directory’.</p><h4 id="3-4-ARM-32-bit-Architecture-Raspbian-Distribution"><a href="#3-4-ARM-32-bit-Architecture-Raspbian-Distribution" class="headerlink" title="3.4 - ARM 32-bit Architecture - Raspbian Distribution"></a>3.4 - ARM 32-bit Architecture - Raspbian Distribution</h4><p>Similar to the x86 architecture the native dependencies are first checked so install any that are missing, however at the time of writing there are no official <code>libtbb2</code> and <code>libtbb-dev</code> packages in Raspbian. Version 4.4.3 of Intel’s Thread Building Blocks library are available <a href="http://www.javatechnics.com/thread-building-blocks-tbb-4-4-3-for-raspbian">here</a> as a Raspbian-compatible Debian packages.</p><p><strong>PLEASE NOTE THESE ARE NOT OFFICIAL RASPBIAN PACKAGES. INSTALL AT YOUR OWN RISK.</strong></p><p>The build can be started with the following command:</p><p><code>mvn clean install</code></p><p>Upon a successful build the libraries will be available as described above in ‘Build Directory’.</p><h4 id="3-5-CMake"><a href="#3-5-CMake" class="headerlink" title="3.5 CMake"></a>3.5 CMake</h4><p><strong>Applicability:</strong> x86 processors</p><p>The CMake Maven plugin is configured to use the native CMake package (recommended) i.e. it will NOT download the latest CMake binary. Should you require CMake download then include the following Maven commandline switch when building:</p><p> <code>-Ddownload.cmake=true</code></p><h4 id="3-6-Integration-Tests"><a href="#3-6-Integration-Tests" class="headerlink" title="3.6 Integration Tests"></a>3.6 Integration Tests</h4><p> <strong>Applicability:</strong> All processors</p><p> OSGi integration tests can be run as part of the build by including the following commandline switch to Maven:</p><p> <code>-Pintegration</code></p><h3 id="4-0-Maintainer-Notes"><a href="#4-0-Maintainer-Notes" class="headerlink" title="4.0 Maintainer Notes"></a>4.0 Maintainer Notes</h3><p>This section is relevant to those maintaining the Maven platform build. If you just want to build the library then you do not need to refer to this section.</p><h4 id="4-1-Updating-POM-Version-to-Match-Core-Version"><a href="#4-1-Updating-POM-Version-to-Match-Core-Version" class="headerlink" title="4.1 Updating POM Version to Match Core Version"></a>4.1 Updating POM Version to Match Core Version</h4><p>Maven requires the version to be hard-coded in the POM or in otherwords it cannot be changed at runtime. When the core C&#x2F;C++ code version changes it is easy to forget to update the Maven version. The POM utilises the enforcer plugin to ensure the POM and Core versions match causing the build to fail if they do not.</p><p>Should the POM version require updating then this can be done utilising the Maven ‘versions’ plugin and this will apply the correct version to all POMs within the project. Execute the following Maven command from the root directory of the Maven project:</p><p><code>mvn versions:set -DnewVersion=$(. ./opencv/scripts/functions &amp;&amp; cd ./opencv/scripts &amp;&amp; extract_version &amp;&amp; echo $REPLY)</code></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/xobjdetect/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/xobjdetect/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Object-Detection-using-Boosted-Features"><a href="#Object-Detection-using-Boosted-Features" class="headerlink" title="Object Detection using Boosted Features"></a>Object Detection using Boosted Features</h1><p>Uses a Waldboost cascade and local binary patterns computed as integral features for 2D object detection.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/xphoto/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/xphoto/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Additional-photo-processing-algorithms"><a href="#Additional-photo-processing-algorithms" class="headerlink" title="Additional photo processing algorithms"></a>Additional photo processing algorithms</h1><ol><li>Color balance</li><li>Denoising</li><li>Inpainting</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/ximgproc/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/ximgproc/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Extended-Image-Processing"><a href="#Extended-Image-Processing" class="headerlink" title="Extended Image Processing"></a>Extended Image Processing</h1><ul><li>Structured Forests</li><li>Edge Boxes</li><li>Domain Transform Filter</li><li>Guided Filter</li><li>Adaptive Manifold Filter</li><li>Joint Bilateral Filter</li><li>Superpixels</li><li>Graph segmentation</li><li>Selective search from segmentation</li><li>Paillou Filter</li><li>Fast Line Detector</li><li>Deriche Filter</li><li>Pei&amp;Lin Normalization</li><li>Ridge Detection Filter</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/xfeatures2d/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/xfeatures2d/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Extra-2D-Features-Framework"><a href="#Extra-2D-Features-Framework" class="headerlink" title="Extra 2D Features Framework"></a>Extra 2D Features Framework</h1><ol><li>Experimental 2D feature algorithms</li><li>Non-free 2D feature algorithms</li></ol><p>Extra 2D Features Framework containing experimental and non-free 2D feature detector&#x2F;descriptor algorithms:<br> SURF, BRIEF, Censure, Freak, LUCID, Daisy, Self-similar.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/tracking/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/tracking/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Object-tracking-API"><a href="#Object-tracking-API" class="headerlink" title="Object tracking API"></a>Object tracking API</h1><p>Use and&#x2F;or evaluate one of 5 different visual object tracking techniques.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/surface_matching/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/surface_matching/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Point-Pair-Features-for-3D-Surface-Matching"><a href="#Point-Pair-Features-for-3D-Surface-Matching" class="headerlink" title="Point Pair Features for 3D Surface Matching"></a>Point Pair Features for 3D Surface Matching</h1><p>Implements 3d object detection and localization using multimodal point pair features.<br><a href="http://docs.opencv.org/3.0-beta/modules/surface_matching/doc/surface_matching.html">http://docs.opencv.org/3.0-beta/modules/surface_matching/doc/surface_matching.html</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/structured_light/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/structured_light/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Structured-Light-Use"><a href="#Structured-Light-Use" class="headerlink" title="Structured Light Use"></a>Structured Light Use</h1><p>How to generate and project gray code patterns and use them to find dense depth in a scene.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/stereo/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/stereo/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Stereo-Correspondence-with-different-descriptors"><a href="#Stereo-Correspondence-with-different-descriptors" class="headerlink" title="Stereo Correspondence with different descriptors"></a>Stereo Correspondence with different descriptors</h1><p>Stereo matching done with different descriptors: Census &#x2F; CS-Census &#x2F; MCT &#x2F; BRIEF &#x2F; MV.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/sfm/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/sfm/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Structure-From-Motion-module"><a href="#Structure-From-Motion-module" class="headerlink" title="Structure From Motion module"></a>Structure From Motion module</h1><p>This module contains algorithms to perform 3d reconstruction from 2d images. The core of the module is a light version of <a href="https://developer.blender.org/project/profile/59">Libmv</a>, which is a Library for Multiview Reconstruction (or LMV) divided into different modules (correspondence&#x2F;numeric&#x2F;multiview&#x2F;simple_pipeline) that allow to resolve part of the SfM process.</p><h2 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h2><p>Before compiling, take a look at the following details in order to give a proper use of the Structure from Motion module. <strong>Advice:</strong> The module is only available for Linux&#x2F;GNU systems.</p><p>In addition, it depends on some open source libraries:</p><ul><li><a href="http://eigen.tuxfamily.org/index.php?title=Main_Page">Eigen</a> 3.2.2 or later. <strong>Required</strong></li><li><a href="http://code.google.com/p/google-glog">Google Log</a> 0.3.1 or later. <strong>Required</strong></li><li><a href="http://code.google.com/p/gflags">Google Flags</a>. <strong>Required</strong></li><li><a href="http://ceres-solver.org/">Ceres Solver</a>. Needed by the reconstruction API in order to solve part of the Bundle Adjustment plus the points Intersect. If Ceres Solver is not installed on your system, the reconstruction funcionality will be disabled. <strong>Recommended</strong></li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p><strong>Required Dependencies</strong></p><p>In case you are on <a href="http://www.ubuntu.com/">Ubuntu</a> you can simply install the required dependencies by typing the following command.</p><pre><code>sudo apt-get install libeigen3-dev libgflags-dev libgoogle-glog-dev</code></pre><p><strong>Ceres Solver</strong></p><p>Start by installing all the dependencies.</p><pre><code># CMakesudo apt-get install cmake# google-glog + gflagssudo apt-get install libgoogle-glog-dev# BLAS &amp; LAPACKsudo apt-get install libatlas-base-dev# Eigen3sudo apt-get install libeigen3-dev# SuiteSparse and CXSparse (optional)# - If you want to build Ceres as a *static* library (the default)#   you can use the SuiteSparse package in the main Ubuntu package#   repository:sudo apt-get install libsuitesparse-dev# - However, if you want to build Ceres as a *shared* library, you must#   add the following PPA:sudo add-apt-repository ppa:bzindovic/suitesparse-bugfix-1319687sudo apt-get updatesudo apt-get install libsuitesparse-dev</code></pre><p>We are now ready to build, test, and install Ceres.</p><pre><code>git clone https://ceres-solver.googlesource.com/ceres-solvercd ceres-solvermkdir build &amp;&amp; cd buildcmake ..make -j4make testsudo make install</code></pre><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p><strong>trajectory_reconstruction.cpp</strong></p><p>This program shows the camera trajectory reconstruction capabilities in the OpenCV Structure From Motion (SFM) module. It loads a file with the tracked 2d points over all the frames which are embedded into a vector of 2d points array, where each inner array represents a different frame. Every frame is composed by a list of 2d points which e.g. the first point in frame 1 is the same point in frame 2. If there is no point in a frame the assigned value will be (-1,-1).</p><p>To run this example you can type the following command in the opencv binaries directory specifying the file path in your system and the camera intrinsics (in this case the tracks file was obtained using Blender Motion module).</p><pre><code>./example_sfm_trajectory_reconstruction tracks_file.txt 1914 640 360</code></pre><p>Finally, the script reconstructs the given set of tracked points and show the result using the OpenCV 3D visualizer (viz). On the image below, it’s shown a screenshot with the result you should obtain running the “desktop_tracks.txt” found inside the samples directory.</p><p align="center">  <img src="doc/pics/desktop_trajectory.png" width="400" height="300"></p><p><strong>scene_reconstruction.cpp</strong></p><p>This program shows the multiview scene reconstruction capabilities in the OpenCV Structure From Motion (SFM) module. It calls the recontruction API using the overloaded signature for real images. In this case the script loads a file which provides a list with all the image paths that we want to reconstruct. Internally, this script extract and compute the sparse 2d features using DAISY descriptors which are matched using FlannBasedMatcher to finally build the tracks structure.</p><p>To run this example you can type the following command in the opencv binaries directory specifying the file path  and the camera intrinsics.</p><pre><code>./example_sfm_scene_reconstruction image_paths_file.txt 350 240 360</code></pre><p>This sample shows the estimated camera trajectory plus the sparse 3D reconstruction using the the OpenCV 3D visualizer (viz).</p><p>On the next pictures, it’s shown a screenshot where you can see the used images as input from the “Temple of the Dioskouroi” [1] and the obtained result after running the reconstruction API.</p><p align="center">  <img src="doc/pics/temple_input.jpg" width="800" height="200"></p><p align="center">  <img src="doc/pics/temple_reconstruction.jpg" width="400" height="250"></p><p>On the next pictures, it’s shown a screenshot where you can see the used images as input from la Sagrada Familia (BCN) [2] which you can find in the samples directory and the obtained result after running the reconstruction API.</p><p align="center">  <img src="doc/pics/sagrada_familia_input.jpg" width="700" height="250"></p><p align="center">  <img src="doc/pics/sagrada_familia_reconstruction.jpg" width="400" height="250"></p><p>[1] <a href="http://vision.middlebury.edu/mview/data">http://vision.middlebury.edu/mview/data</a></p><p>[2] Penate Sanchez, A. and Moreno-Noguer, F. and Andrade Cetto, J. and Fleuret, F. (2014). LETHA: <em>Learning from High Quality Inputs for 3D Pose Estimation in Low Quality Images</em>. Proceedings of the International Conference on 3D vision (3DV). <a href="http://www.iri.upc.edu/research/webprojects/pau/datasets/sagfam">[URL]</a></p><h2 id="Future-Work"><a href="#Future-Work" class="headerlink" title="Future Work"></a>Future Work</h2><ul><li>Update signatures documentation.</li><li>Add prototype for dense reconstruction once is working (DAISY paper implementation).</li><li>Decide which functions are kept since most of them are the same in calib3d.</li><li>Finish to implement computeOrientation().</li><li>Find a good features matchig algorithm for reconstruction() in case we provide pure images for autocalibration (look into OpenMVG).</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/saliency/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/saliency/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Saliency-API-Where-to-Focus-in-a-Scene"><a href="#Saliency-API-Where-to-Focus-in-a-Scene" class="headerlink" title="Saliency API, Where to Focus in a Scene"></a>Saliency API, Where to Focus in a Scene</h1><p>The purpose of this module is to create, group and make available to the users, different saliency algorithms, belonging to different categories. Saliency API – Where humans would look in a scene. Has routines for static, motion and “objectness” saliency.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/rgbd/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/rgbd/README/</url>
      
        <content type="html"><![CDATA[<h1 id="RGB-Depth-Processing-module"><a href="#RGB-Depth-Processing-module" class="headerlink" title=" RGB-Depth Processing module"></a> RGB-Depth Processing module</h1><p>RGB-Depth Processing module – Linemod 3D object recognition; Fast surface normals and 3D plane finding. 3D visual odometry</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/plot/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/plot/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Plot-Module"><a href="#Plot-Module" class="headerlink" title="Plot Module"></a>Plot Module</h1><p>Created by Nuno Moutinho</p><p>This Plot module allows you to easily plot data in 1D or 2D. You can change the size of the window, the limits of the axis and the colors of each element. You can also show in real time the plot you are building or save the plot as an image (png).</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/reg/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/reg/README/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenCV-pixel-intensity-based-registration-module"><a href="#OpenCV-pixel-intensity-based-registration-module" class="headerlink" title="OpenCV pixel-intensity based registration module"></a>OpenCV pixel-intensity based registration module</h1><p>Author and maintainer: Alfonso Sanchez-Beato<br>                       alfonsosanchezbeato____gmail.com</p><p>These classes implement a module for OpenCV for parametric image registration.<br>The implemented method is direct alignment, that is, it uses directly the pixel<br>values for calculating the registration between a pair of images, as opposed to<br>feature-based registration.  The implementation follows essentially the<br>corresponding part of the paper “Image Alignment and Stitching: A Tutorial”,<br>from Richard Szeliski.</p><p>Feature based methods have some advantages over pixel based methods when we are<br>trying to register pictures that have been shoot under different lighting<br>conditions or exposition times, or when the images overlap only partially. On<br>the other hand, the main advantage of pixel-based methods when compared to<br>feature based methods is their better precision for some pictures (those shoot<br>under similar lighting conditions and that have a significative overlap), due to<br>the fact that we are using all the information available in the image, which<br>allows us to achieve subpixel accuracy. This is particularly important for<br>certain applications like multi-frame denoising or super-resolution.</p><p>In fact, pixel and feature registration methods can complement each other: an<br>application could first obtain a coarse registration using features and then<br>refine the registration using a pixel based method on the overlapping area of<br>the images. The code developed allows this use case.</p><p>The module implements classes derived from the abstract classes cv::reg::Map or<br>cv::reg::Mapper.  The former models a coordinate transformation between two<br>reference frames, while the later encapsulates a way of invoking a method that<br>calculates a Map between two images.  Although the objective has been to<br>implement pixel based methods, the module could be extended to support other<br>methods that can calculate transformations between images (feature methods,<br>optical flow, etc.).</p><p>Each class derived from Map implements a motion model, as follows:</p><ul><li><p>MapShift: Models a simple translation</p></li><li><p>MapAffine: Models an affine transformation</p></li><li><p>MapProject: Models a projective transformation<br>MapProject can also be used to model affine motion or translations, but some<br>operations on it are more costly, and that is the reason for defining the other<br>two classes.</p></li></ul><p>The classes derived from Mapper are</p><ul><li><p>MapperGradShift: Gradient based alignment for calculating translations. It<br>produces a MapShift (two parameters that correspond to the shift vector).</p></li><li><p>MapperGradEuclid: Gradient based alignment for euclidean motions, that is,<br>rotations and translations. It calculates three parameters (angle and shift<br>vector), although the result is stored in a MapAffine object for convenience.</p></li><li><p>MapperGradSimilar: Gradient based alignment for calculating similarities,<br>which adds scaling to the euclidean motion. It calculates four parameters (two<br>for the anti-symmetric matrix and two for the shift vector), although the result<br>is stored in a MapAffine object for convenience.</p></li><li><p>MapperGradAffine: Gradient based alignment for an affine motion model. The<br>number of parameters is six and the result is stored in a MapAffine object. </p></li><li><p>MapperGradProj: Gradient based alignment for calculating projective<br>transformations. The number of parameters is eight and the result is stored in a<br>MapProject object.</p></li><li><p>MapperPyramid: It implements hyerarchical motion estimation using a Gaussian<br>pyramid. Its constructor accepts as argument any other object that implements<br>the Mapper interface, and it is that mapper the one called by MapperPyramid for<br>each scale of the pyramid.</p></li></ul><p>If the motion between the images is not very small, the normal way of using<br>these classes is to create a MapperGrad* object and use it as input to create a<br>MapperPyramid, which in turn is called to perform the calculation. However, if<br>the motion between the images is small enough, we can use directly the<br>MapperGrad* classes. Another possibility is to use first a feature based method<br>to perform a coarse registration and then do a refinement through MapperPyramid<br>or directly a MapperGrad* object. The “calculate” method of the mappers accepts<br>an initial estimation of the motion as input.</p><p>When deciding which MapperGrad to use we must take into account that mappers<br>with more parameters can handle more complex motions, but involve more<br>calculations and are therefore slower. Also, if we are confident on the motion<br>model that is followed by the sequence, increasing the number of parameters<br>beyond what we need will decrease the accuracy: it is better to use the least<br>number of degrees of freedom that we can.</p><p>In the file map_test.cpp some examples on how to use this module can be seen.<br>There is a test function for each MapperGrad*. A motion is simulated on an input<br>image and then we register the moved image using a MapperPyramid created with<br>the right MapperGrad*. The difference images of the pictures before and after<br>registering are displayed, and the ground truth parameters and the calculated<br>ones are printed. Additionally, two images from a real video are registered<br>using first SURF features and then MapperGradProj+MapperPyramid. The difference<br>between the images and the difference of the registered images using the two<br>methods are displayed. It can be seen in the differences shown that using a<br>pixel based difference we can achieve more accuracy.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/ovis/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/ovis/README/</url>
      
        <content type="html"><![CDATA[<h1 id="OVIS-Module"><a href="#OVIS-Module" class="headerlink" title="OVIS Module"></a>OVIS Module</h1><p>allows you to render 3D data using the OGRE 3D engine and obtain the rendering as cv::Mat.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/phase_unwrapping/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/phase_unwrapping/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Phase-Unwrapping"><a href="#Phase-Unwrapping" class="headerlink" title="Phase Unwrapping"></a>Phase Unwrapping</h1><p>OpenCV module that can be used to unwrap two-dimensional phase map.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/optflow/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/optflow/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Optical-Flow-Algorithms"><a href="#Optical-Flow-Algorithms" class="headerlink" title="Optical Flow Algorithms"></a>Optical Flow Algorithms</h1><p>Algorithms for running and evaluating deepflow, simpleflow, sparsetodenseflow and motion templates (silhouette flow).</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/matlab/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/matlab/README/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenCV-Matlab-Code-Generator"><a href="#OpenCV-Matlab-Code-Generator" class="headerlink" title="OpenCV Matlab Code Generator"></a>OpenCV Matlab Code Generator</h1><p>This module contains a code generator to automatically produce Matlab mex wrappers for other modules within the OpenCV library. Once compiled and added to the Matlab path, this gives users the ability to call OpenCV methods natively from within Matlab.</p><h2 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h2><p>The Matlab code generator is fully integrated into the OpenCV build system. If cmake finds a Matlab installation available on the host system while configuring OpenCV, it will attempt to generate Matlab wrappers for all OpenCV modules. If cmake is having trouble finding your Matlab installation, you can explicitly point it to the root by defining the <code>MATLAB_ROOT_DIR</code> variable. For example, on a Mac you could type:</p><pre><code>cmake -DMATLAB_ROOT_DIR=/Applications/MATLAB_R2013a.app ..</code></pre><p>If you prefer using the gui version of cmake (cmake-gui), you can use the <em>Add Entry</em> option in the GUI to manually add the <em>path</em> variable <code>MATLAB_ROOT_DIR</code>.</p><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><p>In order to use the bindings, you will need to add them to the Matlab path. The path to add is:</p><ol><li><code>$&#123;CMAKE_BUILD_DIR&#125;/modules/matlab</code> if you are working from the build tree, or</li><li><code>$&#123;CMAKE_INSTALL_PREFIX&#125;/matlab</code> if you have installed OpenCV</li></ol><p>In Matlab, simply run:</p><pre><code>addpath(&#39;/path/to/opencv/matlab/&#39;);</code></pre><h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><p>Once you’ve added the bindings directory to the Matlab path, you can start using them straight away! OpenCV calls need to be prefixed with a ‘cv’ qualifier, to disambiguate them from Matlab methods of the same name. For example, to compute the dft of a matrix, you might do the following:</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">% load an image (Matlab)</span>I <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'cameraman.tif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% compute the DFT (OpenCV)</span>If <span class="token operator">=</span> cv<span class="token punctuation">.</span><span class="token function">dft</span><span class="token punctuation">(</span>I<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>DFT_COMPLEX_OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>As you can see, both OpenCV methods and constants can be used with ‘cv’ qualification. You can also call:</p><pre><code>help cv.dft</code></pre><p>to get help on the purpose and call signature of a particular method, or</p><pre><code>help cv</code></pre><p>to get general help regarding the OpenCV bindings. If you ever run into issues with the bindings</p><pre><code>cv.buildInformation();</code></pre><p>will produce a printout of diagnostic information pertaining to your particular build of OS, OpenCV and Matlab. It is useful to submit this information alongside a bug report to the OpenCV team.</p><h2 id="Writing-your-own-mex-files"><a href="#Writing-your-own-mex-files" class="headerlink" title="Writing your own mex files"></a>Writing your own mex files</h2><p>The Matlab bindings come with a set of utilities to help you quickly write your own mex files using OpenCV definitions. By doing so, you have all the speed and freedom of C++, with the power of OpenCV’s math expressions and optimizations.</p><p>The first thing you need to learn how to do is write a mex-file with Matlab constructs. Following is a brief example:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// include useful constructs</span><span class="token comment">// this automatically includes opencv core.hpp and mex.h)</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/matlab/bridge.hpp></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> matlab<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> bridge<span class="token punctuation">;</span><span class="token comment">// define the mex gateway</span><span class="token keyword">void</span> <span class="token function">mexFunction</span><span class="token punctuation">(</span><span class="token keyword">int</span> nlhs<span class="token punctuation">,</span> mxArray<span class="token operator">*</span> plhs<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                 <span class="token keyword">int</span> nrhs<span class="token punctuation">,</span> <span class="token keyword">const</span> mxArray<span class="token operator">*</span> prhs<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// claim the inputs into scoped management</span>  MxArrayVector <span class="token function">raw</span><span class="token punctuation">(</span>prhs<span class="token punctuation">,</span> prhs<span class="token operator">+</span>nrhs<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// add an argument parser to automatically handle basic options</span>  ArgumentParser <span class="token function">parser</span><span class="token punctuation">(</span><span class="token string">"my function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  parser<span class="token punctuation">.</span><span class="token function">addVariant</span><span class="token punctuation">(</span><span class="token string">"variant1"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"opt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  MxArrayVector reordered <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// if we get here, we know the inputs are valid and reordered. Unpack...</span>  BridgeVector <span class="token function">inputs</span><span class="token punctuation">(</span>reordered<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reordered<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Mat required    <span class="token operator">=</span> inputs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toMat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  string optional <span class="token operator">=</span> inputs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"Default string"</span> <span class="token operator">:</span> inputs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Do stuff...</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>Exception<span class="token operator">&amp;</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Uncaught exception occurred"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// allocate an output</span>  Bridge out<span class="token punctuation">;</span>  out <span class="token operator">=</span> required<span class="token punctuation">;</span>  plhs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> out<span class="token punctuation">.</span><span class="token function">toMxArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">releaseOwnership</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>There are a couple of important things going on in this example. Firstly, you need to include <code>&lt;opencv2/matlab/bridge.hpp&gt;</code> to enable the bridging capabilities. Once you’ve done this, you get some nice utilities for free. <code>MxArray</code> is a class that wraps Matlab’s <code>mxArray*</code> class in an OOP-style interface. <code>ArgumentParser</code> is a class that handles default, optional and named arguments for you, along with multiple possible calling syntaxes. Finally, <code>Bridge</code> is a class that allows bidirectional conversions between OpenCV&#x2F;std and Matlab types.</p><p>Once you have written your file, it can be compiled with the provided mex utility:</p><pre><code>cv.mex(&#39;my_function.cpp&#39;);</code></pre><p>This utility automatically links in all of the necessary OpenCV libraries to make your function work.</p><p>NOTE: OpenCV uses exceptions throughout the codebase. It is a <strong>very</strong> good idea to wrap your code in exception handlers to avoid crashing Matlab in the event of an exception being thrown.</p><hr><h1 id="Developer"><a href="#Developer" class="headerlink" title="Developer"></a>Developer</h1><p>The following sections contain information for developers seeking to use, understand or extend the Matlab bindings. The bindings are generated in python using a powerful templating engine called Jinja2. Because Matlab mex gateways have a common structure, they are well suited to templatization. There are separate templates for formatting C++ classes, Matlab classes, C++ functions, constants (enums) and documentation.</p><p>The task of the generator is two-fold:</p><ol><li>To parse the OpenCV headers and build a semantic tree that can be fed to the template engine</li><li>To define type conversions between C++&#x2F;OpenCV and Matlab types</li></ol><p>Once a source file has been generated for each OpenCV definition, and type conversions have been established, the mex compiler is invoked to produce the mex gateway (shared object) and link in the OpenCV libraries.</p><h2 id="File-layout"><a href="#File-layout" class="headerlink" title="File layout"></a>File layout</h2><p>opencv&#x2F;modules&#x2F;matlab (this module)</p><ul><li><code>CMakeLists.txt</code> (main cmake configuration file)</li><li><code>README.md</code> (this file)</li><li><code>compile.cmake</code> (the cmake script for compiling generated source code)</li><li><code>generator</code> (the folder containing generator code)<ul><li><code>filters.py</code> (template filters)</li><li><code>gen_matlab.py</code> (the binding generator control script)</li><li><code>parse_tree.py</code> (python class to refactor the hdr_parser.py output)</li><li><code>templates</code> (the raw templates for populating classes, constants, functions and docs)</li></ul></li><li><code>include</code> (C++ headers for the bindings)<ul><li><code>mxarray.hpp</code> (C++ OOP-style interface for Matlab mxArray* class)</li><li><code>bridge.hpp</code> (type conversions)</li><li><code>map.hpp</code> (hash map interface for instance storage and method lookup)</li></ul></li><li><code>test</code> (generator, compiler and binding test scripts)</li></ul><h2 id="Call-Tree"><a href="#Call-Tree" class="headerlink" title="Call Tree"></a>Call Tree</h2><p>The cmake call tree can be broken into 3 main components:</p><ol><li>configure time</li><li>build time</li><li>install time</li></ol><p><strong>Find Matlab (configure)</strong><br>The first thing to do is discover a Matlab installation on the host system. This is handled by the <code>OpenCVFindMatlab.cmake</code> in <code>opencv/cmake</code>. On Windows machines it searches the registry and path, while on *NIX machines it searches a set of canonical install paths. Once Matlab has been found, a number of variables are defined, such as the path to the mex compiler, the mex libraries, the mex include paths, the architectural extension, etc.</p><p><strong>Test the generator (configure)</strong><br>Attempt to produce a source file for a simple definition. This tests whether python and pythonlibs are correctly invoked on the host.</p><p><strong>Test the mex compiler (configure)</strong><br>Attempt to compile a simple definition using the mex compiler. A mex file is actually just a shared object with a special exported symbol <code>_mexFunction</code> which serves as the entry-point to the function. As such, the mex compiler is just a set of scripts configuring the system compiler. In most cases this is the same as the OpenCV compiler, but <em>could</em> be different. The test checks whether the mex and generator includes can be found, the system libraries can be linked and the passed compiler flags are compatible.</p><p>If any of the configure time tests fail, the bindings will be disabled, but the main OpenCV configure will continue without error. The configuration summary will contain the block:</p><p>  Matlab<br>    mex:          &#x2F;Applications&#x2F;MATLAB_R2013a.app&#x2F;bin&#x2F;mex<br>    compiler&#x2F;generator:    Not working (bindings will not be generated)</p><p><strong>Generate the sources (build)</strong><br>Given a set of modules (the intersection of the OpenCV modules being built and the matlab module optional dependencies), the <code>CppHeaderParser()</code> from <code>opencv/modules/python/src2/hdr_parser.py</code> will parse the module headers and produce a set of definitions.</p><p>The <code>ParseTree()</code> from <code>opencv/modules/matlab/generator/parse_tree.py</code> takes this set of definitions and refactors them into a semantic tree better suited to templatization. For example, a trivial definition from the header parser may look something like:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span>fill<span class="token punctuation">,</span> void<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'/S'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>cv<span class="token punctuation">:</span><span class="token punctuation">:</span>Mat<span class="token operator">&amp;</span><span class="token punctuation">,</span> mat<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'/I'</span><span class="token punctuation">,</span> <span class="token string">'/O'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>The equivalent refactored output will look like:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Function  name   <span class="token operator">=</span> <span class="token string">'fill'</span>  rtype  <span class="token operator">=</span> <span class="token string">'void'</span>  static <span class="token operator">=</span> <span class="token boolean">True</span>  req <span class="token operator">=</span>    Argument      name    <span class="token operator">=</span> <span class="token string">'mat'</span>      <span class="token builtin">type</span>    <span class="token operator">=</span> <span class="token string">'cv::Mat'</span>      ref     <span class="token operator">=</span> <span class="token string">'&amp;'</span>      I       <span class="token operator">=</span> <span class="token boolean">True</span>      O       <span class="token operator">=</span> <span class="token boolean">True</span>      default <span class="token operator">=</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The added semantics (Namespace, Class, Function, Argument, name, etc) make it easier for the templating engine to parse, slice and populate definitions.</p><p>Once the definitions have been parsed, <code>gen_matlab.py</code> passes each definition to the template engine with the appropriate template (class, function, enum, doc) and the filled template gets written to the <code>$&#123;CMAKE_CURRENT_BUILD_DIR&#125;/src</code> directory.</p><p>The generator relies upon a proxy object called <code>generate.proxy</code> to determine when the sources are out of date and need to be re-generated.</p><p><strong>Compile the sources (build)</strong><br>Once the sources have been generated, they are compiled by the mex compiler. The <code>compile.cmake</code> script in <code>opencv/modules/matlab/</code> takes responsibility for iterating over each source file in <code>$&#123;CMAKE_CURRENT_BUILD_DIR&#125;/src</code> and compiling it with the passed includes and OpenCV libraries.</p><p>The flags used to compile the main OpenCV libraries are also forwarded to the mex compiler. So if, for example, you compiled OpenCV with SSE support, the mex bindings will also use SSE. Likewise, if you compile OpenCV in debug mode, the bindings will link to the debug version of the libraries.</p><p>Importantly, the mex compiler includes the <code>mxarray.hpp</code>, <code>bridge.hpp</code> and <code>map.hpp</code> files from the <code>opencv/modules/matlab/include</code> directory. <code>mxarray.hpp</code> defines a <code>MxArray</code> class which wraps Matlab’s <code>mxArray*</code> type in a more friendly OOP-syle interface. <code>bridge.hpp</code> defines a <code>Bridge</code> class which is able to perform type conversions between Matlab types and std&#x2F;OpenCV types. It can be extended with new definitions using the plugin interface described in that file.</p><p>The compiler relies upon a proxy object called <code>compile.proxy</code> to determine when the generated sources are out of date and need to be re-compiled.</p><p><strong>Install the files (install)</strong><br>At install time, the mex files are put into place at <code>$&#123;CMAKE_INSTALL_PREFIX&#125;/matlab</code> and their linkages updated.</p><h2 id="Jinja2"><a href="#Jinja2" class="headerlink" title="Jinja2"></a>Jinja2</h2><p>Jinja2 is a powerful templating engine, similar to python’s builtin <code>string.Template</code> class but implementing the model-view-controller paradigm. For example, a trivial view could be populated as follows:</p><p><strong>view.py</strong></p><pre class="line-numbers language-html+django" data-language="html+django"><code class="language-html+django">&lt;title&gt;&#123;&#123; title &#125;&#125;&lt;&#x2F;title&gt;&lt;ul&gt;&#123;% for user in users %&#125;  &lt;li&gt;&lt;a href&#x3D;&quot;&#123;&#123; user.url &#125;&#125;&quot;&gt;&#123;&#123; user.username | sanitize &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&#123;% endfor %&#125;&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>model.py</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  __init__<span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">''</span>    self<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">def</span> <span class="token function">sanitize</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token triple-quoted-string string">"""Filter for escaping html tags to prevent code injection"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>controller.py</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">populate</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># initialize jinja</span>jtemplate <span class="token operator">=</span> jinja2<span class="token punctuation">.</span>Environment<span class="token punctuation">(</span>loader<span class="token operator">=</span>FileSystemLoader<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># add the filters to the engine</span>jtemplate<span class="token punctuation">[</span><span class="token string">'sanitize'</span><span class="token punctuation">]</span> <span class="token operator">=</span> sanitize<span class="token comment"># get the view</span>template <span class="token operator">=</span> jtemplate<span class="token punctuation">.</span>get_template<span class="token punctuation">(</span><span class="token string">'view'</span><span class="token punctuation">)</span><span class="token comment"># populate the template with a list of User objects</span>populated <span class="token operator">=</span> template<span class="token punctuation">.</span>render<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">'all users'</span><span class="token punctuation">,</span> users<span class="token operator">=</span>users<span class="token punctuation">)</span><span class="token comment"># write to file</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'users.html'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>  f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>populated<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Thus the style and layout of the view is kept separate from the content (model). This modularity improves readability and maintainability of both the view and content and (for my own sanity) has helped significantly in debugging errors.</p><h2 id="File-Reference"><a href="#File-Reference" class="headerlink" title="File Reference"></a>File Reference</h2><p><strong>gen_matlab.py</strong><br>gen_matlab has the following call signature:</p><p>  gen_matlab.py –jinja2 path&#x2F;to&#x2F;jinja2&#x2F;engine<br>          –hdrparser path&#x2F;to&#x2F;hdr_parser&#x2F;dir<br>          –rstparser path&#x2F;to&#x2F;rst_parser&#x2F;dir<br>          –moduleroot path&#x2F;to&#x2F;opencv&#x2F;modules<br>          –modules [core imgproc highgui …]<br>          –extra namespace&#x3D;&#x2F;additional&#x2F;header&#x2F;to&#x2F;parse<br>          –outdir &#x2F;path&#x2F;to&#x2F;place&#x2F;generated&#x2F;src</p><p><strong>build_info.py</strong><br>build_info has the following call signature:</p><p>  build_info.py –jinja2 path&#x2F;to&#x2F;jinja2&#x2F;engine<br>          –os operating_system_string<br>          –arch [bitness processor]<br>          –compiler [id version]<br>          –mex_arch arch_string<br>          –mex_script &#x2F;path&#x2F;to&#x2F;mex&#x2F;script<br>          –cxx_flags [-list -of -flags -to -passthrough]<br>          –opencv_version version_string<br>          –commit commit_hash_if_using_git<br>          –modules core imgproc highgui etc<br>          –configuration Debug&#x2F;Release<br>          –outdir path&#x2F;to&#x2F;place&#x2F;build&#x2F;info</p><p><strong>cvmex.py</strong><br>cvmex.py, the custom compiler generator, has the following call signature:</p><p>  cvmex.py –jinja2 path&#x2F;to&#x2F;jinja2&#x2F;engine<br>          –opts [-list -of -opts]<br>          –include_dirs [-list -of -opencv_include_directories]<br>          –lib_dir opencv_lib_directory<br>          –libs [-lopencv_core -lopencv_imgproc …]<br>          –flags [-Wall -opencv_build_flags …]<br>          –outdir &#x2F;path&#x2F;to&#x2F;generated&#x2F;output</p><p><strong>parse_tree.py</strong><br>To build a parse tree, first parse a set of headers, then invoke the parse tree to refactor the output:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># parse a set of definitions into a dictionary of namespaces</span>parser <span class="token operator">=</span> CppHeaderParser<span class="token punctuation">(</span><span class="token punctuation">)</span>ns<span class="token punctuation">[</span><span class="token string">'core'</span><span class="token punctuation">]</span> <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">'path/to/opencv/core.hpp'</span><span class="token punctuation">)</span><span class="token comment"># refactor into a semantic tree</span>parse_tree <span class="token operator">=</span> ParseTree<span class="token punctuation">(</span><span class="token punctuation">)</span>parse_tree<span class="token punctuation">.</span>build<span class="token punctuation">(</span>ns<span class="token punctuation">)</span><span class="token comment"># iterate over the tree</span><span class="token keyword">for</span> namespace <span class="token keyword">in</span> parse_tree<span class="token punctuation">.</span>namespaces<span class="token punctuation">:</span>  <span class="token keyword">for</span> clss <span class="token keyword">in</span> namespace<span class="token punctuation">.</span>classes<span class="token punctuation">:</span>    <span class="token comment"># do stuff</span>  <span class="token keyword">for</span> method <span class="token keyword">in</span> namespace<span class="token punctuation">.</span>methods<span class="token punctuation">:</span>    <span class="token comment"># do stuff</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>mxarray.hpp</strong><br>mxarray.hpp defines a class called <code>MxArray</code> which provides an OOP-style interface for Matlab’s homogeneous <code>mxArray*</code> type. To create an <code>MxArray</code>, you can either inherit an existing array</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">MxArray <span class="token function">mat</span><span class="token punctuation">(</span>prhs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or create a new array</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">MxArray <span class="token function">mat</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> Matlab<span class="token double-colon punctuation">::</span>Traits<span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span><span class="token double-colon punctuation">::</span>ScalarType<span class="token punctuation">)</span><span class="token punctuation">;</span>MxArray mat <span class="token operator">=</span> MxArray<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">Matrix</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>The default constructor allocates a <code>0 x 0</code> array. Once you have encapculated an <code>mxArray*</code> you can access its properties through member functions:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">mat<span class="token punctuation">.</span><span class="token function">rows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">cols</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">channels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">isComplex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">isNumeric</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">isLogical</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">isClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">real</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mat<span class="token punctuation">.</span><span class="token function">imag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The MxArray object uses scoped memory management. If you wish to pass an MxArray back to Matlab (as a lhs pointer), you need to explicitly release ownership of the array so that it is not destroyed when it leaves scope:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">plhs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> mat<span class="token punctuation">.</span><span class="token function">releaseOwnership</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>mxarray.hpp also includes a number of helper utilities that make working in mex-world a little easier. One such utility is the <code>ArgumentParser</code>. <code>ArgumentParser</code> automatically handles required and optional arguments to a method, and even enables named arguments as used in many core Matlab functions. For example, if you had a function with the following signature:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">f</span><span class="token punctuation">(</span>Mat first<span class="token punctuation">,</span> Mat second<span class="token punctuation">,</span> Mat mask<span class="token operator">=</span><span class="token function">Mat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">int</span> dtype<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>then you can create an <code>ArgumentParser</code> as follows:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">ArgumentParser <span class="token function">parser</span><span class="token punctuation">(</span><span class="token string">"f"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>parser<span class="token punctuation">.</span><span class="token function">addVariant</span><span class="token punctuation">(</span><span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"mask"</span><span class="token punctuation">,</span> <span class="token string">"dtype"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MxArrayVector inputs <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>prhs<span class="token punctuation">,</span> prhs<span class="token operator">+</span>nrhs<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>and that will make available the following calling syntaxes:</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token function">f</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> mask<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> mask<span class="token punctuation">,</span> dtype<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">f</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> <span class="token string">'dtype'</span><span class="token punctuation">,</span> dtype<span class="token punctuation">,</span> <span class="token string">'mask'</span><span class="token punctuation">,</span> mask<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% optional ordering does not matter</span><span class="token function">f</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> <span class="token string">'dtype'</span><span class="token punctuation">,</span> dtype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% only second optional argument provided</span><span class="token function">f</span><span class="token punctuation">(</span>first<span class="token punctuation">,</span> second<span class="token punctuation">,</span> mask<span class="token punctuation">,</span> <span class="token string">'dtype'</span><span class="token punctuation">,</span> dtype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% mixture of ordered and named</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Further, the output of the <code>parser.parse()</code> method will always contain the total number of required and optional arguments that the method can take, with unspecified arguments given by empty matrices. Thus, to check if an optional argument has been given, you can do:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> dtype <span class="token operator">=</span> inputs<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> inputs<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">scalar</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>bridge.hpp</strong><br>The bridge interface defines a <code>Bridge</code> class which provides type conversion between std&#x2F;OpenCV and Matlab types. A type conversion must provide the following:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Bridge<span class="token operator">&amp;</span> <span class="token keyword">operator</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">const</span> MyObject<span class="token operator">&amp;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MyObject <span class="token function">toMyObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">operator</span> <span class="token function">MyObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>The binding generator will then automatically call the conversion operators (either explicitly or implicitly) if your <code>MyObject</code> class is encountered as an input or return from a parsed definition.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/line_descriptor/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/line_descriptor/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Binary-Descriptors-for-Line-Segments"><a href="#Binary-Descriptors-for-Line-Segments" class="headerlink" title="Binary Descriptors for Line Segments"></a>Binary Descriptors for Line Segments</h1><p>This module shows how to extract line segments from an image by 2 different methods: First segmenting lines with Line Segment Detector LSDDetector and then (or just) using the Binary Descriptor to get the lines and give them a descriptor – BinaryDescriptor. Finally, we can then match line segments using the BinaryDescriptorMatcher class.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/img_hash/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/img_hash/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Image-Hashing-algorithms"><a href="#Image-Hashing-algorithms" class="headerlink" title="Image Hashing algorithms"></a>Image Hashing algorithms</h1><p>This module is intended to port the algorithms from PHash library and implement other image hash<br>algorithm do not exist in PHash library yet.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/hfs/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/hfs/README/</url>
      
        <content type="html"><![CDATA[<h2 id="OpenCV-Hierarchical-Feature-Selection-for-Efficient-Image-Segmentation-module"><a href="#OpenCV-Hierarchical-Feature-Selection-for-Efficient-Image-Segmentation-module" class="headerlink" title="OpenCV Hierarchical Feature Selection for Efficient Image Segmentation module"></a>OpenCV Hierarchical Feature Selection for Efficient Image Segmentation module</h2><p>Author and maintainers: Yujun Shi (<a href="mailto:&#x73;&#x68;&#105;&#121;&#117;&#106;&#117;&#x6e;&#49;&#48;&#x31;&#54;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#x73;&#x68;&#105;&#121;&#117;&#106;&#117;&#x6e;&#49;&#48;&#x31;&#54;&#x40;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#x6d;</a>), Yun Liu (<a href="mailto:&#110;&#107;&#49;&#50;&#x63;&#115;&#x6c;&#121;&#64;&#109;&#97;&#105;&#x6c;&#x2e;&#110;&#x61;&#110;&#x6b;&#x61;&#x69;&#46;&#101;&#100;&#x75;&#46;&#99;&#x6e;">&#110;&#107;&#49;&#50;&#x63;&#115;&#x6c;&#121;&#64;&#109;&#97;&#105;&#x6c;&#x2e;&#110;&#x61;&#110;&#x6b;&#x61;&#x69;&#46;&#101;&#100;&#x75;&#46;&#99;&#x6e;</a>).</p><p>Hierachical Feature Selection (HFS) is a real-time system for image segmentation. It was originally proposed in [1]. Here is the original project website: <a href="http://mmcheng.net/zh/hfs/">http://mmcheng.net/zh/hfs/</a></p><p>The algorithm is executed in 3 stages. In the first stage, it obtains an over-segmented image using SLIC(simple linear iterative clustering). In the last 2 stages, it iteratively merges the over-segmented  image with merging method mentioned in EGB(Efficient Graph-based Image Segmentation) and learned SVM parameters.</p><p>In our implementation, we wrapped these stages into one single member function of the interface class.</p><p>Since this module used cuda in some part of  the implementation, it has to be compiled with cuda support</p><p>For more details about the algorithm, please refer to the original paper: [1]</p><h3 id="usage"><a href="#usage" class="headerlink" title="usage"></a>usage</h3><p>c++ interface:</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F; read a imageMat img &#x3D; imread(image_path), res;int _h &#x3D; img.rows, _w &#x3D; img.cols;&#x2F;&#x2F; create enginePtr&lt;HfsSegment&gt; seg &#x3D; HfsSegment::create( _h, _w );&#x2F;&#x2F; perform segmentation&#x2F;&#x2F; now &quot;res&quot; is a matrix of indices&#x2F;&#x2F; change the second parameter to &quot;True&quot; to get a rgb image for &quot;res&quot;res &#x3D; seg-&gt;performSegmentGpu(img, false);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>python interface:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npimg <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>image_path<span class="token punctuation">)</span><span class="token comment"># create engine</span>engine <span class="token operator">=</span> cv2<span class="token punctuation">.</span>hfs<span class="token punctuation">.</span>HfsSegment_create<span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># perform segmentation</span><span class="token comment"># now "res" is a matrix of indices</span><span class="token comment"># change the second parameter to "True" to get a rgb image for "res"</span>res <span class="token operator">=</span> engine<span class="token punctuation">.</span>performSegmentGpu<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p>[1]: M. cheng, Y. Liu, Q. Hou, J. Bian, P. Torr, S. Hu, Z. Tu HFS: Hierarchical Feature Selection for Efficient Image Segmentation ECCV, Oct.2016.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/hdf/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/hdf/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Hierarchical-Data-Format-hdf-I-x2F-O"><a href="#Hierarchical-Data-Format-hdf-I-x2F-O" class="headerlink" title="Hierarchical Data Format (hdf) I&#x2F;O"></a>Hierarchical Data Format (hdf) I&#x2F;O</h1><p>The module contains I&#x2F;O routines for Hierarchical Data Format: <a href="https://en.m.wikipedia.org/wiki/Hierarchical_Data_Format">https://en.m.wikipedia.org/wiki/Hierarchical_Data_Format</a> meant to store large amounts of data. This module does not implement the specs from scratch, it’s a wrapper on top of libhdf5, which should be pre-installed by the user.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/freetype/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/freetype/README/</url>
      
        <content type="html"><![CDATA[<h1 id="FreeType-Module"><a href="#FreeType-Module" class="headerlink" title="FreeType Module"></a>FreeType Module</h1><p>This FreeType module allows you to draw strings with outlines and bitmaps.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>harfbuzz is requested to convert UTF8 to gid(GlyphID).<br>freetype library is requested to rasterize given gid.</p><p>harfbuzz <a href="https://www.freedesktop.org/wiki/Software/HarfBuzz/">https://www.freedesktop.org/wiki/Software/HarfBuzz/</a><br>freetype <a href="https://www.freetype.org/">https://www.freetype.org/</a></p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>cv::freetype::FreeType2 ft2;<br>ft2.loadFontData(“your-font.ttf”, 0);<br>ft2.setSplitNumber( 4 ); &#x2F;&#x2F; Bezier-line is splited by 4 segment.<br>ft2.putText(src, …. )</p><h2 id="Option"><a href="#Option" class="headerlink" title="Option"></a>Option</h2><ul><li>2nd argument of loadFontData is used if font file has many font data.</li><li>3 drawing mode is available.<br>– outline mode is used if lineWidth is larger than 0. (like original putText)<br>– bitmap  mode is used if lineWidth is less than 0.<br>— 1bit bitmap mode is used if lineStyle is 4 or 8.<br>— gray bitmap mode is used if lineStyle is 16.</li></ul><h2 id="Future-work"><a href="#Future-work" class="headerlink" title="Future work"></a>Future work</h2><ul><li>test<br>– CJK and …</li><li>RTL,LTR,TTB,BTT…</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/fuzzy/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/fuzzy/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Fuzzy-image-processing"><a href="#Fuzzy-image-processing" class="headerlink" title="Fuzzy image processing"></a>Fuzzy image processing</h1><p>Author and maintainer: Pavel Vlasanek<br>                       <a href="mailto:&#112;&#x61;&#118;&#x65;&#108;&#46;&#118;&#108;&#97;&#115;&#x61;&#x6e;&#x65;&#107;&#x40;&#x6f;&#x73;&#117;&#46;&#x63;&#x7a;">&#112;&#x61;&#118;&#x65;&#108;&#46;&#118;&#108;&#97;&#115;&#x61;&#x6e;&#x65;&#107;&#x40;&#x6f;&#x73;&#117;&#46;&#x63;&#x7a;</a></p><p>This module is focused on the image processing using fuzzy mathematics, namely fuzzy (F)-transform. The F-transform technique approximates input function, where only few input values are known. The technique of F-transform takes local areas as areas with some additional structure. This structure is characterized by fuzzy predicates that may express any information which is relevant for a problem. In image processing, this can be, for example, a distance from a certain point, a relationship between points, color&#x2F;intensity, texture, etc.</p><p>The F-transform is a technique putting a continuous&#x2F;discrete function into a correspondence with a finite vector of its F-transform components. In image processing, where images are identified with intensity functions of two arguments, the F-transform of the latter is given by a matrix of components. The module currently covering F0-trasnform, where components are scalars.</p><p>The components can be used for inverse F-transform, where approximated input function is obtained. If input function (image) includes some damaged or missing areas, these areas are recomputed and restored after invesre F-transform processing.</p><p>Let me give you two related papers:</p><p>Perfilieva, Irina, and Pavel Vla��nek. “Image Reconstruction by means of F-transform.” Knowledge-Based Systems 70 (2014): 55-63.</p><p>Perfilieva, Irina. “Fuzzy transforms: Theory and applications.” Fuzzy sets and systems 157.8 (2006): 993-1023.</p><p>Investigation of the F-transform technique leads to several applications in image processing. Currently investigated are image inpainting, filtering, resampling, edge detection, compression and image fusion.</p><p>The module covers:</p><ul><li>F0 processing (fuzzy_F0_math.cpp): Functions for computation of the image F0 components and inverse F0-transform.</li><li>Fuzzy image processing (fuzzy_image.cpp): Functions aimed to image processing currently including image inpainting and image filtering.</li></ul><p>There are also tests in test_image.cpp using resources from opencv_extra, and samples in fuzzy_inpainting.cpp and fuzzy_filtering.cpp.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/face/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/face/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Face-recognition-techniques"><a href="#Face-recognition-techniques" class="headerlink" title="Face recognition techniques"></a>Face recognition techniques</h1><p>Collection of face recognition techniques:</p><ol><li>Eigen Faces</li><li>Fisher Faces</li><li>Local Binary Pattern Histograms</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dpm/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dpm/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Cascade-object-detection-with-deformable-part-models"><a href="#Cascade-object-detection-with-deformable-part-models" class="headerlink" title="Cascade object detection with deformable part models"></a>Cascade object detection with deformable part models</h1><p>The object detector described below has been initially proposed by P.F. Felzenszwalb in [1]. It is based on a Dalal-Triggs detector that uses a single filter on histogram of oriented gradients (HOG) features to represent an object category. This detector uses a sliding window approach, where a filter is applied at all positions and scales of an image. The first innovation is enriching the Dalal-Triggs model using a star-structured part-based model defined by a “root” filter (analogous to the Dalal-Triggs filter) plus a set of parts filters and associated deformation models. The score of one of star models at a particular position and scale within an image is the score of the root filter at the given location plus the sum over parts of the maximum, over placements of that part, of the part filter score on its location minus a deformation cost easuring the deviation of the part from its ideal location relative to the root. Both root and part filter scores are defined by the dot product between a filter (a set of weights) and a subwindow of a feature pyramid computed from the input image. Another improvement is a representation of the class of models by a mixture of star models. The score of a mixture model at a particular position and scale is the maximum over components, of the score of that component model at the given location.</p><p>The detector was dramatically speeded-up with cascade algorithm proposed by P.F. Felzenszwalb in [2]. The algorithm prunes partial hypotheses using thresholds on their scores. The basic idea of the algorithm is to use a hierarchy of models defined by an ordering of the original model’s parts. For a model with (n+1) parts, including the root, a sequence of (n+1) models is obtained. The i-th model in this sequence is defined by the first i parts from the original model.<br>Using this hierarchy, low scoring hypotheses can be pruned after looking at the best configuration of a subset of the parts. Hypotheses that score high under a weak model are evaluated further using a richer model.</p><p>In OpenCV there is an C++ implementation of DPM cascade detector.</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; load model from model_pathcv::Ptr&lt;DPMDetector&gt; detector &#x3D; DPMDetector::create(vector&lt;string&gt;(1, model_path));&#x2F;&#x2F; read image from image_pathMat image &#x3D; imread(image_path);&#x2F;&#x2F; detectionvector&lt;DPMDetector::ObjectDetection&gt; ds;detector-&gt;detect(image, ds);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; detect using web camera.&#x2F;example_dpm_cascade_detect_camera &lt;model_path&gt;&#x2F;&#x2F; detect for an image sequence.&#x2F;example_dpm_cascade_detect_sequence &lt;model_path&gt; &lt;image_dir&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1]: P. Felzenszwalb, R. Girshick, D. McAllester, D. Ramanan Object Detection with Discriminatively Trained Part Based Models IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. 32, No. 9, Sep. 2010.</p><p>[2]: P. Felzenszwalb, R. Girshick, D. McAllester Cascade Object Detection with Deformable Part Models IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2010.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dnns_easily_fooled/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dnns_easily_fooled/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Fooling-Code"><a href="#Fooling-Code" class="headerlink" title="Fooling Code"></a>Fooling Code</h1><p>This is the code base used to reproduce the “fooling” images in the paper:<br><a href="http://anhnguyen.me/">Nguyen A</a>, <a href="http://yosinski.com/">Yosinski J</a>, <a href="http://jeffclune.com/">Clune J</a>. <a href="http://arxiv.org/abs/1412.1897">“Deep Neural Networks are Easily Fooled: High Confidence Predictions for Unrecognizable Images”</a>. In Computer Vision and Pattern Recognition (CVPR ‘15), IEEE, 2015.</p><p><strong>If you use this software in an academic article, please cite:</strong></p><pre><code>@inproceedings&#123;nguyen2015deep,  title=&#123;Deep Neural Networks are Easily Fooled: High Confidence Predictions for Unrecognizable Images&#125;,  author=&#123;Nguyen, Anh and Yosinski, Jason and Clune, Jeff&#125;,  booktitle=&#123;Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on&#125;,  year=&#123;2015&#125;,  organization=&#123;IEEE&#125;&#125;</code></pre><p>For more information regarding the paper, please visit <a href="http://www.evolvingai.org/fooling">www.evolvingai.org/fooling</a></p><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><p>This is an installation process that requires two main software packages (included in this package):</p><ol><li>Caffe: <a href="http://caffe.berkeleyvision.org/">http://caffe.berkeleyvision.org</a></li></ol><ul><li>Our libraries installed to work with Caffe<ul><li>Cuda 6.0</li><li>Boost 1.52</li><li>g++ 4.6</li></ul></li><li>Use the provided scripts to download the correct version of Caffe for your experiments.<ul><li><code>./download_caffe_evolutionary_algorithm.sh</code> Caffe version for EA experiments</li><li><code>./download_caffe_gradient_ascent.sh</code> Caffe version for gradient ascent experiments</li></ul></li></ul><ol start="2"><li>Sferes: <a href="https://github.com/jbmouret/sferes2">https://github.com/jbmouret/sferes2</a></li></ol><ul><li>Our libraries installed to work with Sferes<ul><li>OpenCV 2.4.10</li><li>Boost 1.52</li><li>g++ 4.9 (a C++ compiler compatible with C++11 standard)</li></ul></li><li>Use the provided script <code>./download_sferes.sh</code> to download the correct version of Sferes.</li></ul><p>Note: These are patched versions of the two frameworks with our additional work necessary to produce the images as in the paper. They are not the same as their master branches.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Please see the <a href="https://github.com/anguyen8/opencv_contrib/blob/master/modules/dnns_easily_fooled/Installation_Guide.pdf">Installation_Guide</a> for more details.</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><ul><li>An MNIST experiment (Fig. 4, 5 in the paper) can be run directly on a local machine (4-core) within a reasonable amount of time (around ~5 minutes or less for 200 generations).</li><li>An ImageNet experiment needs to be run on a cluster environment. It took us ~4 days x 128 cores to run 5000 generations and produce 1000 images (Fig. 8 in the paper).</li><li><a href="https://github.com/Evolving-AI-Lab/fooling/wiki/How-to-test-the-evolutionary-framework-quickly">How to configure an experiment to test the evolutionary framework quickly</a></li><li>To reproduce the gradient ascent fooling images (Figures 13, S3, S4, S5, S6, and S7 from the paper), see the <a href="https://github.com/anguyen8/opencv_contrib/tree/master/modules/dnns_easily_fooled/caffe/ascent">documentation in the caffe&#x2F;ascent directory</a>. You’ll need to download the correct Caffe version for this experiment using <code>./download_caffe_gradient_ascent.sh</code> script.</li></ul><h2 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h2><ol><li><p>If Sferes (Waf) can’t find your CUDA and Caffe dynamic libraries</p><blockquote><p>Add obj.libpath to the wscript for exp&#x2F;images to find libcudart and libcaffe or you can use LD_LIBRARY_PATH (for Linux).</p></blockquote></li><li><p>Is there a way to monitor the progress of the experiments?</p><blockquote><p>There is a flag for printing out results (fitness + images) every N generations.<br>You can adjust the dump_period setting <a href="https://github.com/Evolving-AI-Lab/fooling/blob/master/sferes/exp/images/dl_map_elites_images.cpp#L159">here</a>.</p></blockquote></li><li><p>Where do I get the pre-trained Caffe models?</p><blockquote><p>For AlexNet, please download on Caffe’s Model Zoo.<br>For LeNet, you can grab it <a href="https://github.com/anguyen8/opencv_contrib/tree/master/modules/dnns_easily_fooled/model/lenet">here</a>.</p></blockquote></li><li><p>How do I run the experiments on my local machine without MPI?</p><blockquote><p>You can enable MPI or non-MPI mode by commenting&#x2F;uncommenting a line <a href="https://github.com/Evolving-AI-Lab/fooling/blob/master/sferes/exp/images/dl_map_elites_images_mnist.cpp#L190-L191">here</a>. It can be simple eval::Eval (single-core), eval::Mpi (distributed for clusters).</p></blockquote></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dnn_objdetect/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dnn_objdetect/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Object-Detection-using-Convolutional-Neural-Networks"><a href="#Object-Detection-using-Convolutional-Neural-Networks" class="headerlink" title="Object Detection using Convolutional Neural Networks"></a>Object Detection using Convolutional Neural Networks</h1><p>This module uses Convolutional Neural Networks for detecting objects in an image</p><h2 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h2><ul><li>opencv dnn module</li><li>Google Protobuf</li></ul><h2 id="Building-this-module"><a href="#Building-this-module" class="headerlink" title="Building this module"></a>Building this module</h2><p>Run the following command to build this module:</p><pre class="line-numbers language-make" data-language="make"><code class="language-make">cmake -DOPENCV_EXTRA_MODULES_PATH&#x3D;&lt;opencv_contrib&gt;&#x2F;modules -Dopencv_dnn_objdetect&#x3D;ON &lt;opencv_source_dir&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h2><p>There are two models which are trained.</p><h4 id="SqueezeNet-model-trained-for-Image-Classification"><a href="#SqueezeNet-model-trained-for-Image-Classification" class="headerlink" title="SqueezeNet model trained for Image Classification."></a>SqueezeNet model trained for Image Classification.</h4><ul><li>This model was trained for 1500000 iterations with a batch size of 16</li><li>Size of Model: 4.9MB</li><li>Top-1 Accuracy on ImageNet 2012 DataSet: 56.10%</li><li>Top-5 Accuracy on ImageNet 2012 DataSet: 79.54%</li><li>Link to trained weights: <a href="https://github.com/kvmanohar22/caffe/blob/obj_detect_loss/proto/SqueezeNet.caffemodel">here</a> (<a href="https://github.com/opencv/opencv_3rdparty/tree/dnn_objdetect_20170827">copy</a>)</li></ul><h4 id="SqueezeDet-model-trained-for-Object-Detection"><a href="#SqueezeDet-model-trained-for-Object-Detection" class="headerlink" title="SqueezeDet model trained for Object Detection"></a>SqueezeDet model trained for Object Detection</h4><ul><li>This model was trained for 180000 iterations with a batch size of 16</li><li>Size of the Model: 14.2MB</li><li>Link to the trained weights: <a href="https://github.com/kvmanohar22/caffe/blob/obj_detect_loss/proto/SqueezeDet.caffemodel">here</a> (<a href="https://github.com/opencv/opencv_3rdparty/tree/dnn_objdetect_20170827">copy</a>)</li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h4 id="With-Caffe"><a href="#With-Caffe" class="headerlink" title="With Caffe"></a>With Caffe</h4><p>For details pertaining to the usage of the model, have a look at <a href="https://github.com/kvmanohar22/caffe">this repository</a></p><p>You can infact train your own object detection models with the loss function which is implemented.</p><h4 id="Without-Caffe-using-opencv-39-s-dnn-module"><a href="#Without-Caffe-using-opencv-39-s-dnn-module" class="headerlink" title="Without Caffe, using opencv&#39;s dnn module"></a>Without Caffe, using <code>opencv&#39;s dnn module</code></h4><p><code>tutorials/core_detect.cpp</code> gives an example of how to use the model to predict the bounding boxes.<br><code>tutorials/image_classification.cpp</code> gives an example of how to use the model to classify an image.</p><p>Here’s the brief summary of examples. For detailed usage and testing, refer <code>tutorials</code> directory.</p><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples:"></a>Examples:</h2><h3 id="Image-Classification"><a href="#Image-Classification" class="headerlink" title="Image Classification"></a>Image Classification</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F; Read the net along with it&#39;s trained weightscv::dnn::net &#x3D; cv::dnn::readNetFromCaffe(model_defn, model_weights);&#x2F;&#x2F; Read an imagecv::Mat image &#x3D; cv::imread(image_file);&#x2F;&#x2F; Convert the image into blobcv::Mat image_blob &#x3D; cv::net::blobFromImage(image);&#x2F;&#x2F; Get the output of &quot;predictions&quot; layercv::Mat probs &#x3D; net.forward(&quot;predictions&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>probs</code> is a 4-d tensor of shape <code>[1, 1000, 1, 1]</code> which is obtained after the application of <code>softmax</code> activation.</p><h3 id="Object-Detection"><a href="#Object-Detection" class="headerlink" title="Object Detection"></a>Object Detection</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F; Reading the network and weights, converting image to blob is same as Image Classification example.&#x2F;&#x2F; Forward through the network and collect blob datacv::Mat delta_bboxs &#x3D; net.forward(&quot;slice&quot;)[0];cv::Mat conf_scores &#x3D; net.forward(&quot;softmax&quot;);cv::Mat class_scores &#x3D; net.forward(&quot;sigmoid&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Three blobs aka <code>delta_bbox</code>, <code>conf_scores</code>, <code>class_scores</code> are post-processed in <code>cv::dnn_objdetect::InferBbox</code> class and the bounding boxes predicted.</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">InferBbox infer(delta_bbox, class_scores, conf_scores);infer.filter();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>infer.filter()</code> returns vector of <code>cv::dnn_objdetect::object</code> of predictions. Here <code>cv::dnn_objdetect::object</code> is a structure containing the following elements.</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">typedef struct &#123;  int xmin, xmax;  int ymin, ymax;  int class_idx;  std::string label_name;  double class_prob;&#125; object;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>For further details on post-processing refer this detailed <a href="https://kvmanohar22.github.io/GSoC/">blog-post</a>.</p><h2 id="Results-from-Object-Detection"><a href="#Results-from-Object-Detection" class="headerlink" title="Results from Object Detection"></a>Results from Object Detection</h2><p>Refer <code>tutorials</code> directory for results.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dnn_objdetect/samples/data/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/dnn_objdetect/samples/data/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Object-Detection-using-Convolutional-Neural-Networks"><a href="#Object-Detection-using-Convolutional-Neural-Networks" class="headerlink" title="Object Detection using Convolutional Neural Networks"></a>Object Detection using Convolutional Neural Networks</h1><ul><li>These files include model weights, model definition files, model deploy files for two trained networks.</li></ul><h3 id="Network-1"><a href="#Network-1" class="headerlink" title="Network 1"></a>Network 1</h3><ul><li>SqueezeNet model trained on ImageNet 2012 Dataset</li></ul><h3 id="Network-2"><a href="#Network-2" class="headerlink" title="Network 2"></a>Network 2</h3><ul><li>SqueezeDet model trained on PASCAL VOC Dataset</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/datasets/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/datasets/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Interface-for-interfacing-with-existing-computer-vision-databases"><a href="#Interface-for-interfacing-with-existing-computer-vision-databases" class="headerlink" title="Interface for interfacing with existing computer vision databases "></a>Interface for interfacing with existing computer vision databases </h1><p>In the src directory, there is code for reading many of the existing computer vision databases.</p><p>In the samples directory, there are examples of using the above code to read, train and test on the data.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/cvv/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/cvv/README/</url>
      
        <content type="html"><![CDATA[<h1 id="GUI-for-Interactive-Visual-Debugging-of-Computer-Vision-Programs"><a href="#GUI-for-Interactive-Visual-Debugging-of-Computer-Vision-Programs" class="headerlink" title="GUI for Interactive Visual Debugging of Computer Vision Programs"></a>GUI for Interactive Visual Debugging of Computer Vision Programs</h1><p>Simple code that you can add to your program that pops up a GUI allowing you to interactively and visually debug computer vision programs.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/cnn_3dobj/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/cnn_3dobj/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Convolutional-Neural-Networks-for-3D-object-classification-and-pose-estimation"><a href="#Convolutional-Neural-Networks-for-3D-object-classification-and-pose-estimation" class="headerlink" title="#Convolutional Neural Networks for 3D object classification and pose estimation."></a>#Convolutional Neural Networks for 3D object classification and pose estimation.</h1><h1 id="Module-Description-on-cnn-3dobj-This-module-uses-Convolutional-Neural-Networks-Caffe-to-train-and-recognize-3D-poses-of-objects-using-triplet-networks-The-main-reference-paper-can-be-found-at-https-cvarlab-icg-tugraz-at-pubs-wohlhart-cvpr15-pdf-The-author-provided-Theano-code-for-this-on-https-cvarlab-icg-tugraz-at-projects-3d-object-detection-This-implements-training-and-feature-extraction-code-mainly-using-CAFFE-http-caffe-berkeleyvision-org-which-will-be-compiled-as-libcaffe-for-the-cnn-3dobj-OpenCV-module-The-code-mainly-concentrats-on-triplet-networks-using-pair-wise-jointed-loss-function-layers-The-training-data-arrangement-is-also-important-and-there-is-basic-information-about-that-Code-for-the-triplet-version-of-Caffe-are-on-my-Yilda-Wang’s-Github-https-github-com-Wangyida-caffe-tree-cnn-triplet-You-can-get-it-through"><a href="#Module-Description-on-cnn-3dobj-This-module-uses-Convolutional-Neural-Networks-Caffe-to-train-and-recognize-3D-poses-of-objects-using-triplet-networks-The-main-reference-paper-can-be-found-at-https-cvarlab-icg-tugraz-at-pubs-wohlhart-cvpr15-pdf-The-author-provided-Theano-code-for-this-on-https-cvarlab-icg-tugraz-at-projects-3d-object-detection-This-implements-training-and-feature-extraction-code-mainly-using-CAFFE-http-caffe-berkeleyvision-org-which-will-be-compiled-as-libcaffe-for-the-cnn-3dobj-OpenCV-module-The-code-mainly-concentrats-on-triplet-networks-using-pair-wise-jointed-loss-function-layers-The-training-data-arrangement-is-also-important-and-there-is-basic-information-about-that-Code-for-the-triplet-version-of-Caffe-are-on-my-Yilda-Wang’s-Github-https-github-com-Wangyida-caffe-tree-cnn-triplet-You-can-get-it-through" class="headerlink" title="#Module Description on cnn_3dobj:####This module uses Convolutional Neural Networks (Caffe) to train and recognize 3D poses of objects using triplet networks. The main reference paper can be found at:https://cvarlab.icg.tugraz.at/pubs/wohlhart_cvpr15.pdf.####The author provided Theano code for this on:https://cvarlab.icg.tugraz.at/projects/3d_object_detection/.####This implements training and feature extraction code mainly using CAFFE (http://caffe.berkeleyvision.org/) which will be compiled as libcaffe for the cnn_3dobj OpenCV module. The code mainly concentrats on triplet networks using pair-wise jointed loss function layers. The training data arrangement is also important and there is basic information about that.####Code for the triplet version of Caffe are on my (Yilda Wang’s) Github:https://github.com/Wangyida/caffe/tree/cnn_triplet.####You can get it through:"></a>#Module Description on cnn_3dobj:<br>####This module uses Convolutional Neural Networks (Caffe) to train and recognize 3D poses of objects using triplet networks. The main reference paper can be found at:<br><a href="https://cvarlab.icg.tugraz.at/pubs/wohlhart_cvpr15.pdf">https://cvarlab.icg.tugraz.at/pubs/wohlhart_cvpr15.pdf</a>.<br>####The author provided Theano code for this on:<br><a href="https://cvarlab.icg.tugraz.at/projects/3d_object_detection/">https://cvarlab.icg.tugraz.at/projects/3d_object_detection/</a>.<br>####This implements training and feature extraction code mainly using CAFFE (<a href="http://caffe.berkeleyvision.org/">http://caffe.berkeleyvision.org/</a>) which will be compiled as libcaffe for the cnn_3dobj OpenCV module. The code mainly concentrats on triplet networks using pair-wise jointed loss function layers. The training data arrangement is also important and there is basic information about that.<br>####Code for the triplet version of Caffe are on my (Yilda Wang’s) Github:<br><a href="https://github.com/Wangyida/caffe/tree/cnn_triplet">https://github.com/Wangyida/caffe/tree/cnn_triplet</a>.<br>####You can get it through:<br><pre class="line-numbers language-none"><code class="language-none">$ git clone https:&#x2F;&#x2F;github.com&#x2F;Wangyida&#x2F;caffe&#x2F;tree&#x2F;cnn_triplet.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></h1><p>#Module Building Process:<br>####Prerequisites for this module are protobuf and Caffe. For libcaffe installation, you can install it on the standard system path so that it can be linked by this OpenCV module when compiling and linking using: -D CMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local as an build option when you cmake. The building process on Caffe on system could be like this:</p><pre class="line-numbers language-none"><code class="language-none">$ cd &lt;caffe_source_directory&gt;$ mkdir biuld$ cd build$ cmake -D CMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local ..$ make all -j4$ sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>####After the above steps, the headers and libs of CAFFE will be set on &#x2F;usr&#x2F;local&#x2F; path so that when you compile opencv with opencv_contrib modules as below, the protobuf and caffe libs will be recognized as already installed while building. Obviously protobuf is also needed.</p><h1 id="Compiling-OpenCV-Tips-on-compiling-problems-If-you-encouter-the-no-declaration-errors-when-you-‘make’-it-might-becaused-that-you-have-installed-the-older-version-of-the-cnn-3dobj-module-and-the-header-file-changed-in-a-newly-released-version-of-the-code-This-problem-is-cmake-and-make-can’t-detect-that-the-header-should-be-updated-and-it-keeps-the-older-header-in-x2F-usr-x2F-local-x2F-include-x2F-opencv2-whithout-updating-This-error-could-be-solved-by-removing-the-installed-older-version-of-the-cnn-3dobj-module-using-And-then-redo-the-compiling-steps-above-again-Demos-Demo1-Training-set-data-generation-Image-generation-for-different-poses-by-default-there-are-4-models-used-and-there-will-be-276-images-in-all-in-which-each-class-contains-69-iamges-If-you-want-to-use-additional-ply-models-it-is-necessary-to-change-the-class-number-parameter-to-the-new-class-number-and-also-give-it-a-new-class-label-If-you-want-to-train-the-network-and-extract-feature-from-RGB-images-set-the-parameter-rgb-use-as-1-When-all-images-are-created-in-images-all-folder-as-a-collection-of-training-images-for-network-tranining-and-as-a-gallery-of-reference-images-for-classification-then-proceed-onward-After-this-demo-the-binary-files-of-images-and-labels-will-be-stored-as-‘binary-image’-and-‘binary-label’-in-current-path-You-should-copy-them-into-the-leveldb-folder-for-Caffe-triplet-training-For-example-copy-these-2-files-in-x2F-data-x2F-linemod-and-rename-them-as-‘binary-image-train’-‘binary-image-test’-and-‘binary-label-train’-‘binary-label-train’-Here-I-use-the-same-as-trianing-and-testing-data-but-you-can-use-different-data-for-training-and-testing-It’s-important-to-observe-the-error-on-the-testing-data-to-check-whether-the-training-data-is-suitable-for-the-your-aim-Error-should-be-obseved-to-keep-decreasing-and-remain-much-smaller-than-the-initial-error-Start-triplet-tranining-using-Caffe-like-this-After-doing-this-you-will-get-caffemodel-files-as-the-trained-parameters-of-the-network-I-have-already-provide-the-network-definition-prototxt-files-and-the-pretrained-caffemodel-in-x2F-modules-x2F-cnn-3dobj-x2F-testdata-x2F-cv-folder-so-you-could-just-use-them-instead-of-training-with-Caffe"><a href="#Compiling-OpenCV-Tips-on-compiling-problems-If-you-encouter-the-no-declaration-errors-when-you-‘make’-it-might-becaused-that-you-have-installed-the-older-version-of-the-cnn-3dobj-module-and-the-header-file-changed-in-a-newly-released-version-of-the-code-This-problem-is-cmake-and-make-can’t-detect-that-the-header-should-be-updated-and-it-keeps-the-older-header-in-x2F-usr-x2F-local-x2F-include-x2F-opencv2-whithout-updating-This-error-could-be-solved-by-removing-the-installed-older-version-of-the-cnn-3dobj-module-using-And-then-redo-the-compiling-steps-above-again-Demos-Demo1-Training-set-data-generation-Image-generation-for-different-poses-by-default-there-are-4-models-used-and-there-will-be-276-images-in-all-in-which-each-class-contains-69-iamges-If-you-want-to-use-additional-ply-models-it-is-necessary-to-change-the-class-number-parameter-to-the-new-class-number-and-also-give-it-a-new-class-label-If-you-want-to-train-the-network-and-extract-feature-from-RGB-images-set-the-parameter-rgb-use-as-1-When-all-images-are-created-in-images-all-folder-as-a-collection-of-training-images-for-network-tranining-and-as-a-gallery-of-reference-images-for-classification-then-proceed-onward-After-this-demo-the-binary-files-of-images-and-labels-will-be-stored-as-‘binary-image’-and-‘binary-label’-in-current-path-You-should-copy-them-into-the-leveldb-folder-for-Caffe-triplet-training-For-example-copy-these-2-files-in-x2F-data-x2F-linemod-and-rename-them-as-‘binary-image-train’-‘binary-image-test’-and-‘binary-label-train’-‘binary-label-train’-Here-I-use-the-same-as-trianing-and-testing-data-but-you-can-use-different-data-for-training-and-testing-It’s-important-to-observe-the-error-on-the-testing-data-to-check-whether-the-training-data-is-suitable-for-the-your-aim-Error-should-be-obseved-to-keep-decreasing-and-remain-much-smaller-than-the-initial-error-Start-triplet-tranining-using-Caffe-like-this-After-doing-this-you-will-get-caffemodel-files-as-the-trained-parameters-of-the-network-I-have-already-provide-the-network-definition-prototxt-files-and-the-pretrained-caffemodel-in-x2F-modules-x2F-cnn-3dobj-x2F-testdata-x2F-cv-folder-so-you-could-just-use-them-instead-of-training-with-Caffe" class="headerlink" title="#Compiling OpenCV##Tips on compiling problems:####If you encouter the no declaration errors when you ‘make’, it might becaused that you have installed the older version of the cnn_3dobj module and the header file changed in a newly released version of the code. This problem is cmake and make can’t detect that the header should be updated and it keeps the older header in &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv2 whithout updating. This error could be solved by removing the installed older version of the cnn_3dobj module using:####And then redo the compiling steps above again.#Demos##Demo1: Training set data generation####Image generation for different poses: by default, there are 4 models used and there will be 276 images in all in which each class contains 69 iamges. If you want to use additional .ply models, it is necessary to change the class number parameter to the new class number and also give it a new class label. If you want to train the network and extract feature from RGB images, set the parameter rgb_use as 1.####When all images are created in images_all folder as a collection of training images for network tranining and as a gallery of reference images for classification, then proceed onward.####After this demo, the binary files of images and labels will be stored as ‘binary_image’ and ‘binary_label’ in current path. You should copy them into the leveldb folder for Caffe triplet training. For example: copy these 2 files in &#x2F;data&#x2F;linemod and rename them as ‘binary_image_train’, ‘binary_image_test’ and ‘binary_label_train’, ‘binary_label_train’. Here I use the same as trianing and testing data but you can use different data for training and testing. It’s important to observe the error on the testing data to check whether the training data is suitable for the your aim. Error should be obseved to keep decreasing and remain much smaller than the initial error.####Start triplet tranining using Caffe like this:####After doing this, you will get .caffemodel files as the trained parameters of the network. I have already provide the network definition .prototxt files and the pretrained .caffemodel in &#x2F;modules&#x2F;cnn_3dobj&#x2F;testdata&#x2F;cv folder, so you could just use them instead of training with Caffe."></a>#Compiling OpenCV<br><pre class="line-numbers language-none"><code class="language-none">$ cd &lt;opencv_source_directory&gt;$ mkdir build$ cd build$ cmake -D CMAKE_BUILD_TYPE&#x3D;RELEASE -D CMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local -D WITH_TBB&#x3D;ON -D WITH_V4L&#x3D;ON -D WITH_QT&#x3D;OFF -D WITH_OPENGL&#x3D;ON -D WITH_VTK&#x3D;ON -D INSTALL_TESTS&#x3D;ON -D OPENCV_EXTRA_MODULES_PATH&#x3D;..&#x2F;..&#x2F;opencv_contrib&#x2F;modules ..$ make -j4$ sudo make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>##Tips on compiling problems:<br>####If you encouter the no declaration errors when you ‘make’, it might becaused that you have installed the older version of the cnn_3dobj module and the header file changed in a newly released version of the code. This problem is cmake and make can’t detect that the header should be updated and it keeps the older header in &#x2F;usr&#x2F;local&#x2F;include&#x2F;opencv2 whithout updating. This error could be solved by removing the installed older version of the cnn_3dobj module using:<br><pre class="line-numbers language-none"><code class="language-none">$ cd &#x2F;$ cd usr&#x2F;local&#x2F;include&#x2F;opencv2&#x2F;$ sudo rm -rf cnn_3dobj.hpp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><br>####And then redo the compiling steps above again.<br>#Demos<br>##Demo1: Training set data generation<br>####Image generation for different poses: by default, there are 4 models used and there will be 276 images in all in which each class contains 69 iamges. If you want to use additional .ply models, it is necessary to change the class number parameter to the new class number and also give it a new class label. If you want to train the network and extract feature from RGB images, set the parameter rgb_use as 1.<br><pre class="line-numbers language-none"><code class="language-none">$ .&#x2F;example_cnn_3dobj_sphereview_data -plymodel&#x3D;..&#x2F;data&#x2F;3Dmodel&#x2F;ape.ply -label_class&#x3D;0 -cam_head_x&#x3D;0 -cam_head_y&#x3D;0 -cam_head_z&#x3D;1$ .&#x2F;example_cnn_3dobj_sphereview_data -plymodel&#x3D;..&#x2F;data&#x2F;3Dmodel&#x2F;ant.ply -label_class&#x3D;1 -cam_head_x&#x3D;0 -cam_head_y&#x3D;-1 -cam_head_z&#x3D;0$ .&#x2F;example_cnn_3dobj_sphereview_data -plymodel&#x3D;..&#x2F;data&#x2F;3Dmodel&#x2F;cow.ply -label_class&#x3D;2 -cam_head_x&#x3D;0 -cam_head_y&#x3D;-1 -cam_head_z&#x3D;0$ .&#x2F;example_cnn_3dobj_sphereview_data -plymodel&#x3D;..&#x2F;data&#x2F;3Dmodel&#x2F;plane.ply -label_class&#x3D;3 -cam_head_x&#x3D;0 -cam_head_y&#x3D;-1 -cam_head_z&#x3D;0$ .&#x2F;example_cnn_3dobj_sphereview_data -plymodel&#x3D;..&#x2F;data&#x2F;3Dmodel&#x2F;bunny.ply -label_class&#x3D;4 -cam_head_x&#x3D;0 -cam_head_y&#x3D;-1 -cam_head_z&#x3D;0$ .&#x2F;example_cnn_3dobj_sphereview_data -plymodel&#x3D;..&#x2F;data&#x2F;3Dmodel&#x2F;horse.ply -label_class&#x3D;5 -cam_head_x&#x3D;0 -cam_head_y&#x3D;0 -cam_head_z&#x3D;-1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br>####When all images are created in images_all folder as a collection of training images for network tranining and as a gallery of reference images for classification, then proceed onward.<br>####After this demo, the binary files of images and labels will be stored as ‘binary_image’ and ‘binary_label’ in current path. You should copy them into the leveldb folder for Caffe triplet training. For example: copy these 2 files in <caffe_source_directory>&#x2F;data&#x2F;linemod and rename them as ‘binary_image_train’, ‘binary_image_test’ and ‘binary_label_train’, ‘binary_label_train’. Here I use the same as trianing and testing data but you can use different data for training and testing. It’s important to observe the error on the testing data to check whether the training data is suitable for the your aim. Error should be obseved to keep decreasing and remain much smaller than the initial error.<br>####Start triplet tranining using Caffe like this:<br><pre class="line-numbers language-none"><code class="language-none">$ cd$ cd &lt;caffe_source_directory&gt;$ .&#x2F;examples&#x2F;triplet&#x2F;create_3d_triplet.sh$ .&#x2F;examples&#x2F;triplet&#x2F;train_3d_triplet.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><br>####After doing this, you will get .caffemodel files as the trained parameters of the network. I have already provide the network definition .prototxt files and the pretrained .caffemodel in <opencv_contrib>&#x2F;modules&#x2F;cnn_3dobj&#x2F;testdata&#x2F;cv folder, so you could just use them instead of training with Caffe.</h1><h1 id="Demo2-Feature-extraction-and-classification-Classification-This-will-extract-features-of-a-single-image-and-compare-it-with-features-of-a-gallery-of-samples-for-prediction-This-demo-uses-a-set-of-images-for-feature-extraction-in-a-given-path-these-features-will-be-a-reference-for-prediction-on-the-target-image-The-Caffe-model-and-the-network-prototxt-file-are-in-x2F-modules-x2F-cnn-3dobj-x2F-testdata-x2F-cv-Just-run-if-you-want-to-extract-mean-classification-and-pose-estimation-performance-from-all-the-training-images-you-can-run-this"><a href="#Demo2-Feature-extraction-and-classification-Classification-This-will-extract-features-of-a-single-image-and-compare-it-with-features-of-a-gallery-of-samples-for-prediction-This-demo-uses-a-set-of-images-for-feature-extraction-in-a-given-path-these-features-will-be-a-reference-for-prediction-on-the-target-image-The-Caffe-model-and-the-network-prototxt-file-are-in-x2F-modules-x2F-cnn-3dobj-x2F-testdata-x2F-cv-Just-run-if-you-want-to-extract-mean-classification-and-pose-estimation-performance-from-all-the-training-images-you-can-run-this" class="headerlink" title="##Demo2: Feature extraction and classification####Classification: This will extract features of a single image and compare it with features of a gallery of samples for prediction. This demo uses a set of images for feature extraction in a given path, these features will be a reference for prediction on the target image. The Caffe model and the network prototxt file are in &#x2F;modules&#x2F;cnn_3dobj&#x2F;testdata&#x2F;cv. Just run:####if you want to extract mean classification and pose estimation performance from all the training images, you can run this:"></a>##Demo2: Feature extraction and classification<br><pre class="line-numbers language-none"><code class="language-none">$ cd$ cd &lt;opencv_contrib&gt;&#x2F;modules&#x2F;cnn_3dobj&#x2F;samples&#x2F;build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>####Classification: This will extract features of a single image and compare it with features of a gallery of samples for prediction. This demo uses a set of images for feature extraction in a given path, these features will be a reference for prediction on the target image. The Caffe model and the network prototxt file are in <opencv_contrib>&#x2F;modules&#x2F;cnn_3dobj&#x2F;testdata&#x2F;cv. Just run:<br><pre class="line-numbers language-none"><code class="language-none">$ .&#x2F;example_cnn_3dobj_classify<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>####if you want to extract mean classification and pose estimation performance from all the training images, you can run this:<br><pre class="line-numbers language-none"><code class="language-none">$ .&#x2F;example_cnn_3dobj_classify -mean_file&#x3D;..&#x2F;data&#x2F;images_mean&#x2F;triplet_mean.binaryproto<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></h1><h1 id="Demo3-Model-performance-test-This-demo-will-run-a-performance-test-of-a-trained-CNN-model-on-several-images-If-the-the-model-fails-on-telling-different-samples-from-separate-classes-apart-or-is-confused-on-samples-with-similar-pose-but-from-different-classes-this-will-give-some-information-for-model-analysis"><a href="#Demo3-Model-performance-test-This-demo-will-run-a-performance-test-of-a-trained-CNN-model-on-several-images-If-the-the-model-fails-on-telling-different-samples-from-separate-classes-apart-or-is-confused-on-samples-with-similar-pose-but-from-different-classes-this-will-give-some-information-for-model-analysis" class="headerlink" title="##Demo3: Model performance test####This demo will run a performance test of a trained CNN model on several images. If the the model fails on telling different samples from separate classes apart, or is confused on samples with similar pose but from different classes, this will give some information for model analysis."></a>##Demo3: Model performance test<br>####This demo will run a performance test of a trained CNN model on several images. If the the model fails on telling different samples from separate classes apart, or is confused on samples with similar pose but from different classes, this will give some information for model analysis.<br><pre class="line-numbers language-none"><code class="language-none">$ .&#x2F;example_cnn_3dobj_model_analysis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></h1><p>#Test<br>####If you want to run a test on the cnn_3dobj module, the path of test data must be set in advance:</p><pre class="line-numbers language-none"><code class="language-none">$ export OPENCV_TEST_DATA_PATH&#x3D;&lt;opencv_contrib&gt;&#x2F;modules&#x2F;cnn_3dobj&#x2F;testdata<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/ccalib/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/ccalib/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Custom-Calibration-Pattern-for-3D-reconstruction"><a href="#Custom-Calibration-Pattern-for-3D-reconstruction" class="headerlink" title="Custom Calibration Pattern for 3D reconstruction"></a>Custom Calibration Pattern for 3D reconstruction</h1><ol><li>Custom calibration pattern for 3D reconstruction</li><li>Omnidirectional camera calibration</li><li>random pattern calibration object</li><li>multi-camera calibration</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/bgsegm/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/bgsegm/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Improved-Background-Foreground-Segmentation-Methods"><a href="#Improved-Background-Foreground-Segmentation-Methods" class="headerlink" title="Improved Background-Foreground Segmentation Methods"></a>Improved Background-Foreground Segmentation Methods</h1><p>This algorithm combines statistical background image estimation and per-pixel Bayesian segmentation. It[1] was introduced by Andrew B. Godbehere, Akihiro Matsukawa, Ken Goldberg in 2012. As per the paper, the system ran a successful interactive audio art installation called “Are We There Yet?” from March 31 - July 31 2011 at the Contemporary Jewish Museum in San Francisco, California.</p><p>It uses first few (120 by default) frames for background modelling. It employs probabilistic foreground segmentation algorithm that identifies possible foreground objects using Bayesian inference. The estimates are adaptive; newer observations are more heavily weighted than old observations to accommodate variable illumination. Several morphological filtering operations like closing and opening are done to remove unwanted noise. You will get a black window during first few frames.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[1]: A.B. Godbehere, A. Matsukawa, K. Goldberg. Visual tracking of human visitors under variable-lighting conditions for a responsive audio art installation. American Control Conference. (2012), pp. 4305–4312</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/bioinspired/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/bioinspired/README/</url>
      
        <content type="html"><![CDATA[<h1 id="Biologically-inspired-vision-models-and-derivated-tools"><a href="#Biologically-inspired-vision-models-and-derivated-tools" class="headerlink" title="Biologically inspired vision models and derivated tools"></a>Biologically inspired vision models and derivated tools</h1><ol><li>A biological retina model for image spatio-temporal noise and luminance changes enhancement</li><li>A transient areas (spatio-temporal events) segmentation tool to use at the output of the Retina</li><li>High Dynamic Range (HDR &gt;8bit images) tone mapping to (conversion to 8bit) use cas of the retina</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/README/</url>
      
        <content type="html"><![CDATA[<h2 id="An-overview-of-the-opencv-contrib-modules"><a href="#An-overview-of-the-opencv-contrib-modules" class="headerlink" title="An overview of the opencv_contrib modules"></a>An overview of the opencv_contrib modules</h2><p>This list gives an overview of all modules available inside the contrib repository.<br>To turn off building one of these module repositories, set the names in bold below to <reponame></p><pre class="line-numbers language-none"><code class="language-none">$ cmake -D OPENCV_EXTRA_MODULES_PATH&#x3D;&lt;opencv_contrib&gt;&#x2F;modules -D BUILD_opencv_&lt;reponame&gt;&#x3D;OFF &lt;opencv_source_directory&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p><strong>aruco</strong>: ArUco and ChArUco Markers – Augmented reality ArUco marker and “ChARUco” markers where ArUco markers embedded inside the white areas of the checker board.</p></li><li><p><strong>bgsegm</strong>: Background segmentation algorithm combining statistical background image estimation and per-pixel Bayesian segmentation.</p></li><li><p><strong>bioinspired</strong>: Biological Vision – Biologically inspired vision model: minimize noise and luminance variance, transient event segmentation, high dynamic range tone mapping methods.</p></li><li><p><strong>ccalib</strong>: Custom Calibration – Patterns for 3D reconstruction, omnidirectional camera calibration, random pattern calibration and multi-camera calibration.</p></li><li><p><strong>cnn_3dobj</strong>: Deep Object Recognition and Pose – Uses Caffe Deep Neural Net library to build, train and test a CNN model of visual object recognition and pose.</p></li><li><p><strong>cvv</strong>: Computer Vision Debugger – Simple code that you can add to your program that pops up a GUI allowing you to interactively and visually debug computer vision programs.</p></li><li><p><strong>datasets</strong>: Datasets Reader – Code for reading existing computer vision databases and samples of using the readers to train, test and run using that dataset’s data.</p></li><li><p><strong>dnn_objdetect</strong>: Object Detection using CNNs – Implements compact CNN Model for object detection. Trained using Caffe but uses opencv_dnn modeule.</p></li><li><p><strong>dnns_easily_fooled</strong>: Subvert DNNs – This code can use the activations in a network to fool the networks into recognizing something else.</p></li><li><p><strong>dpm</strong>: Deformable Part Model – Felzenszwalb’s Cascade with deformable parts object recognition code.</p></li><li><p><strong>face</strong>: Face Recognition – Face recognition techniques: Eigen, Fisher and Local Binary Pattern Histograms LBPH methods.</p></li><li><p><strong>fuzzy</strong>: Fuzzy Logic in Vision – Fuzzy logic image transform and inverse; Fuzzy image processing.</p></li><li><p><strong>freetype</strong>: Drawing text using freetype and harfbuzz.</p></li><li><p><strong>hdf</strong>: Hierarchical Data Storage – This module contains I&#x2F;O routines for Hierarchical Data Format: <a href="https://en.m.wikipedia.org/wiki/Hierarchical_Data_Format">https://en.m.wikipedia.org/wiki/Hierarchical_Data_Format</a> meant to store large amounts of data.</p></li><li><p><strong>line_descriptor</strong>: Line Segment Extract and Match – Methods of extracting, describing and matching line segments using binary descriptors.</p></li><li><p><strong>matlab</strong>: Matlab Interface – OpenCV Matlab Mex wrapper code generator for certain opencv core modules.</p></li><li><p><strong>optflow</strong>: Optical Flow – Algorithms for running and evaluating deepflow, simpleflow, sparsetodenseflow and motion templates (silhouette flow).</p></li><li><p><strong>ovis</strong>: OGRE 3D Visualiser – allows you to render 3D data using the OGRE 3D engine.</p></li><li><p><strong>plot</strong>: Plotting – The plot module allows you to easily plot data in 1D or 2D.</p></li><li><p><strong>reg</strong>: Image Registration – Pixels based image registration for precise alignment. Follows the paper “Image Alignment and Stitching: A Tutorial”, by Richard Szeliski.</p></li><li><p><strong>rgbd</strong>: RGB-Depth Processing module – Linemod 3D object recognition; Fast surface normals and 3D plane finding. 3D visual odometry</p></li><li><p><strong>saliency</strong>: Saliency API – Where humans would look in a scene. Has routines for static, motion and “objectness” saliency.</p></li><li><p><strong>sfm</strong>: Structure from Motion – This module contains algorithms to perform 3d reconstruction from 2d images. The core of the module is a light version of Libmv.</p></li><li><p><strong>stereo</strong>: Stereo Correspondence – Stereo matching done with different descriptors: Census &#x2F; CS-Census &#x2F; MCT &#x2F; BRIEF &#x2F; MV.</p></li><li><p><strong>structured_light</strong>: Structured Light Use – How to generate and project gray code patterns and use them to find dense depth in a scene.</p></li><li><p><strong>surface_matching</strong>: Point Pair Features – Implements 3d object detection and localization using multimodal point pair features.</p></li><li><p><strong>text</strong>: Visual Text Matching – In a visual scene, detect text, segment words and recognise the text.</p></li><li><p><strong>tracking</strong>: Vision Based Object Tracking – Use and&#x2F;or evaluate one of 5 different visual object tracking techniques.</p></li><li><p><strong>xfeatures2d</strong>: Features2D extra – Extra 2D Features Framework containing experimental and non-free 2D feature detector&#x2F;descriptor algorithms. SURF, BRIEF, Censure, Freak, LUCID, Daisy, Self-similar.</p></li><li><p><strong>ximgproc</strong>: Extended Image Processing – Structured Forests &#x2F; Domain Transform Filter &#x2F; Guided Filter &#x2F; Adaptive Manifold Filter &#x2F; Joint Bilateral Filter &#x2F; Superpixels &#x2F; Ridge Detection Filter.</p></li><li><p><strong>xobjdetect</strong>: Boosted 2D Object Detection – Uses a Waldboost cascade and local binary patterns computed as integral features for 2D object detection.</p></li><li><p><strong>xphoto</strong>: Extra Computational Photography – Additional photo processing algorithms: Color balance &#x2F; Denoising &#x2F; Inpainting.</p></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/aruco/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/modules/aruco/README/</url>
      
        <content type="html"><![CDATA[<h1 id="ArUco-Marker-Detection"><a href="#ArUco-Marker-Detection" class="headerlink" title="ArUco Marker Detection"></a>ArUco Marker Detection</h1><p><strong>ArUco</strong></p><p>ArUco markers are easy to detect pattern grids that yield up to 1024 different patterns. They were built for augmented reality and later used for camera calibration. Since the grid uniquely orients the square, the detection algorithm can determing the pose of the grid.</p><p><strong>ChArUco</strong></p><p>ArUco markers were improved by interspersing them inside a checkerboard called ChArUco. Checkerboard corner intersectionsa provide more stable corners because the edge location bias on one square is countered by the opposite edge orientation in the connecting square. By interspersing ArUco markers inside the checkerboard, each checkerboard corner gets a label which enables it to be used in complex calibration or pose scenarios where you cannot see all the corners of the checkerboard.</p><p>The smallest ChArUco board is 5 checkers and 4 markers called a “Diamond Marker”.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/CONTRIBUTING/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/CONTRIBUTING/</url>
      
        <content type="html"><![CDATA[<h2 id="Contributing-guidelines"><a href="#Contributing-guidelines" class="headerlink" title="Contributing guidelines"></a>Contributing guidelines</h2><p>All guidelines for contributing to the OpenCV repository can be found at <a href="https://github.com/opencv/opencv/wiki/How_to_contribute"><code>How to contribute guideline</code></a>.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/opencv_contrib-3.4.15/README/</url>
      
        <content type="html"><![CDATA[<h2 id="Repository-for-OpenCV’s-extra-modules"><a href="#Repository-for-OpenCV’s-extra-modules" class="headerlink" title="Repository for OpenCV’s extra modules"></a>Repository for OpenCV’s extra modules</h2><p>This repository is intended for development of so-called “extra” modules,<br>contributed functionality. New modules quite often do not have stable API,<br>and they are not well-tested. Thus, they shouldn’t be released as a part of<br>official OpenCV distribution, since the library maintains binary compatibility,<br>and tries to provide decent performance and stability.</p><p>So, all the new modules should be developed separately, and published in the<br><code>opencv_contrib</code> repository at first. Later, when the module matures and gains<br>popularity, it is moved to the central OpenCV repository, and the development team<br>provides production quality support for this module.</p><h3 id="How-to-build-OpenCV-with-extra-modules"><a href="#How-to-build-OpenCV-with-extra-modules" class="headerlink" title="How to build OpenCV with extra modules"></a>How to build OpenCV with extra modules</h3><p>You can build OpenCV, so it will include the modules from this repository. Contrib modules are under constant development and it is recommended to use them alongside the master branch or latest releases of OpenCV.</p><p>Here is the CMake command for you:</p><pre class="line-numbers language-none"><code class="language-none">$ cd &lt;opencv_build_directory&gt;$ cmake -DOPENCV_EXTRA_MODULES_PATH&#x3D;&lt;opencv_contrib&gt;&#x2F;modules &lt;opencv_source_directory&gt;$ make -j5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>As the result, OpenCV will be built in the <code>&lt;opencv_build_directory&gt;</code> with all<br>modules from <code>opencv_contrib</code> repository. If you don’t want all of the modules,<br>use CMake’s <code>BUILD_opencv_*</code> options. Like in this example:</p><pre class="line-numbers language-none"><code class="language-none">$ cmake -DOPENCV_EXTRA_MODULES_PATH&#x3D;&lt;opencv_contrib&gt;&#x2F;modules -DBUILD_opencv_legacy&#x3D;OFF &lt;opencv_source_directory&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>If you prefer using the gui version of cmake (cmake-gui), then, you can add <code>opencv_contrib</code> modules within <code>opencv</code> core by doing the following:</p><ol><li><p>start cmake-gui</p></li><li><p>select the opencv source code folder and the folder where binaries will be built (the 2 upper forms of the interface)</p></li><li><p>press the <code>configure</code> button. you will see all the opencv build parameters in the central interface</p></li><li><p>browse the parameters and look for the form called <code>OPENCV_EXTRA_MODULES_PATH</code> (use the search form to focus rapidly on it)</p></li><li><p>complete this <code>OPENCV_EXTRA_MODULES_PATH</code> by the proper pathname to the <code>&lt;opencv_contrib&gt;/modules</code> value using its browse button.</p></li><li><p>press the <code>configure</code> button followed by the <code>generate</code> button (the first time, you will be asked which makefile style to use)</p></li><li><p>build the <code>opencv</code> core with the method you chose (make and make install if you chose Unix makefile at step 6)</p></li><li><p>to run, linker flags to contrib modules will need to be added to use them in your code&#x2F;IDE. For example to use the aruco module, “-lopencv_aruco” flag will be added.</p></li></ol><h3 id="Update-the-repository-documentation"><a href="#Update-the-repository-documentation" class="headerlink" title="Update the repository documentation"></a>Update the repository documentation</h3><p>In order to keep a clean overview containing all contributed modules the following files need to be created&#x2F;adapted.</p><ol><li><p>Update the README.md file under the modules folder. Here you add your model with a single line description.</p></li><li><p>Add a README.md inside your own module folder. This README explains which functionality (separate functions) is available, links to the corresponding samples and explains in somewhat more detail what the module is expected to do. If any extra requirements are needed to build the module without problems, add them here also.</p></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/modules/js/perf/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/modules/js/perf/README/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenCV-js-Performance-Test"><a href="#OpenCV-js-Performance-Test" class="headerlink" title="OpenCV.js Performance Test"></a>OpenCV.js Performance Test</h1><h2 id="Node-js-Version"><a href="#Node-js-Version" class="headerlink" title="Node.js Version"></a>Node.js Version</h2><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><ol><li><p>node.js, npm: Make sure you have installed these beforehand with the system package manager.</p></li><li><p>Benchmark.js: Make sure you have installed Benchmark.js by npm before use. Please run <code>npm install</code> in the directory <code>&lt;build_dir&gt;/bin/perf</code>.</p></li></ol><h3 id="How-to-Use"><a href="#How-to-Use" class="headerlink" title="How to Use"></a>How to Use</h3><p>For example, if you want to test the performance of cvtColor, please run <code>perf_cvtcolor.js</code> by node in terminal:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> perf_cvtcolor.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>All tests of cvtColor will be run by above command.</p><p>If you just want to run one specific case, please use <code>--test_param_filter=&quot;()&quot;</code> flag, like:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> perf_cvtcolor.js <span class="token parameter variable">--test_param_filter</span><span class="token operator">=</span><span class="token string">"(1920x1080, COLOR_BGR2GRAY)"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Browser-Version"><a href="#Browser-Version" class="headerlink" title="Browser Version"></a>Browser Version</h2><h3 id="How-to-Use-1"><a href="#How-to-Use-1" class="headerlink" title="How to Use"></a>How to Use</h3><p>To run performance tests, please launch a local web server in <build_dir>&#x2F;bin folder. For example, node http-server which serves on localhost:8080.</p><p>Navigate the web browser to the kernel page you want to test, like <a href="http://localhost:8080/perf/imgproc/cvtcolor.html">http://localhost:8080/perf/imgproc/cvtcolor.html</a>.</p><p>You can input the parameter, and then click the <code>Run</code> button to run the specific case, or it will run all the cases.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/doc/tutorials/imgproc/morph_lines_detection/morph_lines_detection/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/doc/tutorials/imgproc/morph_lines_detection/morph_lines_detection/</url>
      
        <content type="html"><![CDATA[<p>Extract horizontal and vertical lines by using morphological operations </p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/doc/tutorials/dnn/dnn_custom_layers/dnn_custom_layers/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/doc/tutorials/dnn/dnn_custom_layers/dnn_custom_layers/</url>
      
        <content type="html"><![CDATA[<h1 id="Custom-deep-learning-layers-support"><a href="#Custom-deep-learning-layers-support" class="headerlink" title="Custom deep learning layers support"></a>Custom deep learning layers support</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/doc/opencv-logo/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/doc/opencv-logo/</url>
      
        <content type="html"><![CDATA[<p>OpenCV logo has been originally designed and contributed to OpenCV by Adi Shavit in 2006. The graphical part consists of three stylized letters O, C, V, colored in the primary R, G, B color components, used by humans and computers to perceive the world. It is shaped in a way to mimic the famous <a href="https://en.wikipedia.org/wiki/Illusory_contours">Kanizsa’s triangle</a> to emphasize that the prior knowledge and internal processing are at least as important as the actually acquired “raw” data.</p><p>The restyled version of the logo has been designed and contributed by <a href="https://xperience.ai/">xperience.ai</a> in July 2020 for the <a href="https://opencv.org/anniversary/">20th anniversary</a> of OpenCV.</p><p>The logo uses <a href="https://fonts.google.com/specimen/Exo+2#about">Exo 2</a> font by Natanael Gama distributed under OFL license.</p><p>Higher-resolution version of the logo, as well as SVG version of it, can be obtained at OpenCV <a href="https://opencv.org/resources/media-kit/">Media Kit</a>.</p><p><img src="/./opencv-logo2.png"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/CONTRIBUTING/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/CONTRIBUTING/</url>
      
        <content type="html"><![CDATA[<h2 id="Contributing-guidelines"><a href="#Contributing-guidelines" class="headerlink" title="Contributing guidelines"></a>Contributing guidelines</h2><p>All guidelines for contributing to the OpenCV repository can be found at <a href="https://github.com/opencv/opencv/wiki/How_to_contribute"><code>How to contribute guideline</code></a>.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/README/</url>
      
        <content type="html"><![CDATA[<h2 id="OpenCV-Open-Source-Computer-Vision-Library"><a href="#OpenCV-Open-Source-Computer-Vision-Library" class="headerlink" title="OpenCV: Open Source Computer Vision Library"></a>OpenCV: Open Source Computer Vision Library</h2><h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><ul><li>Homepage: <a href="http://opencv.org/">http://opencv.org</a></li><li>Docs: <a href="http://docs.opencv.org/3.4/">http://docs.opencv.org/3.4/</a></li><li>Q&amp;A forum: <a href="https://forum.opencv.org/">https://forum.opencv.org</a><ul><li>previous forum (read only): <a href="http://answers.opencv.org/">http://answers.opencv.org</a></li></ul></li><li>Issue tracking: <a href="https://github.com/opencv/opencv/issues">https://github.com/opencv/opencv/issues</a></li></ul><h3 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h3><p>Please read the <a href="https://github.com/opencv/opencv/wiki/How_to_contribute">contribution guidelines</a> before starting work on a pull request.</p><h4 id="Summary-of-the-guidelines"><a href="#Summary-of-the-guidelines" class="headerlink" title="Summary of the guidelines:"></a>Summary of the guidelines:</h4><ul><li>One pull request per issue;</li><li>Choose the right base branch;</li><li>Include tests and documentation;</li><li>Clean up “oops” commits before submitting;</li><li>Follow the <a href="https://github.com/opencv/opencv/wiki/Coding_Style_Guide">coding style guide</a>.</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/openvx/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/openvx/README/</url>
      
        <content type="html"><![CDATA[<h1 id="C-wrappers-for-OpenVX-1-x-C-API"><a href="#C-wrappers-for-OpenVX-1-x-C-API" class="headerlink" title="C++ wrappers for OpenVX-1.x C API"></a>C++ wrappers for OpenVX-1.x C API</h1><h2 id="Core-ideas"><a href="#Core-ideas" class="headerlink" title="Core ideas:"></a>Core ideas:</h2><ul><li>lightweight - minimal overhead vs standard C API</li><li>automatic references counting</li><li>exceptions instead of return codes</li><li>object-oriented design</li><li>(NYI) helpers for user-defined kernels &amp; nodes</li><li>C++ 11 friendly</li></ul><h2 id="Quick-start-sample"><a href="#Quick-start-sample" class="headerlink" title="Quick start sample"></a>Quick start sample</h2><p>The following short sample gives basic knowledges on the wrappers usage:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"ivx.hpp"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"ivx_lib_debug.hpp"</span> <span class="token comment">// ivx::debug::*</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>vx_uint32 width <span class="token operator">=</span> <span class="token number">640</span><span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">480</span><span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">&#123;</span>ivx<span class="token double-colon punctuation">::</span>Context context <span class="token operator">=</span> ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Context</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ivx<span class="token double-colon punctuation">::</span>Graph graph <span class="token operator">=</span> ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Graph</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>ivx<span class="token double-colon punctuation">::</span>Image    gray <span class="token operator">=</span> ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Image</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> VX_DF_IMAGE_U8<span class="token punctuation">)</span><span class="token punctuation">,</span>    gb   <span class="token operator">=</span> ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Image</span><span class="token double-colon punctuation">::</span><span class="token function">createVirtual</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">,</span>    res  <span class="token operator">=</span> ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Image</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> VX_DF_IMAGE_U8<span class="token punctuation">)</span><span class="token punctuation">;</span>context<span class="token punctuation">.</span><span class="token function">loadKernels</span><span class="token punctuation">(</span><span class="token string">"openvx-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ivx::debug::*</span>ivx<span class="token double-colon punctuation">::</span>debug<span class="token double-colon punctuation">::</span><span class="token function">fReadImage</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> inputPath<span class="token punctuation">,</span> gray<span class="token punctuation">)</span><span class="token punctuation">;</span>ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Node</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> VX_KERNEL_GAUSSIAN_3x3<span class="token punctuation">,</span> gray<span class="token punctuation">,</span> gb<span class="token punctuation">)</span><span class="token punctuation">;</span>ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Node</span><span class="token double-colon punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span>    graph<span class="token punctuation">,</span>    VX_KERNEL_THRESHOLD<span class="token punctuation">,</span>    gb<span class="token punctuation">,</span>    ivx<span class="token double-colon punctuation">::</span><span class="token class-name">Threshold</span><span class="token double-colon punctuation">::</span><span class="token function">createBinary</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> VX_TYPE_UINT8<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    res<span class="token punctuation">)</span><span class="token punctuation">;</span>graph<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>graph<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ivx<span class="token double-colon punctuation">::</span>debug<span class="token double-colon punctuation">::</span><span class="token function">fWriteImage</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token string">"ovx-res-cpp.pgm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">const</span> ivx<span class="token double-colon punctuation">::</span>RuntimeError<span class="token operator">&amp;</span> e<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ErrorRuntime: code = %d(%x), message = %s\n"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">const</span> ivx<span class="token double-colon punctuation">::</span>WrapperError<span class="token operator">&amp;</span> e<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ErrorWrapper: message = %s\n"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">const</span> std<span class="token double-colon punctuation">::</span>exception<span class="token operator">&amp;</span> e<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"runtime_error: message = %s\n"</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="C-API-overview"><a href="#C-API-overview" class="headerlink" title="C++ API overview"></a>C++ API overview</h2><p>The wrappers have <strong>header-only</strong> implementation that simplifies their integration to projects.<br>All the API is inside <code>ivx</code> namespace (E.g. <code>class ivx::Graph</code>).</p><p>While the C++ API is pretty much the same for underlying OpenVX version <strong>1.0</strong> and <strong>1.1</strong>, there are alternative code branches for some features implementation  that are selected at <strong>compile time</strong> via <code>#ifdef</code> preprocessor directives.<br>E.g. external ref-counting is implemented for 1.0 version and native OpenVX one is used (via  <code>vxRetainReference()</code> and <code>vxReleaseXYZ()</code>) for version 1.1.</p><p>Also there are some <strong>C++ 11</strong> features are used (e.g. rvalue ref-s) when their availability is detected at <em><strong>compile time</strong></em>.</p><p>C++ exceptions are used for errors indication instead of return codes. There are two types of exceptions are defined:  <code>RuntimeError</code> is thrown when OpenVX C call returned unsuccessful result and <code>WrapperError</code> is thrown when a problem is occured in the wrappers code. Both exception calsses are derived from <code>std::exception</code> (actually from its inheritants).</p><p>The so called <strong>OpenVX objects</strong> (e.g. <code>vx_image</code>) are represented as C++ classes in wrappers.<br>All these classes use automatic ref-counting that allows development of exception-safe code.<br>All these classes have <code>create()</code> or <code>createXYZ()</code> <code>static</code> methods for instances creation. (E.g. <code>Image::create()</code>, <code>Image::createVirtual()</code> and  <code>Image::createFromHandle()</code>)<br>Most of the wrapped OpenVX functions are represented as methods of the corresponding C++ classes, but in most cases they still accept C “object” types (e.g. <code>vx_image</code> or <code>vx_context</code>) that allows mixing of C and C++ OpenVX API use.<br>E.g.:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Image</span><span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> Image <span class="token function">create</span><span class="token punctuation">(</span>vx_context context<span class="token punctuation">,</span> vx_uint32 width<span class="token punctuation">,</span> vx_uint32 height<span class="token punctuation">,</span> vx_df_image format<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> Image <span class="token function">createVirtual</span><span class="token punctuation">(</span>vx_graph graph<span class="token punctuation">,</span> vx_uint32 width <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> vx_uint32 height <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> vx_df_image format <span class="token operator">=</span> VX_DF_IMAGE_VIRT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>All the classes instances can automatically be converted to the corresponding C “object” types.</p><p>For more details please refer to C++ wrappers reference manual or directly to their source code.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/protobuf/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/protobuf/README/</url>
      
        <content type="html"><![CDATA[<p>Project: Protocol Buffers - Google’s data interchange format<br>Source code: <a href="https://github.com/protocolbuffers/protobuf">https://github.com/protocolbuffers/protobuf</a><br>Version: 3.5.2</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/openvx/hal/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/openvx/hal/README/</url>
      
        <content type="html"><![CDATA[<p>#OpenVX-based HAL implementation.<br>It’s built when OpenVX is available (<code>HAVE_OPENVX</code>).<br>To build OpenCV with OpenVX support add the following <strong>cmake</strong> options:<br><code>-DOPENVX_ROOT=/path/to/prebuilt/openvx -DWITH_OPENVX=YES</code></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/libjpeg-turbo/LICENSE/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/libjpeg-turbo/LICENSE/</url>
      
        <content type="html"><![CDATA[<h1 id="libjpeg-turbo-Licenses"><a href="#libjpeg-turbo-Licenses" class="headerlink" title="libjpeg-turbo Licenses"></a>libjpeg-turbo Licenses</h1><p>libjpeg-turbo is covered by three compatible BSD-style open source licenses:</p><ul><li><p>The IJG (Independent JPEG Group) License, which is listed in<br><a href="README.ijg">README.ijg</a></p><p>This license applies to the libjpeg API library and associated programs<br>(any code inherited from libjpeg, and any modifications to that code.)</p></li><li><p>The Modified (3-clause) BSD License, which is listed below</p><p>This license covers the TurboJPEG API library and associated programs, as<br>well as the build system.</p></li><li><p>The <a href="https://opensource.org/licenses/Zlib">zlib License</a></p><p>This license is a subset of the other two, and it covers the libjpeg-turbo<br>SIMD extensions.</p></li></ul><h1 id="Complying-with-the-libjpeg-turbo-Licenses"><a href="#Complying-with-the-libjpeg-turbo-Licenses" class="headerlink" title="Complying with the libjpeg-turbo Licenses"></a>Complying with the libjpeg-turbo Licenses</h1><p>This section provides a roll-up of the libjpeg-turbo licensing terms, to the<br>best of our understanding.</p><ol><li><p>If you are distributing a modified version of the libjpeg-turbo source,<br>then:</p><ol><li><p>You cannot alter or remove any existing copyright or license notices<br>from the source.</p><p><strong>Origin</strong></p><ul><li>Clause 1 of the IJG License</li><li>Clause 1 of the Modified BSD License</li><li>Clauses 1 and 3 of the zlib License</li></ul></li><li><p>You must add your own copyright notice to the header of each source<br>file you modified, so others can tell that you modified that file (if<br>there is not an existing copyright header in that file, then you can<br>simply add a notice stating that you modified the file.)</p><p><strong>Origin</strong></p><ul><li>Clause 1 of the IJG License</li><li>Clause 2 of the zlib License</li></ul></li><li><p>You must include the IJG README file, and you must not alter any of the<br>copyright or license text in that file.</p><p><strong>Origin</strong></p><ul><li>Clause 1 of the IJG License</li></ul></li></ol></li><li><p>If you are distributing only libjpeg-turbo binaries without the source, or<br>if you are distributing an application that statically links with<br>libjpeg-turbo, then:</p><ol><li><p>Your product documentation must include a message stating:</p><p>This software is based in part on the work of the Independent JPEG<br>Group.</p><p><strong>Origin</strong></p><ul><li>Clause 2 of the IJG license</li></ul></li><li><p>If your binary distribution includes or uses the TurboJPEG API, then<br>your product documentation must include the text of the Modified BSD<br>License (see below.)</p><p><strong>Origin</strong></p><ul><li>Clause 2 of the Modified BSD License</li></ul></li></ol></li><li><p>You cannot use the name of the IJG or The libjpeg-turbo Project or the<br>contributors thereof in advertising, publicity, etc.</p><p><strong>Origin</strong></p><ul><li>IJG License</li><li>Clause 3 of the Modified BSD License</li></ul></li><li><p>The IJG and The libjpeg-turbo Project do not warrant libjpeg-turbo to be<br>free of defects, nor do we accept any liability for undesirable<br>consequences resulting from your use of the software.</p><p><strong>Origin</strong></p><ul><li>IJG License</li><li>Modified BSD License</li><li>zlib License</li></ul></li></ol><h1 id="The-Modified-3-clause-BSD-License"><a href="#The-Modified-3-clause-BSD-License" class="headerlink" title="The Modified (3-clause) BSD License"></a>The Modified (3-clause) BSD License</h1><p>Copyright (C)2009-2021 D. R. Commander.  All Rights Reserved.<br><br>Copyright (C)2015 Viktor Szathmáry.  All Rights Reserved.</p><p>Redistribution and use in source and binary forms, with or without<br>modification, are permitted provided that the following conditions are met:</p><ul><li>Redistributions of source code must retain the above copyright notice,<br>this list of conditions and the following disclaimer.</li><li>Redistributions in binary form must reproduce the above copyright notice,<br>this list of conditions and the following disclaimer in the documentation<br>and&#x2F;or other materials provided with the distribution.</li><li>Neither the name of the libjpeg-turbo Project nor the names of its<br>contributors may be used to endorse or promote products derived from this<br>software without specific prior written permission.</li></ul><p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”,<br>AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE<br>IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE<br>ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE<br>LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR<br>CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF<br>SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS<br>INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN<br>CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)<br>ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE<br>POSSIBILITY OF SUCH DAMAGE.</p><h1 id="Why-Three-Licenses"><a href="#Why-Three-Licenses" class="headerlink" title="Why Three Licenses?"></a>Why Three Licenses?</h1><p>The zlib License could have been used instead of the Modified (3-clause) BSD<br>License, and since the IJG License effectively subsumes the distribution<br>conditions of the zlib License, this would have effectively placed<br>libjpeg-turbo binary distributions under the IJG License.  However, the IJG<br>License specifically refers to the Independent JPEG Group and does not extend<br>attribution and endorsement protections to other entities.  Thus, it was<br>desirable to choose a license that granted us the same protections for new code<br>that were granted to the IJG for code derived from their software.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/cpufeatures/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/cpufeatures/README/</url>
      
        <content type="html"><![CDATA[<p>The Android NDK provides a small library named cpufeatures that your app can use at runtime to detect the target device’s CPU family and the optional features it supports.<br>It is designed to work as-is on all official Android platform versions.</p><p><a href="https://developer.android.com/ndk/guides/cpu-features.html">https://developer.android.com/ndk/guides/cpu-features.html</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/carotene/README/"/>
      <url>/2023/04/02/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/opencv-3.4.15/3rdparty/carotene/README/</url>
      
        <content type="html"><![CDATA[<p>This is Carotene, a low-level library containing optimized CPU routines<br>that are useful for computer vision algorithms.</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安卓OpenGL渲染画面闪烁原因分析</title>
      <link href="/2023/03/16/%E5%AE%89%E5%8D%93OpenGL%E6%B8%B2%E6%9F%93%E7%94%BB%E9%9D%A2%E9%97%AA%E7%83%81%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/"/>
      <url>/2023/03/16/%E5%AE%89%E5%8D%93OpenGL%E6%B8%B2%E6%9F%93%E7%94%BB%E9%9D%A2%E9%97%AA%E7%83%81%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>1.硬件接触不良<br>2.opengl双缓存未开启<br>3.opengl双缓存开启但离屏数据为更新<br>4.相机数据被覆盖<br>4.1相机数据格式不对<br>4.2申请内存与访问内存越界问题</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 待整理android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> opengl </tag>
            
            <tag> 画面闪烁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用指南</title>
      <link href="/2023/02/28/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2023/02/28/git%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="git-config-设置用户名称和邮件地址"><a href="#git-config-设置用户名称和邮件地址" class="headerlink" title="git config 设置用户名称和邮件地址"></a><code>git config</code> 设置用户名称和邮件地址</h2><ul><li>设置用户名称<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"goto456"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置邮件地址<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"goto456@126.com"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>列出当前Git所有的配置信息<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--list</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="git-init-初始化本地仓库"><a href="#git-init-初始化本地仓库" class="headerlink" title="git init 初始化本地仓库"></a><code>git init</code> 初始化本地仓库</h2><p>获取一个 Git 仓库有两种方法：<br>1.本地初始化一个仓库<br>2.从远程克隆一个仓库到本地<br>对于第1种方式，如果想对本地现有的一个项目用 Git 来管理，可以直接进入该项目的目录下执行如下命令，就可以将其初始化成一个 Git 仓库了。  </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="git-clone-克隆远程仓库到本地"><a href="#git-clone-克隆远程仓库到本地" class="headerlink" title="git clone 克隆远程仓库到本地"></a><code>git clone</code> 克隆远程仓库到本地</h2><ul><li>通过ssh方式克隆<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:goto456/leetcode.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>通过https方式克隆<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/goto456/leetcode.git <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>https方式：不管是谁，只要拿到该项目的 url 可以随便 clone，但是在 push 到远程的时候需要验证用户名和密码；<br>ssh方式：需要现将你电脑的SSH key（SSH公钥）添加到GitHub（或者其他代码托管网站）上，这样在 clone 项目和 push 项目到远程时都不需要输入用户名和密码。</p></blockquote></li></ul><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><div class="row">    <embed src="git教程.pdf" width="100%" height="550" type="application/pdf"></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++的lambda表达式使用方法</title>
      <link href="/2023/02/14/C++%E7%9A%84lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/14/C++%E7%9A%84lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 函数参数传递 </tag>
            
            <tag> lambda表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编码规范</title>
      <link href="/2023/02/14/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
      <url>/2023/02/14/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="C-编码规范"><a href="#C-编码规范" class="headerlink" title="C++编码规范"></a>C++编码规范</h1><div class="row">    <embed src="C++编码规范C1.pdf" width="100%" height="550" type="application/pdf"></div><blockquote><p>C++编码规范.pdf的升级版本</p></blockquote><h1 id="C编码规范"><a href="#C编码规范" class="headerlink" title="C编码规范"></a>C编码规范</h1><div class="row">    <embed src="嵌入式C编码规范.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="java编码规范"><a href="#java编码规范" class="headerlink" title="java编码规范"></a>java编码规范</h1><div class="row">    <embed src="Java编码规范.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="C-编码规范-1"><a href="#C-编码规范-1" class="headerlink" title="C#编码规范"></a>C#编码规范</h1><div class="row">    <embed src="C井编码规范C1.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="google编程风格指南"><a href="#google编程风格指南" class="headerlink" title="google编程风格指南"></a>google编程风格指南</h1><div class="row">    <embed src="google编程风格指南.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="移动机器人开发代码规范说明书"><a href="#移动机器人开发代码规范说明书" class="headerlink" title="移动机器人开发代码规范说明书"></a>移动机器人开发代码规范说明书</h1><div class="row">    <embed src="移动机器人开发代码规范说明书.pdf" width="100%" height="550" type="application/pdf"></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 编码规范 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> java </tag>
            
            <tag> C </tag>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Activity和SurfaceView的生命周期</title>
      <link href="/2023/02/10/Activity%E5%92%8CSurfaceView%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2023/02/10/Activity%E5%92%8CSurfaceView%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<p>当用户浏览、退出和返回到您的应用时，您应用中的 Activity 实例会在其生命周期的不同状态间转换。Activity 类会提供许多回调，这些回调会让 Activity 知晓某个状态已经更改：系统正在创建、停止或恢复某个 Activity，或者正在销毁该 Activity 所在的进程。</p><p>在生命周期回调方法中，您可以声明用户离开和再次进入 Activity 时 Activity 的行为方式。例如，如果您正构建流媒体视频播放器，当用户切换至另一应用时，您可能要暂停视频或终止网络连接。当用户返回时，您可以重新连接网络并允许用户从同一位置继续播放视频。换言之，每个回调都支持您执行适合给定状态变更的特定作业。在合适的时间执行正确的作业，并妥善处理转换，这将提升应用的稳健性和性能。例如，良好的生命周期回调实现有助于防止应用出现以下问题：</p><ul><li>当用户在使用应用时接听来电，或切换至另一应用时崩溃。</li><li>当用户未主动使用它时，消耗宝贵的系统资源。</li><li>当用户离开应用并在稍后返回时，丢失用户的进度。</li><li>当屏幕在横向和纵向之间旋转时，崩溃或丢失用户的进度。</li></ul><h1 id="Activity-生命周期概念"><a href="#Activity-生命周期概念" class="headerlink" title="Activity 生命周期概念"></a>Activity 生命周期概念</h1><p>为了在 Activity 生命周期的各个阶段之间导航转换，Activity 类提供六个核心回调：onCreate()、onStart()、onResume()、onPause()、onStop() 和 onDestroy()。当 Activity 进入新状态时，系统会调用其中每个回调。</p><p>下图是对此范例的直观展现。<br><img src="/2023/02/10/Activity%E5%92%8CSurfaceView%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/activity_lifecycle.png" alt="Activity的生命周期"></p><p>当用户开始离开 Activity 时，系统会调用方法来销毁该 Activity。在某些情况下，此销毁只是部分销毁；Activity 仍然驻留在内存中（例如当用户切换至另一应用时），并且仍然可以返回到前台。如果用户返回到该 Activity，Activity 会从用户离开时的位置继续运行。除了少数例外，应用在后台运行时会受到限制，无法启动 Activity。</p><p>系统终止给定进程及其中 Activity 的可能性取决于当时 Activity 的状态。Activity 状态和从内存中弹出 会更详细地介绍状态与弹出漏洞之间的关系。</p><p>根据 Activity 的复杂程度，您可能不需要实现所有生命周期方法。但是，请务必了解每个方法，并实现能够确保应用按用户预期方式运行的方法，这非常重要。</p><blockquote><p>具体细节参考：<a href="https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh-cn#java">https://developer.android.google.cn/guide/components/activities/activity-lifecycle?hl=zh-cn#java</a></p></blockquote><h1 id="Activity和SurfaceView的生命周期"><a href="#Activity和SurfaceView的生命周期" class="headerlink" title="Activity和SurfaceView的生命周期"></a>Activity和SurfaceView的生命周期</h1><ul><li><p>程序打开<br>Activity 调用顺序:<code>onCreate()</code>-&gt;<code>onStart()</code>-&gt;<code>onResume()</code><br>SurfaceView 调用顺序: <code>surfaceCreated()</code>-&gt;<code>surfaceChanged()</code>  </p></li><li><p>程序关闭（按 BACK 键）<br>Activity 调用顺序:<code>onPause()</code>-&gt;<code>onStop()</code>-&gt;<code>onDestory()</code><br>SurfaceView 调用顺序: <code>surfaceDestroyed()</code>  </p></li><li><p>程序切到后台（按 HOME 键）<br>Activity 调用顺序:<code>onPause()</code>-&gt;<code>onStop()</code><br>SurfaceView 调用顺序: <code>surfaceDestroyed()</code>  </p></li><li><p>程序切到前台<br>Activity 调用顺序: <code>onRestart()</code>-&gt;<code>onStart()</code>-&gt;<code>onResume()</code><br>SurfaceView 调用顺序: <code>surfaceChanged()</code>-&gt;<code>surfaceCreated()</code>  </p></li><li><p>屏幕锁定（挂断键或锁定屏幕）<br>Activity 调用顺序: <code>onPause()</code><br>SurfaceView 什么方法都不调用  </p></li><li><p>屏幕解锁<br>Activity 调用顺序:<code>onResume()</code><br>SurfaceView 什么方法都不调用</p></li></ul><blockquote><p>总结SurfaceView在页面可见或者不可见时触发  </p></blockquote><p>示例图如下所示:<br><img src="/2023/02/10/Activity%E5%92%8CSurfaceView%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/activity_surfaceView.png" alt="Activity的生命周期"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> activity </tag>
            
            <tag> surfaceView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用思维导图</title>
      <link href="/2023/01/31/hexo%E4%BD%BF%E7%94%A8%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
      <url>/2023/01/31/hexo%E4%BD%BF%E7%94%A8%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>基于百度脑图的开源库 kityminder 很不错，实现了markdown文档中使用思维导图的方法。使用 Hexo 的 pullquote 将思维导图的内容包裹起来，mindmap 是思维导图渲染的标志，尺寸有三种规格：mindmap-sm、mindmap-md 和 mindmap-lg。<br>思维导图的内容和层级关系通过无序列表表示，支持基本的文字和超链接。举个例子，撰写文章时在需要的位置添加如下内容:  </p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">&#123;% pullquote mindmap mindmap-md %&#125;<span class="token list punctuation">-</span> <span class="token url">[<span class="token content">在 Hexo 中使用思维导图</span>](<span class="token url">https://hunterx.xyz/use-mindmap-in-hexo.html</span>)</span>  <span class="token list punctuation">-</span> 前言  <span class="token list punctuation">-</span> 操作指南    <span class="token list punctuation">-</span> 准备需要的文件    <span class="token list punctuation">-</span> 为主题添加 CSS/JS 文件  <span class="token list punctuation">-</span> 使用方法&#123;% endpullquote %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：  </p><blockquote class="pullquote mindmap mindmap-md"><ul><li><a href="https://hunterx.xyz/use-mindmap-in-hexo.html">在 Hexo 中使用思维导图</a><ul><li>前言</li><li>操作指南<ul><li>准备需要的文件</li><li>为主题添加 CSS&#x2F;JS 文件</li></ul></li><li>使用方法</li></ul></li></ul></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维导图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu安装opencv与opencv_contrib</title>
      <link href="/2023/01/31/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/"/>
      <url>/2023/01/31/ubuntu%E5%AE%89%E8%A3%85opencv%E4%B8%8Eopencv_contrib/</url>
      
        <content type="html"><![CDATA[<p>参考链接：<a href="https://blog.csdn.net/xiangxianghehe/article/details/78780269">https://blog.csdn.net/xiangxianghehe/article/details/78780269</a>     </p><p>参考链接：<a href="https://blog.csdn.net/qq_43478260/article/details/109458079?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant">https://blog.csdn.net/qq_43478260/article/details/109458079?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant</a>.  none-task-blog-2%7Edefault%7EESLANDING%7Edefault-3-109458079-blog-107423625.pc_relevant_landingrelevant&amp;depth_1-utm_source&#x3D;distribute.pc_relevant.  none-task-blog-2%7Edefault%7EESLANDING%7Edefault-3-109458079-blog-107423625.pc_relevant_landingrelevant&amp;utm_relevant_index&#x3D;4  </p><p>文件移动：<a href="https://blog.csdn.net/weixin_45846977/article/details/112396739">https://blog.csdn.net/weixin_45846977/article/details/112396739</a>  </p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 待整理opencv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> opencv </tag>
            
            <tag> opencv_contrib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>malloc申请内存访问时容易出现的访问越界问题</title>
      <link href="/2022/12/15/malloc%E7%94%B3%E8%AF%B7%E5%86%85%E5%AD%98%E8%AE%BF%E9%97%AE%E6%97%B6%E5%AE%B9%E6%98%93%E5%87%BA%E7%8E%B0%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B6%8A%E7%95%8C%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/15/malloc%E7%94%B3%E8%AF%B7%E5%86%85%E5%AD%98%E8%AE%BF%E9%97%AE%E6%97%B6%E5%AE%B9%E6%98%93%E5%87%BA%E7%8E%B0%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B6%8A%E7%95%8C%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="malloc相关"><a href="#malloc相关" class="headerlink" title="malloc相关"></a>malloc相关</h1><h2 id="malloc申请内存访问bug"><a href="#malloc申请内存访问bug" class="headerlink" title="malloc申请内存访问bug"></a>malloc申请内存访问bug</h2><ul><li>在访问malloc申请的内存时，如果访问越界时不会提示错误，而是继续操作错误的内存块，这一类的错误较为隐秘。</li><li>例如：在构建图像变换的map映射表时，申请存放map映射关系的内存块的大小并不是输出图像对应的大小，而是输出图像大小的2倍，因此此时存储的是像素位置(x,y)的映射关系。  <pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">&#x2F;&#x2F;构建4路YUV鱼眼图像去畸变映射关系void dist2undist()&#123;    float point_u_tmp[2], point_d_tmp[2];    float sf &#x3D; 1.5;    int img_out_height &#x3D; 720 * img_out_h_scale;    int img_out_width &#x3D; 1280 * img_out_w_scale;    LOGI(1, &quot;dist2undist begin !,img_out size(%d,%d)&quot;, img_out_height, img_out_width);    for (int index &#x3D; 0; index &lt; NUM_CAMERAS; index++)    &#123;        &#x2F;&#x2F; 这里就是bug所在        undist_map[index] &#x3D; (float *)malloc(undistView_width * undistView_height * 3 &#x2F; 2 * 2 * sizeof(float));        if (undist_map[index] &#x3D;&#x3D; NULL)        &#123;            LOGI(1, &quot;undist_map malloc failed!&quot;);        &#125;        for (int i &#x3D; 0; i &lt; img_out_height; i +&#x3D; 1)        &#123;            for (int j &#x3D; 0; j &lt; img_out_width; j +&#x3D; 1)            &#123;                point_u_tmp[0] &#x3D; j &#x2F; img_out_w_scale;                point_u_tmp[1] &#x3D; i &#x2F; img_out_h_scale;                LDC_UndistToDistExt(&amp;ldc[0], point_u_tmp, point_d_tmp, sf);                undist_map[index][(i * img_out_width + j) * 2] &#x3D; point_d_tmp[0] * img_in_w_scale;                undist_map[index][(i * img_out_width + j) * 2 + 1] &#x3D; point_d_tmp[1] * img_in_h_scale;                if (!int(j % 2))                &#123;                    undist_map[index][(i &#x2F; 2 * img_out_width + j + img_out_width * img_out_height) * 2] &#x3D; int(point_d_tmp[0] * img_in_w_scale &#x2F; 2) * 2;                    undist_map[index][(i &#x2F; 2 * img_out_width + j + img_out_width * img_out_height) * 2 + 1] &#x3D; int(point_d_tmp[1] * img_in_h_scale &#x2F; 2) + 720 * img_in_h_scale;                    undist_map[index][(i &#x2F; 2 * img_out_width + j + img_out_width * img_out_height + 1) * 2] &#x3D; int(point_d_tmp[0] * img_in_w_scale &#x2F; 2) * 2 + 1;                    undist_map[index][(i &#x2F; 2 * img_out_width + j + img_out_width * img_out_height + 1) * 2 + 1] &#x3D; int(point_d_tmp[1] * img_in_h_scale &#x2F; 2) + 720 * img_in_h_scale;                &#125;            &#125;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>如果 #18 行中申请内存为:<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">undist_map[index] &#x3D; (float *)malloc(undistView_width * undistView_height * 3 &#x2F; 2 * sizeof(float));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>那么，后面构建map映射关系时并不会出现越界访问提示，甚至后面如果不再申请内存块的情况下，继续越界访问undist_map中的内容也不会报错；但是，如果后面继续申请内存块来使用的时候，后续的内存块可能就会和undist_map内存冲突。</li></ul><hr><p><font color=Red><strong>总结</strong></font><br>使用malloc申请内存并访问时，注意访问是否越界，且访问越界不报错。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> malloc </tag>
            
            <tag> 内存访问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android弹窗界面设置方法</title>
      <link href="/2022/12/14/android%E5%BC%B9%E7%AA%97%E7%95%8C%E9%9D%A2%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/"/>
      <url>/2022/12/14/android%E5%BC%B9%E7%AA%97%E7%95%8C%E9%9D%A2%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><p>点击主界面的一个按钮，然后跳转另一个设置界面，进行参数设置，包括：参数输入、开关按钮、保存、退出等功能。界面的布局采用表格布局，平均分布各个行列。示例代码如下所示。</p><h1 id="MainActivity-java示例"><a href="#MainActivity-java示例" class="headerlink" title="MainActivity.java示例"></a>MainActivity.java示例</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 主界面按钮定义</span><span class="token keyword">private</span> <span class="token class-name">ImageButton</span> mImage_set_btn<span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 主界面按钮事件</span><span class="token comment">// R.id.image_set_btn为主界面按钮ID</span>mImage_set_btn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ImageButton</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>image_set_btn<span class="token punctuation">)</span><span class="token punctuation">;</span>mImage_set_btn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> view<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">final</span> <span class="token class-name">LayoutInflater</span> layoutInflater <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span><span class="token punctuation">)</span><span class="token function">getBaseContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token constant">LAYOUT_INFLATER_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//R.id.avm_parm_view为跳转界面ID（android:id="@+id/avm_parm_view"）</span><span class="token class-name">View</span> popupView <span class="token operator">=</span> layoutInflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_avm_parm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">ViewGroup</span><span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>avm_parm_view<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mPopupWindow_register <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PopupWindow</span><span class="token punctuation">(</span>popupView<span class="token punctuation">,</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span><span class="token constant">MATCH_PARENT</span><span class="token punctuation">,</span> <span class="token class-name">WindowManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">.</span><span class="token constant">MATCH_PARENT</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mPopupWindow_register<span class="token punctuation">.</span><span class="token function">setTouchable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mPopupWindow_register<span class="token punctuation">.</span><span class="token function">setOutsideTouchable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mPopupWindow_register<span class="token punctuation">.</span><span class="token function">setBackgroundDrawable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BitmapDrawable</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Bitmap</span><span class="token punctuation">)</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mPopupWindow_register<span class="token punctuation">.</span><span class="token function">showAsDropDown</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//------ 获取输入控件的输入内容 ------</span><span class="token comment">//车长</span>editText_car_length <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> mPopupWindow_register<span class="token punctuation">.</span><span class="token function">getContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>EditText_car_length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//车宽</span>editText_car_width <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> mPopupWindow_register<span class="token punctuation">.</span><span class="token function">getContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>EditText_car_width<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//前悬</span>editText_suspension_front <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> mPopupWindow_register<span class="token punctuation">.</span><span class="token function">getContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>EditText_suspension_front<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//后悬</span>editText_suspension_back <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">EditText</span><span class="token punctuation">)</span> mPopupWindow_register<span class="token punctuation">.</span><span class="token function">getContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>EditText_suspension_back<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//保存按钮</span>delok_btn <span class="token operator">=</span> popupView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>avm_parameter_save<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回按钮</span>delcancel_btn <span class="token operator">=</span> popupView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>avm_parameter_return<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//车道线开关</span>mTrajectory_Switch<span class="token operator">=</span>popupView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>TrajectoryLine_Switch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//BSD开关</span>mBSD_Switch<span class="token operator">=</span>popupView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>BSD_Switch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//亮度均衡开关</span>mBE_Switch<span class="token operator">=</span>popupView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>BE_Switch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取默认开关参数</span>carParameter carParm_history <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">carParameter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>carParm_history<span class="token operator">=</span>avmSetParm<span class="token punctuation">.</span><span class="token function">readJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//------ 设置输入控件的显示历史数据 ------</span>editText_car_length<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>car_length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>editText_car_width<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>car_width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>editText_suspension_front<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>suspension_front<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>editText_suspension_back<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>suspension_back<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>on_TrajectoryLine<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>mTrajectory_Switch<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>mTrajectory_Switch<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>on_BSD<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>mBSD_Switch<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>mBSD_Switch<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>carParm_history<span class="token punctuation">.</span>on_Bright<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>mBE_Switch<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>mBE_Switch<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//------ 设置保存按钮触发事件 ------</span>delok_btn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> car_length <span class="token operator">=</span> editText_car_length<span class="token punctuation">.</span><span class="token function">getEditableText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> car_width <span class="token operator">=</span> editText_car_width<span class="token punctuation">.</span><span class="token function">getEditableText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> suspension_front <span class="token operator">=</span> editText_suspension_front<span class="token punctuation">.</span><span class="token function">getEditableText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> suspension_back <span class="token operator">=</span> editText_suspension_back<span class="token punctuation">.</span><span class="token function">getEditableText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>carParameter carParm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">carParameter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"filename_avm_set_json"</span><span class="token punctuation">,</span><span class="token string">"filename_avm_set_json"</span><span class="token operator">+</span>avmSetParm<span class="token punctuation">.</span>jsonFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>car_length<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>car_length<span class="token punctuation">)</span><span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>car_width<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>car_width<span class="token punctuation">)</span><span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>suspension_front<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>suspension_front<span class="token punctuation">)</span><span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>suspension_back<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>suspension_back<span class="token punctuation">)</span><span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>on_BSD<span class="token operator">=</span>mView<span class="token punctuation">.</span>mBSDViewID<span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>on_Bright<span class="token operator">=</span>mView<span class="token punctuation">.</span>mBrightID<span class="token punctuation">;</span>carParm<span class="token punctuation">.</span>on_TrajectoryLine<span class="token operator">=</span>mView<span class="token punctuation">.</span>mTrajectoryLineViewID<span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"car_length"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>car_length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"car_width"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>car_width<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"suspension_front"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>suspension_front<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"suspension_back"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>suspension_back<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"on_BSD"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>on_BSD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"on_Bright"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>on_Bright<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"on_TrajectoryLine"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>on_TrajectoryLine<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>avmSetParm<span class="token punctuation">.</span><span class="token function">writeJson</span><span class="token punctuation">(</span>carParm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>mPopupWindow_register<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//------ 设置按钮触发事件 ------</span><span class="token comment">//车道线</span>mTrajectory_Switch<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">CompoundButton</span> buttonView<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>buttonView<span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>mView<span class="token punctuation">.</span>mTrajectoryLineViewID<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>mView<span class="token punctuation">.</span>mTrajectoryLineViewID<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>mView<span class="token punctuation">.</span><span class="token function">avmTrajectoryLineView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//BSD</span>mBSD_Switch<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">CompoundButton</span> buttonView<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>buttonView<span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>mView<span class="token punctuation">.</span>mBSDViewID<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">avmStartBSD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>mView<span class="token punctuation">.</span>mBSDViewID<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">avmStopBSD</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>mView<span class="token punctuation">.</span><span class="token function">avmBSDView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//亮度均衡</span>mBE_Switch<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">CompoundButton</span> buttonView<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>buttonView<span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>mView<span class="token punctuation">.</span>mBrightID<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>mView<span class="token punctuation">.</span>mBrightID<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>mView<span class="token punctuation">.</span><span class="token function">avmBrightView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回</span>delcancel_btn<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>mPopupWindow_register<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="主界面xml文件"><a href="#主界面xml文件" class="headerlink" title="主界面xml文件"></a>主界面xml文件</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.drawerlayout.widget.DrawerLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/drawer_layout<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/layout_root<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@android:color/black<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/tv_no_camera<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@string/no_camera_info<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#FFFF0000<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>36sp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gone<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@layout/settings_layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.drawerlayout.widget.DrawerLayout</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SurfaceView</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/surface_view<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginRight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_set_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>420dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_set<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_3d_360_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_3d_360_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_front_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_3d_front_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_back_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>180dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_3d_back_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--       android:visibility="gone" /> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_left_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>240dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_3d_left_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_right_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_3d_right_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_narrow_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginLeft</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>360dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_narrow_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageButton</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/image_3d_normal_btn<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>55dp<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottom|left<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/btn_bg_round<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/icon_3d_normal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="跳转界面xml文件"><a href="#跳转界面xml文件" class="headerlink" title="跳转界面xml文件"></a>跳转界面xml文件</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/avm_parm_view<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">tools:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>>    <span class="token comment">&lt;!-- 表格1 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#2B2B2B<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>stretchColumns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1,3<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableRow</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_car_width<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  车辆宽度:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/EditText_car_width<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#CCCFD1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>毫米/mm<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>selectAllOnFocus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_suspension_front<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  车前悬挂:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/EditText_suspension_front<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#CCCFD1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>毫米/mm<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>selectAllOnFocus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableRow</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 分割线 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableRow</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_car_length<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  车辆长度:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/EditText_car_length<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#CCCFD1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>毫米/mm<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>selectAllOnFocus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_suspension_back<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  车后悬挂:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/EditText_suspension_back<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#CCCFD1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>毫米/mm<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>selectAllOnFocus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableRow</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 分割线 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableRow</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_BE_Switch<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  亮度均衡:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/BE_Switch<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_BSD_Switch<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  BSD开关:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/BSD_Switch<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableRow</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 分割线 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableRow</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/Text_TrajectoryLine_Switch<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>  动态辅助线:  <span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/color_ffffff<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span>                <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/TrajectoryLine_Switch<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableRow</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/avm_parameter_save<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>保存<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/avm_parameter_return<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>返回<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> 安卓弹窗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JNI中成员变量和方法的相互访问</title>
      <link href="/2022/12/14/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/"/>
      <url>/2022/12/14/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是JNI"><a href="#什么是JNI" class="headerlink" title="什么是JNI"></a>什么是JNI</h1><p>说明：JNI 是 Java Native Interface 的缩写，它提供了若干的API实现了Java和其他语言的通信（主要是C&amp;C++，但是它并不妨碍你使用其他编程语言，只要调用约定受支持就可以了）。从Java1.1开始，JNI 标准成为 java 平台的一部分，它允许 Java 代码和其他语言写的代码进行交互。总的来说，JNI 就是一个允许Java语言和其他编程语言（主要是C&#x2F;C++）通信的接口。</p><p>原因：C&#x2F;C++ 是系统级的编程语言，可以用来开发任何和系统相关的程序和类库，效率也很高。而 Java 本身编写底层的应用比较难以实现，使用 JNI 可以调用现有的本地库，极大地灵活了 Java 的开发。</p><ul><li><p>缺点：</p><ul><li><p>1、使用java与本地已编译的代码交互，通常会丧失平台可移植性。</p></li><li><p>2、程序不再是绝对安全的，本地代码的不当使用可能导致整个程序崩溃。</p></li></ul></li></ul><p>注：对于上面所说的java使用了JNI 接口会丧失平台的可移植性解释如下</p><p>JNI 提供出来一个功能接口，但是这个功能是使用本地语言进行实现的，通常是C或者C++。</p><p>以 linux 系统和 window 系统的 printf 函数为例，虽然这两个系统都提供了这个打印函数，并且名字也一样，但是在实现上可能会有各自的不同点。同时在 window 下的动态库为 dll 文件，linux 下的动态库为 so 文件。</p><p>所以我原本在 linux 下可以正常使用的一套 JNI 功能，一旦需要转移到 windows 上执行的时候就需要重新编译实现接口的动态库。虽然 java 是跨平台的，但是使用 jni 调用的本地方法却是与平台相依赖的，会在进行编译的过程中会出现这样或者那样的兼容性问题，一般不能直接拿来即用。</p><ul><li>实现JNI的基本步骤<ul><li>编写带有 native 声明的方法的java类。</li><li>使用 javah + 类名生成扩展名为.h的头文件。</li><li>使用 C&#x2F;C++ 实现本地方法。</li><li>将 C&#x2F;C++ 编写的文件生成动态链接库。</li><li>在 java 类中引用该动态链接库并完成调用。</li><li>注：可以先写 java 的调用，也可以先写 C&#x2F;C++ 的实现，只要两边约定好接口的名称，参数，返回值等信息即可。</li></ul></li></ul><h1 id="涉及数据类型对照表"><a href="#涉及数据类型对照表" class="headerlink" title="涉及数据类型对照表"></a>涉及数据类型对照表</h1><h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><p><img src="/2022/12/14/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/1.png" alt="基本类型"></p><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><p><img src="/2022/12/14/JNI%E4%B8%AD%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%92%8C%E6%96%B9%E6%B3%95%E7%9A%84%E7%9B%B8%E4%BA%92%E8%AE%BF%E9%97%AE/2.png" alt="引用类型"></p><h1 id="java访问C-的变量"><a href="#java访问C-的变量" class="headerlink" title="java访问C++的变量"></a><code>java</code>访问<code>C++</code>的变量</h1><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">JNIEXPORT jint JNICALLJava_com_fibocom_multicamera_AvmSurfaceViewNative_nativeGetViewInfo(JNIEnv *env,                                                                                    jclass type,                                                                                    jint cmd,                                                                                    jobject output)&#123;    jclass objectClass &#x3D; env-&gt;GetObjectClass(output);    &#x2F;&#x2F; 通过GetFieldID方法得到这个对象的dist属性    jfieldID m3DBtnOn &#x3D; env-&gt;GetFieldID(objectClass, &quot;m3DBtnOn&quot;, &quot;I&quot;);    jfieldID viewID &#x3D; env-&gt;GetFieldID(objectClass, &quot;viewID&quot;, &quot;I&quot;);    jfieldID wheelViewID &#x3D; env-&gt;GetFieldID(objectClass, &quot;wheelViewID&quot;, &quot;I&quot;);    jfieldID trajectoryLineViewID &#x3D; env-&gt;GetFieldID(objectClass, &quot;trajectoryLineViewID&quot;, &quot;I&quot;);    jfieldID bsdViewID &#x3D; env-&gt;GetFieldID(objectClass, &quot;bsdViewID&quot;, &quot;I&quot;);    jfieldID brightID &#x3D; env-&gt;GetFieldID(objectClass, &quot;brightID&quot;, &quot;I&quot;);    &#x2F;&#x2F;    jfieldID dist_l &#x3D; env-&gt;GetFieldID(objectClass, &quot;dist_l&quot;, &quot;F&quot;);    jfieldID dist_r &#x3D; env-&gt;GetFieldID(objectClass, &quot;dist_r&quot;, &quot;F&quot;);    jfieldID upon &#x3D; env-&gt;GetFieldID(objectClass, &quot;upon&quot;, &quot;F&quot;);    jfieldID angle &#x3D; env-&gt;GetFieldID(objectClass, &quot;angle&quot;, &quot;F&quot;);    jfieldID viewPointX &#x3D; env-&gt;GetFieldID(objectClass, &quot;viewPointX&quot;, &quot;F&quot;);    jfieldID viewPointY &#x3D; env-&gt;GetFieldID(objectClass, &quot;viewPointY&quot;, &quot;F&quot;);    ParametersInit *m_Instance &#x3D; ParametersInit::GetInstance();    avmmanager::TAvmViewTag m_view_info;    m_Instance-&gt;getViewInfo(m_view_info);    env-&gt;SetIntField(output, m3DBtnOn, m_view_info.m3DBtnOn);    env-&gt;SetIntField(output, viewID, m_view_info.viewID);    env-&gt;SetIntField(output, wheelViewID, m_view_info.wheelViewID);    env-&gt;SetIntField(output, trajectoryLineViewID, m_view_info.trajectoryLineViewID);    env-&gt;SetIntField(output, bsdViewID, m_view_info.bsdViewID);    env-&gt;SetIntField(output, brightID, m_view_info.brightID);    &#x2F;&#x2F;    env-&gt;SetFloatField(output, dist_l, m_view_info.dist_l);    env-&gt;SetFloatField(output, dist_r, m_view_info.dist_r);    env-&gt;SetFloatField(output, upon, m_view_info.upon);    env-&gt;SetFloatField(output, angle, m_view_info.angle);    env-&gt;SetFloatField(output, viewPointX, m_view_info.viewPointX);    env-&gt;SetFloatField(output, viewPointY, m_view_info.viewPointY);    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="C-访问java的变量"><a href="#C-访问java的变量" class="headerlink" title="C++访问java的变量"></a><code>C++</code>访问<code>java</code>的变量</h1><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">JNIEXPORT jint JNICALLJava_com_fibocom_multicamera_AvmSurfaceViewNative_nativeBSDInfo(JNIEnv *env,                                                                jobject obj,                                                                 jobjectArray objectArray)&#123;    jint ret &#x3D; 0;    &#x2F;&#x2F; 1. 获取数组的长度    jsize length &#x3D; env-&gt;GetArrayLength(objectArray);    &#x2F;&#x2F; XXX:数据长度永远为7，目前测试暂时支取第一个结果    if (length)        length &#x3D; 1;    &#x2F;&#x2F; 2. 获取Person类的Class对象    jclass class_Rect &#x3D; env-&gt;FindClass(&quot;com&#x2F;fibocom&#x2F;aidl&#x2F;Rect&quot;);    if (class_Rect &#x3D;&#x3D; NULL)    &#123;        return ret;    &#125;    else    &#123;        LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;FindClass success&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; \n&quot;);    &#125;    &#x2F;&#x2F; 3. 获取Person的sayHello方法字段    jmethodID getX1 &#x3D; env-&gt;GetMethodID(class_Rect, &quot;getX1&quot;, &quot;()I&quot;); &#x2F;&#x2F;(A)B---A为输入参数，B为输出参数    if (getX1 &#x3D;&#x3D; nullptr)    &#123;        return ret;    &#125;    jmethodID getX2 &#x3D; env-&gt;GetMethodID(class_Rect, &quot;getX2&quot;, &quot;()I&quot;); &#x2F;&#x2F;(A)B---A为输入参数，B为输出参数    if (getX2 &#x3D;&#x3D; nullptr)    &#123;        return ret;    &#125;    jmethodID getY1 &#x3D; env-&gt;GetMethodID(class_Rect, &quot;getY1&quot;, &quot;()I&quot;); &#x2F;&#x2F;(A)B---A为输入参数，B为输出参数    if (getY1 &#x3D;&#x3D; nullptr)    &#123;        return ret;    &#125;    jmethodID getY2 &#x3D; env-&gt;GetMethodID(class_Rect, &quot;getY2&quot;, &quot;()I&quot;); &#x2F;&#x2F;(A)B---A为输入参数，B为输出参数    if (getY2 &#x3D;&#x3D; nullptr)    &#123;        return ret;    &#125;    jmethodID getCamID &#x3D; env-&gt;GetMethodID(class_Rect, &quot;getCamID&quot;, &quot;()I&quot;); &#x2F;&#x2F;(A)B---A为输入参数，B为输出参数    if (getCamID &#x3D;&#x3D; nullptr)    &#123;        return ret;    &#125;    jmethodID getTimestamp &#x3D; env-&gt;GetMethodID(class_Rect, &quot;getTimestamp&quot;, &quot;()J&quot;); &#x2F;&#x2F;(A)B---A为输入参数，B为输出参数    if (getTimestamp &#x3D;&#x3D; nullptr)    &#123;        return ret;    &#125;    &#x2F;&#x2F; 4. 循环调用每个方法    jint aaa&#x3D;0;    avmmanager::TBsdBox *avm_bsd &#x3D; new avmmanager::TBsdBox[length];    for (int i &#x3D; 0; i &lt; length; i++)    &#123;        &#x2F;&#x2F; 获取引用类型数组的对象        jobject element &#x3D; env-&gt;GetObjectArrayElement(objectArray, i);        &#x2F;&#x2F; 判断数组元素是否是Person类对象        LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; [%d] &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; \n&quot;, i);        if (element !&#x3D; nullptr)        &#123;            &#x2F;&#x2F; 调用Person对象的sayHello()方法            avm_bsd[i].left &#x3D; env-&gt;CallIntMethod(element, getX1);            avm_bsd[i].right &#x3D; env-&gt;CallIntMethod(element, getX2);            avm_bsd[i].top &#x3D; env-&gt;CallIntMethod(element, getY1);            avm_bsd[i].bottom &#x3D; env-&gt;CallIntMethod(element, getY2);            int camID &#x3D; env-&gt;CallIntMethod(element, getCamID);            LOGI(1, &quot;CallIntMethod %d \n&quot;, camID);            switch (camID)            &#123;            case 7:                avm_bsd[i].cam_index &#x3D; 0;                break;            case 4:                avm_bsd[i].cam_index &#x3D; 1;                break;            case 6:                avm_bsd[i].cam_index &#x3D; 2;                break;            case 5:                avm_bsd[i].cam_index &#x3D; 3;                break;            default:                LOGI(1, &quot;nativeBSDInfo cam_index %d \n&quot;, camID);                avm_bsd[i].cam_index &#x3D; camID;                break;            &#125;            avm_bsd[i].timestamp &#x3D; env-&gt;CallLongMethod(element, getTimestamp);            avm_bsd[i].size &#x3D; length;            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; X1[%d] %d  \n&quot;, i, avm_bsd[i].left);            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; X2[%d] %d  \n&quot;, i, avm_bsd[i].right);            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; Y1[%d] %d  \n&quot;, i, avm_bsd[i].top);            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; Y2[%d] %d  \n&quot;, i, avm_bsd[i].bottom);            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; id[%d] %d  \n&quot;, i, avm_bsd[i].cam_index);            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; timestamp[%d] %ld  \n&quot;, i, avm_bsd[i].timestamp);            LOGI(1, &quot;&#x3D;&#x3D;&#x3D;&#x3D;nativeBSDInfo&#x3D;&#x3D;&#x3D;&#x3D; size[%d] %d  \n&quot;, i, avm_bsd[i].size);        &#125;    &#125;    EventSystem::Instance()-&gt;SendEvent(&quot;avm_get_bsd_info&quot;, avm_bsd, [](void *ptr_event)                                       &#123;        Event *event &#x3D; (Event *) ptr_event;        bool *buf &#x3D; (bool *) event-&gt;Parameter();        delete buf;        delete event; &#125;);    return ret;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> jni </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> jni </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java读写Json文件</title>
      <link href="/2022/12/14/java%E8%AF%BB%E5%86%99Json%E6%96%87%E4%BB%B6/"/>
      <url>/2022/12/14/java%E8%AF%BB%E5%86%99Json%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="json格式介绍"><a href="#json格式介绍" class="headerlink" title="json格式介绍"></a>json格式介绍</h1><p>json与xml相比, 对数据的描述性比XML较差,但是数据体积小,传递速度更快.  </p><p>json数据的书写格式是”名称:值对”,比如:</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"Name"</span> <span class="token operator">:</span> <span class="token string">"John"</span>                        <span class="token comment">//name为名称,值对为"john"字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>值对类型共分为:  </p><ul><li>数字（整数或浮点数）</li><li>字符串（在双引号中）</li><li>逻辑值（true 或 false）</li><li>数组（在方括号[]中）</li><li>对象（在花括号{}中）</li><li>null<br>当然数组也可以包含多对象:  <pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"employees"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span> <span class="token property">"Name"</span><span class="token operator">:</span><span class="token string">"John"</span> <span class="token punctuation">,</span> <span class="token property">"Age"</span><span class="token operator">:</span><span class="token number">19</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token property">"Name"</span><span class="token operator">:</span><span class="token string">"Anna"</span> <span class="token punctuation">,</span> <span class="token property">"Age"</span><span class="token operator">:</span><span class="token number">22</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token property">"Name"</span><span class="token operator">:</span><span class="token string">"Peter"</span><span class="token punctuation">,</span> <span class="token property">"Age"</span><span class="token operator">:</span><span class="token number">23</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>表示”employees”对象中有3个对象数组(每个对象数组表示一条员工信息),其中并列的数据都必须用逗号”,”隔开.</li></ul><h1 id="json文件读写示例"><a href="#json文件读写示例" class="headerlink" title="json文件读写示例"></a>json文件读写示例</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fibocom<span class="token punctuation">.</span>multicamera</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONArray</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONObject</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileNotFoundException</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStreamWriter</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span><span class="token keyword">class</span> carParameter  <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> on_TrajectoryLine<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> on_BSD<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> on_Bright<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> scale_size<span class="token punctuation">;</span> <span class="token comment">// 缩放</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> car_length<span class="token punctuation">;</span><span class="token comment">//车辆长度</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> car_width<span class="token punctuation">;</span><span class="token comment">//车辆宽度</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> suspension_front<span class="token punctuation">;</span><span class="token comment">//前悬挂</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> suspension_back<span class="token punctuation">;</span><span class="token comment">//后悬挂</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AvmSetParm</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> jsonFileName<span class="token punctuation">;</span>    <span class="token keyword">public</span> carParameter <span class="token function">readJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>            carParameter carParm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token function">carParameter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">char</span> cbuf<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">InputStreamReader</span> input <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>jsonFileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> len <span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>cbuf<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> text <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>cbuf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//1.构造一个json对象</span>            <span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"&#123;"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//过滤读出的utf-8前三个标签字节,从&#123;开始读取</span>            <span class="token comment">//获取数组</span>            <span class="token class-name">JSONArray</span> dataArr <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">JSONObject</span> carParameterObj <span class="token operator">=</span>dataArr<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">JSONObject</span> carParameter<span class="token operator">=</span>carParameterObj<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">"carParameter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>car_length<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"car_length"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>car_width<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"car_width"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>suspension_front<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"suspension_front"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>suspension_back<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"suspension_back"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>scale_size<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token string">"scale_size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>on_Bright<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"BE_Switch"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>on_BSD<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"BSD_Switch"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            carParm<span class="token punctuation">.</span>on_TrajectoryLine<span class="token operator">=</span>carParameter<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"TrajectoryLine_Switch"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            input<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span><span class="token string">"car_length:"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>car_length<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span><span class="token string">"car_width:"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>car_width<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span><span class="token string">"suspension_front:"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>suspension_front<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span><span class="token string">"suspension_back:"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>suspension_back<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span><span class="token string">"scale_size:"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>scale_size<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> carParm<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeJson</span><span class="token punctuation">(</span>carParameter carParm<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">char</span> cbuf<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">InputStreamReader</span> input <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>jsonFileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> len <span class="token operator">=</span>input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>cbuf<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> text <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>cbuf<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//1.构造一个json对象</span>        <span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"&#123;"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//过滤读出的utf-8前三个标签字节,从&#123;开始读取</span>        <span class="token comment">//获取数组</span>        <span class="token class-name">JSONArray</span> data <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JSONObject</span> carParameterObj <span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JSONObject</span> carParameter<span class="token operator">=</span>carParameterObj<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">"carParameter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"car_length"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>car_length<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"car_width"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>car_width<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"suspension_front"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>suspension_front<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"suspension_back"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>suspension_back<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"BE_Switch"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>on_Bright<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"BSD_Switch"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>on_BSD<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameter<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"TrajectoryLine_Switch"</span><span class="token punctuation">,</span>carParm<span class="token punctuation">.</span>on_TrajectoryLine<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"car_length"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>car_length<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"car_width"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>car_width<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"suspension_front"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>suspension_front<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"suspension_back"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>suspension_back<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"BE_Switch"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>on_Bright<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"BSD_Switch"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>on_BSD<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"AvmSetParm"</span><span class="token punctuation">,</span> <span class="token string">"TrajectoryLine_Switch"</span><span class="token operator">+</span>carParm<span class="token punctuation">.</span>on_TrajectoryLine<span class="token punctuation">)</span><span class="token punctuation">;</span>        carParameterObj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"carParameter"</span><span class="token punctuation">,</span>carParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>        data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>carParameterObj<span class="token punctuation">)</span><span class="token punctuation">;</span>        obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">OutputStreamWriter</span> osw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>jsonFileName<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        osw<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        osw<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//清空缓冲区，强制输出数据</span>        osw<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关闭输出流</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考连接： <a href="https://cloud.tencent.com/developer/article/1556944">https://cloud.tencent.com/developer/article/1556944</a></p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> json文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>车辆动态辅助轨迹线生成方法</title>
      <link href="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/"/>
      <url>/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="汽车动力学原理"><a href="#汽车动力学原理" class="headerlink" title="汽车动力学原理"></a>汽车动力学原理</h1><p>在研究辅助泊车时，第一要研究一下汽车在运动的时候的轨迹，要建立一个汽车在泊车时的运动学模型来作为后面研究的理论基础。车辆在泊车的过程中有一个特点即它是低速行驶的，这时<strong>车轮在滚动过程中不会发生侧方向的滑动</strong>，由于汽车在缓慢行驶的过程中不会有侧向力，这时系统的约束条件是允许车轮发生滚动和侧转，但不会有滑动的发生，由此建立了车辆的运动学模型。下面是倒车的时候汽车的运动学模型：</p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/Vehicle_dynamics_model.png" alt="汽车动力学模型">  </p><p>其中：(x_{f},y_{f})为汽车前轴中心点的坐标；(x_{r},y_{r})为汽车的后轴中心点的坐标；v指前轴中心点的速度；l_{m}为轴距；h_{r}为后轮距；φ为前轴中心的转向角；θ为汽车的航向角，指汽车的中心轴与参考方向上的夹角。</p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/1.png"></p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/2.png"></p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/3.png"></p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/4.png"></p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/5.png"></p><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/6.png"></p><p>总结：</p><ul><li>轨迹和速度没有关系</li><li>车辆的两个后轮是沿着圆在运动的</li><li><strong>汽车在低速行驶且不考虑有侧滑的情况下，汽车的车身上每一点的运动轨迹都是指向同样的一个圆心的圆，并且只和汽车的转向角有关系，和汽车的车速没有关系</strong></li></ul><h2 id="阿克曼转弯几何原理"><a href="#阿克曼转弯几何原理" class="headerlink" title="阿克曼转弯几何原理"></a>阿克曼转弯几何原理</h2><ul><li>示意图：</li></ul><p><img src="/2022/12/14/%E8%BD%A6%E8%BE%86%E5%8A%A8%E6%80%81%E8%BE%85%E5%8A%A9%E8%BD%A8%E8%BF%B9%E7%BA%BF%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/Ackerman_turning_geometry.png" alt="阿克曼转向几何原理"> </p><ul><li>讲解视频：<a href="https://www.youtube.com/watch?v=8AimxDPWKcM">https://www.youtube.com/watch?v=8AimxDPWKcM</a></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 辅助驾驶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 辅助驾驶 </tag>
            
            <tag> 360环视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令</title>
      <link href="/2022/12/12/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/12/12/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> 位置 <span class="token parameter variable">-name</span> <span class="token string">'名称'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="aiApp执行命令"><a href="#aiApp执行命令" class="headerlink" title="aiApp执行命令"></a>aiApp执行命令</h1><h2 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tail</span> <span class="token parameter variable">-F</span> /mnt/data/log/ylog <span class="token operator">|</span> <span class="token function">grep</span> aiApp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/data/hq/bin/hqsetprop ctl.start aiApp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/data/hq/bin/hqsetprop ctl.stop aiApp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/data/hq/bin/hqsetprop ctl.restart aiApp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="查看与转换YUV图像："><a href="#查看与转换YUV图像：" class="headerlink" title="查看与转换YUV图像："></a>查看与转换YUV图像：</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ffplay <span class="token parameter variable">-pixel_format</span> nv12 <span class="token parameter variable">-f</span> rawvideo <span class="token parameter variable">-video_size</span> 240x576 stitch_view.yuv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ffmpeg <span class="token parameter variable">-pix_fmt</span> nv12 <span class="token parameter variable">-video_size</span> 1280x720 <span class="token parameter variable">-i</span> src_1.yuv <span class="token parameter variable">-y</span> src_1.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="ubuntu终端查看历史命令"><a href="#ubuntu终端查看历史命令" class="headerlink" title="ubuntu终端查看历史命令"></a>ubuntu终端查看历史命令</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">history</span> <span class="token operator">|</span> <span class="token function">grep</span> some_command<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="查看cup限制"><a href="#查看cup限制" class="headerlink" title="查看cup限制"></a>查看cup限制</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> limit <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="1126关闭DNS验证"><a href="#1126关闭DNS验证" class="headerlink" title="1126关闭DNS验证"></a>1126关闭DNS验证</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /etc/nsswitch.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者直接替换对应字段</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">"s/dns/#dns/g"</span> <span class="token variable"><span class="token variable">`</span><span class="token function">grep</span> <span class="token string">"dns"</span> <span class="token parameter variable">-rl</span> /etc/nsswitch.conf<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>注释 dns选项，如下所示：<blockquote><p>hosts:          files #dns<br>networks:       files #dns</p></blockquote></li></ul><h1 id="强制关闭窗口"><a href="#强制关闭窗口" class="headerlink" title="强制关闭窗口"></a>强制关闭窗口</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xkill<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后移动鼠标点击需要关闭的窗口即可</li></ul><h1 id="修改aiapp的cpu限制"><a href="#修改aiapp的cpu限制" class="headerlink" title="修改aiapp的cpu限制"></a>修改aiapp的cpu限制</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /exapp/sh/run.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改允许aiapp使用的cpu百分比 XX<blockquote><p>#……………aiApp…CPU………<br>&#x2F;data&#x2F;hq&#x2F;bin&#x2F;cpulimit -l XX -e aiApp &amp;</p></blockquote></li></ul><h1 id="本地gitlab库添加远程库信任"><a href="#本地gitlab库添加远程库信任" class="headerlink" title="本地gitlab库添加远程库信任"></a>本地gitlab库添加远程库信任</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--add</span> safe.directory /media/geiyiren/MyCode/AVM/avm_2d/master/avm_cpu_algo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="保存yuv-buf图像"><a href="#保存yuv-buf图像" class="headerlink" title="保存yuv buf图像"></a>保存yuv buf图像</h1><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">FILE *fp_dump &#x3D; fopen(&quot;bsd_1.yuv&quot;, &quot;wb+&quot;);if (fp_dump &#x3D;&#x3D; NULL)&#123;printf(&quot;fp_dump open fail\n&quot;);&#125;else&#123;printf(&quot;fp_dump cam  yuv open success\n&quot;);&#125;size_t bytes_write &#x3D; fwrite(p_yuv_buf[1], width * height * 3 &#x2F; 2 , 1, fp_dump);if (bytes_write &lt;&#x3D; 0)&#123;printf(&quot;write raw_stream fail !!!\n&quot;);&#125;fclose(fp_dump);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="批量将jpg转换为yuv"><a href="#批量将jpg转换为yuv" class="headerlink" title="批量将jpg转换为yuv"></a>批量将jpg转换为yuv</h1><pre><code>#! /bin/bashfiles=$(ls $folder)yuv=&quot;yuv&quot;for file in $filesdo  echo $&#123;file:0:13&#125;  file_name=$&#123;file:0:13&#125;  str=$file_name$yuv  ffmpeg -i $file -s 1280*720 -pix_fmt nv12 $strdone</code></pre><h1 id="abd-常用命令"><a href="#abd-常用命令" class="headerlink" title="abd 常用命令"></a>abd 常用命令</h1><h2 id="打开调试端口"><a href="#打开调试端口" class="headerlink" title="打开调试端口"></a>打开调试端口</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb tcpip <span class="token number">5555</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb connect <span class="token number">10.10</span>.200.140<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="进入远程终端"><a href="#进入远程终端" class="headerlink" title="进入远程终端"></a>进入远程终端</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="关闭服务"><a href="#关闭服务" class="headerlink" title="关闭服务"></a>关闭服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb kill-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb start-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="重新挂载"><a href="#重新挂载" class="headerlink" title="重新挂载"></a>重新挂载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb remount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="获取root权限"><a href="#获取root权限" class="headerlink" title="获取root权限"></a>获取root权限</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安卓录制屏幕"><a href="#安卓录制屏幕" class="headerlink" title="安卓录制屏幕"></a>安卓录制屏幕</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell screenrecord  --time-limit <span class="token number">12</span> /sdcard/name.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="安卓设备开启USB"><a href="#安卓设备开启USB" class="headerlink" title="安卓设备开启USB"></a>安卓设备开启USB</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setprop persist.otg.mode device<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>远程登录后使用上述命令</li></ul><h1 id="远程为安卓设备安装软件"><a href="#远程为安卓设备安装软件" class="headerlink" title="远程为安卓设备安装软件"></a>远程为安卓设备安装软件</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb <span class="token function">install</span> Launcher3.apk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在本地执行上述命令</li></ul><h1 id="查看当前文件下所有文件大小"><a href="#查看当前文件下所有文件大小" class="headerlink" title="查看当前文件下所有文件大小"></a>查看当前文件下所有文件大小</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#以M为单位查看当前文件下所有文件的大小，包含隐藏文件</span><span class="token function">du</span> <span class="token parameter variable">-sm</span> .<span class="token punctuation">[</span><span class="token operator">!</span>.<span class="token punctuation">]</span>* * <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-hr</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="查看磁盘剩余空间"><a href="#查看磁盘剩余空间" class="headerlink" title="查看磁盘剩余空间"></a>查看磁盘剩余空间</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">df</span> <span class="token parameter variable">-hl</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="github访问加速"><a href="#github访问加速" class="headerlink" title="github访问加速"></a>github访问加速</h1><h2 id="查询IP"><a href="#查询IP" class="headerlink" title="查询IP"></a>查询IP</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#github.global.ssl.fastly.net 网站IP</span><span class="token function">nslookup</span> github.global.ssl.fastly.net<span class="token comment">#github.com 网站IP</span><span class="token function">nslookup</span> github.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更改host文件"><a href="#更改host文件" class="headerlink" title="更改host文件"></a>更改host文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gedit /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>将上述查询到的IP复制到对应位置</li></ul><h2 id="更新host文件"><a href="#更新host文件" class="headerlink" title="更新host文件"></a>更新host文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> /etc/init.d/network-manager restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="BSD测试程序运行命令"><a href="#BSD测试程序运行命令" class="headerlink" title="BSD测试程序运行命令"></a>BSD测试程序运行命令</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#801-s(rv1126)测试BSD程序运行命令</span><span class="token builtin class-name">cd</span> /exapp/app./bsd_proc_test <span class="token parameter variable">-d</span> /dev/video0 <span class="token parameter variable">-w</span> <span class="token number">1280</span> <span class="token parameter variable">-h</span> <span class="token number">720</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="鸿鹄"><a href="#鸿鹄" class="headerlink" title="鸿鹄"></a>鸿鹄</h1><h2 id="鸿鹄设备常用命令"><a href="#鸿鹄设备常用命令" class="headerlink" title="鸿鹄设备常用命令"></a>鸿鹄设备常用命令</h2><ul><li>以root身份挂载<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb root <span class="token operator">&amp;&amp;</span> adb remount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>推送apk<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /media/geiyiren/MyCode/AVM/avm_gpu_algo/branch/MultiCameraDemo/avm_gpu_algo/app/build/outputs/apk/debug<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">adb push MultiCameraDemo.apk &#x2F;system&#x2F;priv-app&#x2F;MultiCameraDemo&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>推送库文件<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /media/geiyiren/MyCode/AVM/avm_gpu_algo/branch/AVM_BSD_honghu/avm_gpu_algo/libs/arm64-v8a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb push libavmjni.so /system/priv-app/MultiCameraDemo/lib/arm64/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查看log日志<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell logcat <span class="token operator">></span> log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>保存NATIVE_LOG日志(cpp端打印信息)<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell logcat <span class="token parameter variable">-s</span> NATIVE_LOG <span class="token operator">></span> log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>保存程序运行严重错误日志(一般程序异常退出时打印该log)<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adb shell logcat *:F <span class="token operator">></span> log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="鸿鹄设备资源存储位置"><a href="#鸿鹄设备资源存储位置" class="headerlink" title="鸿鹄设备资源存储位置"></a>鸿鹄设备资源存储位置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">data└── gpu0------------    ├── calibrate    │   ├── **CALMAT.BIN**    │   └── **LENS.BIN**    └── shader        ├── **avm_3d_blend_lut.bin**        ├── **avm_3d_indices.bin**        ├── **avm_3d_lut.bin**        ├── car_model_line.fs        ├── car_model_line.vs        ├── car_model_test.fs        ├── car_model_test.vs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="鸿鹄Bug查询关键字"><a href="#鸿鹄Bug查询关键字" class="headerlink" title="鸿鹄Bug查询关键字"></a>鸿鹄Bug查询关键字</h2><table><thead><tr><th>关键字</th><th align="left">说明</th></tr></thead><tbody><tr><td>dlopen</td><td align="left">文件缺失标志</td></tr><tr><td>crash</td><td align="left">程序报错抛出异常标志</td></tr><tr><td>NATIVE_LOG</td><td align="left">AVM cpp端的打印</td></tr></tbody></table><h2 id="鸿鹄CPU占用与GPU占用查看"><a href="#鸿鹄CPU占用与GPU占用查看" class="headerlink" title="鸿鹄CPU占用与GPU占用查看"></a>鸿鹄CPU占用与GPU占用查看</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># adb登录后执行如下命令:</span><span class="token comment">## GPU</span><span class="token function">cat</span> /sys/class/kgsl/kgsl-3d0/gpu_busy_percentage<span class="token function">watch</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token function">cat</span> /sys/class/kgsl/kgsl-3d0/gpu_busy_percentage<span class="token comment">## CPU</span><span class="token function">top</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>更加详细的资源查看可参照：软件snapdragonprofiler_external_linux</p><p>Snapdragon Profiler是高通开发的用于调试分析高通Adreno GPU的一款桌面应用，支持Windows、MacOS 和 Linux 。在调试opengles应用程序上能发挥非常重要的作用。该工具能够捕捉CPU、GPU、DSP、内存、功率、网络连接和设备运行时的发热数据等，具有Realtime、Trace Capture、Snapshot Capture 三种模式。实时(Realtime)模式用于实时跟踪数据，跟踪(Trace Capture)模式用于跟踪事件和数据，默认最大值是10秒。快照(Snapshot Capture)模式用于捕获OpenGL ES应用程序的当前帧并可以进行调试，包括单步调试绘制指令，查看和编辑着色器、程序、纹理以及查看像素历史的能力。着色器代码是通过反编译得到，得到的代码跟原glsl代码基本一致，并且可以在截图后修改glsl进行调试。</p><p>作者：cain_huang<br>链接：<a href="https://www.jianshu.com/p/d8d1a231dada">https://www.jianshu.com/p/d8d1a231dada</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><h1 id="ssh相关"><a href="#ssh相关" class="headerlink" title="ssh相关"></a>ssh相关</h1><h2 id="主机A免密登录主机B"><a href="#主机A免密登录主机B" class="headerlink" title="主机A免密登录主机B"></a>主机A免密登录主机B</h2><p>在主机A执行如下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-copy-id 主机B的用户名@主机B的IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="NEON优化相关函数"><a href="#NEON优化相关函数" class="headerlink" title="NEON优化相关函数"></a>NEON优化相关函数</h1><h2 id="internal-prefetch"><a href="#internal-prefetch" class="headerlink" title="internal::prefetch()"></a>internal::prefetch()</h2><p>作用：将数据放在缓存中</p><h2 id="vld1q"><a href="#vld1q" class="headerlink" title="vld1q()"></a>vld1q()</h2><p>作用：加载数据</p><p>例如：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">float32x4_t q0 &#x3D; vld1q_f32(d0); &#x2F;&#x2F; 加载 d0 地址起始的 4 个 float 数据到 q0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="internal-getRowPtr"><a href="#internal-getRowPtr" class="headerlink" title="internal::getRowPtr()"></a>internal::getRowPtr()</h2><p>例如：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">internal::getRowPtr(src0Base, src0Stride, y);  &#x2F;&#x2F;返回src0Base+src0Stride*y的地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++变量命名常用缩写表</title>
      <link href="/2022/12/12/C++%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E5%B8%B8%E7%94%A8%E7%BC%A9%E5%86%99%E8%A1%A8/"/>
      <url>/2022/12/12/C++%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E5%B8%B8%E7%94%A8%E7%BC%A9%E5%86%99%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">全 称</th><th align="center">缩 写</th></tr></thead><tbody><tr><td align="center">Address</td><td align="center">addr</td></tr><tr><td align="center">Administrator</td><td align="center">adm</td></tr><tr><td align="center">average</td><td align="center">avg</td></tr><tr><td align="center">Application</td><td align="center">app</td></tr><tr><td align="center">Argument</td><td align="center">arg</td></tr><tr><td align="center">Database</td><td align="center">DB</td></tr><tr><td align="center">assemble</td><td align="center">asm</td></tr><tr><td align="center">Bitmap</td><td align="center">bmp</td></tr><tr><td align="center">back</td><td align="center">bk</td></tr><tr><td align="center">asynchronization</td><td align="center">asyn</td></tr><tr><td align="center">Button</td><td align="center">btn</td></tr><tr><td align="center">Buffer</td><td align="center">buf</td></tr><tr><td align="center">Calculate</td><td align="center">calc</td></tr><tr><td align="center">Character</td><td align="center">char</td></tr><tr><td align="center">Change</td><td align="center">chg</td></tr><tr><td align="center">Click</td><td align="center">clk</td></tr><tr><td align="center">color</td><td align="center">clr</td></tr><tr><td align="center">Command</td><td align="center">cmd</td></tr><tr><td align="center">Compare</td><td align="center">cmp</td></tr><tr><td align="center">Column</td><td align="center">col</td></tr><tr><td align="center">coordinates</td><td align="center">coord</td></tr><tr><td align="center">copy</td><td align="center">cpy</td></tr><tr><td align="center">Control</td><td align="center">ctl &#x2F; ctrl</td></tr><tr><td align="center">Current</td><td align="center">cur</td></tr><tr><td align="center">Cylinder</td><td align="center">cyl</td></tr><tr><td align="center">Debug</td><td align="center">dbg</td></tr><tr><td align="center">Double</td><td align="center">dbl</td></tr><tr><td align="center">Decrease</td><td align="center">dec</td></tr><tr><td align="center">default</td><td align="center">def</td></tr><tr><td align="center">Delete</td><td align="center">del</td></tr><tr><td align="center">Destination</td><td align="center">dest &#x2F; dst</td></tr><tr><td align="center">Device</td><td align="center">dev</td></tr><tr><td align="center">dictionary</td><td align="center">dict</td></tr><tr><td align="center">different</td><td align="center">diff</td></tr><tr><td align="center">directory</td><td align="center">dir</td></tr><tr><td align="center">Display</td><td align="center">disp</td></tr><tr><td align="center">Divide</td><td align="center">div</td></tr><tr><td align="center">Dialog</td><td align="center">dlg</td></tr><tr><td align="center">Document</td><td align="center">doc</td></tr><tr><td align="center">Driver</td><td align="center">drv</td></tr><tr><td align="center">Dynamic</td><td align="center">dyna</td></tr><tr><td align="center">Environment</td><td align="center">env</td></tr><tr><td align="center">error</td><td align="center">err</td></tr><tr><td align="center">Extend</td><td align="center">ex&#x2F;ext</td></tr><tr><td align="center">execute</td><td align="center">exec</td></tr><tr><td align="center">flag</td><td align="center">flg</td></tr><tr><td align="center">Frame</td><td align="center">frm</td></tr><tr><td align="center">Function</td><td align="center">func &#x2F; fn</td></tr><tr><td align="center">group</td><td align="center">grp</td></tr><tr><td align="center">Horizontal</td><td align="center">horz</td></tr><tr><td align="center">Index</td><td align="center">idx &#x2F; ndx</td></tr><tr><td align="center">Image</td><td align="center">img</td></tr><tr><td align="center">Implement</td><td align="center">Impl</td></tr><tr><td align="center">Increase</td><td align="center">inc</td></tr><tr><td align="center">Information</td><td align="center">info</td></tr><tr><td align="center">Initial&#x2F;Initialize&#x2F;Initialization</td><td align="center">init</td></tr><tr><td align="center">Insert</td><td align="center">ins</td></tr><tr><td align="center">Instance</td><td align="center">inst</td></tr><tr><td align="center">Interrupt</td><td align="center">INT &#x2F; intr</td></tr><tr><td align="center">Length</td><td align="center">len</td></tr><tr><td align="center">Library</td><td align="center">lib</td></tr><tr><td align="center">Link</td><td align="center">lnk</td></tr><tr><td align="center">logical</td><td align="center">log</td></tr><tr><td align="center">List</td><td align="center">lst</td></tr><tr><td align="center">maximum</td><td align="center">max</td></tr><tr><td align="center">Memory</td><td align="center">mem</td></tr><tr><td align="center">Manage &#x2F; Manager</td><td align="center">mgr &#x2F; man</td></tr><tr><td align="center">middle</td><td align="center">mid</td></tr><tr><td align="center">minimum</td><td align="center">min</td></tr><tr><td align="center">Message</td><td align="center">msg</td></tr><tr><td align="center">Multiply</td><td align="center">mul</td></tr><tr><td align="center">Number</td><td align="center">num</td></tr><tr><td align="center">Object</td><td align="center">obj</td></tr><tr><td align="center">Offset</td><td align="center">ofs</td></tr><tr><td align="center">Origin &#x2F; Original</td><td align="center">org</td></tr><tr><td align="center">Parameter</td><td align="center">param</td></tr><tr><td align="center">picture</td><td align="center">pic</td></tr><tr><td align="center">package</td><td align="center">pkg</td></tr><tr><td align="center">Point</td><td align="center">pnt &#x2F; pt</td></tr><tr><td align="center">Position</td><td align="center">pos</td></tr><tr><td align="center">previous</td><td align="center">pre &#x2F; prev</td></tr><tr><td align="center">program</td><td align="center">prg</td></tr><tr><td align="center">Print</td><td align="center">prn</td></tr><tr><td align="center">Process &#x2F; Procedure</td><td align="center">proc</td></tr><tr><td align="center">Properties</td><td align="center">prop</td></tr><tr><td align="center">Password</td><td align="center">psw</td></tr><tr><td align="center">Pointer</td><td align="center">ptr</td></tr><tr><td align="center">Public</td><td align="center">pub</td></tr><tr><td align="center">rect</td><td align="center">rc</td></tr><tr><td align="center">Reference</td><td align="center">ref</td></tr><tr><td align="center">Register</td><td align="center">reg</td></tr><tr><td align="center">request</td><td align="center">req</td></tr><tr><td align="center">Resource</td><td align="center">res</td></tr><tr><td align="center">return</td><td align="center">ret</td></tr><tr><td align="center">region</td><td align="center">rgn</td></tr><tr><td align="center">screen</td><td align="center">scr</td></tr><tr><td align="center">Second</td><td align="center">sec</td></tr><tr><td align="center">Segment</td><td align="center">seg</td></tr><tr><td align="center">Select</td><td align="center">sel</td></tr><tr><td align="center">Source</td><td align="center">src</td></tr><tr><td align="center">Standard</td><td align="center">std</td></tr><tr><td align="center">Storage</td><td align="center">stg</td></tr><tr><td align="center">Stream</td><td align="center">stm</td></tr><tr><td align="center">String</td><td align="center">str</td></tr><tr><td align="center">Subtract</td><td align="center">sub</td></tr><tr><td align="center">summation</td><td align="center">sum</td></tr><tr><td align="center">Server</td><td align="center">svr</td></tr><tr><td align="center">Synchronization</td><td align="center">sync</td></tr><tr><td align="center">System</td><td align="center">sys</td></tr><tr><td align="center">Table</td><td align="center">tbl</td></tr><tr><td align="center">Temporary</td><td align="center">temp &#x2F; tmp</td></tr><tr><td align="center">translate&#x2F;transation&#x2F;transparent</td><td align="center">tran &#x2F; trans</td></tr><tr><td align="center">Test</td><td align="center">tst</td></tr><tr><td align="center">text</td><td align="center">txt</td></tr><tr><td align="center">Unknown</td><td align="center">unk</td></tr><tr><td align="center">Update</td><td align="center">upd</td></tr><tr><td align="center">Upgrade</td><td align="center">upg</td></tr><tr><td align="center">Utility</td><td align="center">util</td></tr><tr><td align="center">Variable</td><td align="center">var</td></tr><tr><td align="center">Version</td><td align="center">ver</td></tr><tr><td align="center">Vertical</td><td align="center">vert</td></tr><tr><td align="center">Virus</td><td align="center">vir</td></tr><tr><td align="center">Window</td><td align="center">wnd</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 变量命名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu 16.04 LTS下安装docker并创建深度学习环境</title>
      <link href="/2022/11/23/ubuntu-16-04-LTS%E4%B8%8B%E5%AE%89%E8%A3%85docker%E5%B9%B6%E5%88%9B%E5%BB%BA%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/"/>
      <url>/2022/11/23/ubuntu-16-04-LTS%E4%B8%8B%E5%AE%89%E8%A3%85docker%E5%B9%B6%E5%88%9B%E5%BB%BA%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装docker"><a href="#1-安装docker" class="headerlink" title="1.安装docker"></a>1.安装docker</h2><p>ubuntu下安装docker的官方教程：<a href="https://docs.docker.com/engine/install/ubuntu/">点我查看</a></p><p>ubuntu下安装参考教程：<a href="https://yeasy.gitbook.io/docker_practice/install/ubuntu">点我查看</a></p><h3 id="1-1卸载旧版本"><a href="#1-1卸载旧版本" class="headerlink" title="1.1卸载旧版本"></a>1.1卸载旧版本</h3><pre class="line-numbers language-none"><code class="language-none">sudo apt-get remove docker docker-engine docker.io containerd runc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-2使用apt安装"><a href="#1-2使用apt安装" class="headerlink" title="1.2使用apt安装"></a>1.2使用apt安装</h3><p>官网提供多种安装方式，这里使用apt安装</p><p>由于 <code>apt</code> 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get updatesudo apt-get install \    apt-transport-https \    ca-certificates \    curl \    gnupg \    lsb-release<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加docker密匙：</p><pre class="line-numbers language-none"><code class="language-none">curl -fsSL https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg# 官方密匙curl -fsSL https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu&#x2F;gpg | sudo gpg --dearmor -o &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后，我们需要向 <code>sources.list</code> 中添加 Docker 软件源：</p><pre class="line-numbers language-none"><code class="language-none">echo \  &quot;deb [arch&#x3D;amd64 signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu \  $(lsb_release -cs) stable&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null# 官方源echo \   &quot;deb [arch&#x3D;amd64 signed-by&#x3D;&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;docker-archive-keyring.gpg] https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;ubuntu \   $(lsb_release -cs) stable&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;docker.list &gt; &#x2F;dev&#x2F;null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上命令会添加稳定版本的 Docker APT 镜像源，如果需要测试版本的 Docker 请将 stable 改为 test。</p><p>安装docker:</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get updatesudo apt-get install docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-3配置阿里云镜像加速器"><a href="#1-3配置阿里云镜像加速器" class="headerlink" title="1.3配置阿里云镜像加速器"></a>1.3配置阿里云镜像加速器</h3><p>参考网址：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">点我查看</a></p><p>需要个人注册阿里云账号并开启容器镜像服务，该服务免费。</p><p>然后查看镜像加速地址，例如我的镜像加速地址为：</p><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;znrurdgu.mirror.aliyuncs.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：这里需要是自己的镜像加速器，否则没有权限访问。</p><p>执行如下命令配置docker：</p><pre class="line-numbers language-none"><code class="language-none"># 生成配置文件docker-machine ssh default# 设置加速器地址：# sed -i &quot;s|EXTRA_ARGS&#x3D;&#39;|EXTRA_ARGS&#x3D;&#39;--registry-mirror&#x3D;自己的镜像加速地址|g&quot; &#x2F;var&#x2F;lib&#x2F;boot2docker&#x2F;profilesed -i &quot;s|EXTRA_ARGS&#x3D;&#39;|EXTRA_ARGS&#x3D;&#39;--registry-mirror&#x3D;https:&#x2F;&#x2F;znrurdgu.mirror.aliyuncs.com|g&quot; &#x2F;var&#x2F;lib&#x2F;boot2docker&#x2F;profile# 退出dockerexit# 重启docker-machine restart default# 查看docker info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看docker信息后，可以发现 Registory mirrors 项的内容为刚刚设置的阿里云镜像地址。</p><pre class="line-numbers language-none"><code class="language-none">sudo mkdir -p &#x2F;etc&#x2F;dockersudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-&#39;EOF&#39;&#123;  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;znrurdgu.mirror.aliyuncs.com&quot;]&#125;EOFsudo systemctl daemon-reloadsudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-安装-nvidia-docker"><a href="#2-安装-nvidia-docker" class="headerlink" title="2.安装 nvidia-docker"></a>2.安装 nvidia-docker</h2><p>docker 默认是不支持在容器内 GPU 加速的，NVIDIA 官方做了个工具箱来支持容器内 GPU 加速运算，这大大方便了深度学习开发者。</p><p>官方教程：<a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html#installing-on-ubuntu-and-debian">点我查看</a></p><p>参考教程：<a href="https://blog.csdn.net/zhouchen1998/article/details/110679750">点我查看</a></p><p>依次执行如下命令即可：</p><pre class="line-numbers language-none"><code class="language-none">distribution&#x3D;$(. &#x2F;etc&#x2F;os-release;echo $ID$VERSION_ID) \   &amp;&amp; curl -s -L https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-docker&#x2F;gpgkey | sudo apt-key add - \   &amp;&amp; curl -s -L https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-docker&#x2F;$distribution&#x2F;nvidia-docker.list | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nvidia-docker.listcurl -s -L https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-container-runtime&#x2F;experimental&#x2F;$distribution&#x2F;nvidia-container-runtime.list | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nvidia-container-runtime.listsudo apt-get updatesudo apt-get install -y nvidia-docker2sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-拉取cuda、cudnn的镜像"><a href="#3-拉取cuda、cudnn的镜像" class="headerlink" title="3.拉取cuda、cudnn的镜像"></a>3.拉取cuda、cudnn的镜像</h2><p>docker hub地址：<a href="https://hub.docker.com/r/nvidia/cuda">点我查看</a></p><p>官网给出多个版本可供拉取，这里使用cuda:10.0-cudnn7-devel-ubuntu16.04</p><pre class="line-numbers language-none"><code class="language-none">docker pull nvidia&#x2F;cuda:10.0-cudnn7-devel-ubuntu16.04<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-新建容器"><a href="#4-新建容器" class="headerlink" title="4.新建容器"></a>4.新建容器</h2><p>容器与镜像的关系好比：镜像为C++中的类，而容器为镜像的实例话，这里基于拉去的cuda:10.0-cudnn7-devel-ubuntu16.04镜像创建一个新的容器并进入容器中：</p><pre class="line-numbers language-none"><code class="language-none">docker container run --name pytorch1.1-gpu -it --gpus all  nvidia&#x2F;cuda:10.0-cudnn7-devel-ubuntu16.04 &#x2F;bin&#x2F;bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解释：</p><ul><li>docker container run：容器启动命令，同时会新建一个容器，因此该命令是在新建容器时使用</li><li>–name ：后的参数为新建容器的名称</li><li>-it：其实是 -i -t 的缩写，该参数使得容器具备交互性并与终端进行连接，将shell切换至终端</li><li>–gpu all：表示允许容器使用宿主机的所有GPU</li><li>nvidia&#x2F;cuda:10.0-cudnn7-devel-ubuntu16.04：创建新的容器所基于的镜像名称</li><li>&#x2F;bin&#x2F;bash：指定在容器内部运行的进程，该进程是通过docker container run命令来通知容器运行的</li></ul><p>以该命令创建并进入容器后，该容器就具有了nvidia&#x2F;cuda:10.0-cudnn7-devel-ubuntu16.04镜像的配置，相当于实现了“实例话”</p><p>退出该容器后，可以使用以下命令进行查看：</p><ul><li>查看正在运行的容器：</li></ul><pre class="line-numbers language-none"><code class="language-none">docker container ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>查看容器运行历史：</li></ul><pre class="line-numbers language-none"><code class="language-none">docker container ls -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里可以看到刚才运行的容器pytorch1.1-gpu的信息。</p><h3 id="4-1-重启容器"><a href="#4-1-重启容器" class="headerlink" title="4.1.重启容器"></a>4.1.重启容器</h3><p>docker container start + 容器名或容器ID，启动一个已经完成创建并停止运行的容器：</p><pre class="line-numbers language-none"><code class="language-none">docker container start pytorch1.1-gpu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看正在运行的容器：</p><pre class="line-numbers language-none"><code class="language-none">docker container ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>docker container exec   命令用于进入正在运行的容器：</p><pre class="line-numbers language-none"><code class="language-none">docker container exec -it pytorch1.1-gpu &#x2F;bin&#x2F;bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-2停止容器"><a href="#4-2停止容器" class="headerlink" title="4.2停止容器"></a>4.2停止容器</h3><p>docker container stop   用于停止正在运行的容器：</p><pre class="line-numbers language-none"><code class="language-none">docker container stop pytorch1.1-gpu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-3删除容器"><a href="#4-3删除容器" class="headerlink" title="4.3删除容器"></a>4.3删除容器</h3><pre class="line-numbers language-none"><code class="language-none">docker container rm  待删除的容器命令或ID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：删除容器之前需要停止容器，避免报错。</p><h2 id="5-安装常用工具"><a href="#5-安装常用工具" class="headerlink" title="5.安装常用工具"></a>5.安装常用工具</h2><pre class="line-numbers language-none"><code class="language-none"># 安装gitapt-get install git -y# 安装vimapt install vim# 安装cmakeapt install cmake# 安装updatedbapt-get install mlocate# 安装wgetapt-get install wget# 安装curlapt-get install curl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-在容器中安装python"><a href="#6-在容器中安装python" class="headerlink" title="6.在容器中安装python"></a>6.在容器中安装python</h2><p>新建的容器默认没有python或pip、vim等工具，除非新建容器时将这些包一并装入，因此需要手动安装一些需要的包。新的容器中 apt-get 或 apt 命令是可以使用的：</p><p>参考网站：<a href="https://www.digitalocean.com/community/questions/unable-to-install-pyhton-3-7-version-on-ubuntu-16-04-error-couldn-t-find-any-package-by-regex-python3-7">点我查看</a></p><pre class="line-numbers language-none"><code class="language-none">#更新源apt update#安装python依赖apt install software-properties-common#添加源add-apt-repository ppa:deadsnakes&#x2F;ppa#更新源apt update#安装pythonapt install python3.7#查看python版本python --version 或 python -Vpython3 --version 或 python3 -V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装完python3.7可能需要修改默认python指向才能正常使用python3.7：</p><p>参考网站：<a href="https://blog.csdn.net/qq_33188180/article/details/109723636">点我查看</a></p><p>查看默认python指向：</p><pre class="line-numbers language-none"><code class="language-none">ls -l &#x2F;usr&#x2F;bin | grep python <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除原有python软连接：</p><pre class="line-numbers language-none"><code class="language-none">rm &#x2F;usr&#x2F;bin&#x2F;python<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>建立python到新的软链接python3.7：</p><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;usr&#x2F;bin&#x2F;python3.7  &#x2F;usr&#x2F;bin&#x2F;python<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="7-在容器中安装pip"><a href="#7-在容器中安装pip" class="headerlink" title="7.在容器中安装pip"></a>7.在容器中安装pip</h2><p>这里也有个小坑！如果你写的是python3-pip 执行安装后，如果系统自带了python3.5，其实pip这时是装在了python3.5环境下了！！正确的指定方式，应该把小版本号也加上！</p><pre class="line-numbers language-none"><code class="language-none">apt-get install python3.7-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是执行上述命令可能会报错，如果报错需要安装下面的方法添加pip安装源：</p><pre class="line-numbers language-none"><code class="language-none">curl https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;get-pip.py -o get-pip.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于上面已经将python指向了python3，因此下面直接使用python安装即可，否者要使用python3安装：</p><pre class="line-numbers language-none"><code class="language-none">python get-pip.py --force-reinstall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看pip位置：</p><pre class="line-numbers language-none"><code class="language-none">which pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我在安装后显示安装在：&#x2F;usr&#x2F;local&#x2F;bin&#x2F;pip</p><p>建立pip软链接：</p><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;pip &#x2F;usr&#x2F;bin&#x2F;pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：第一个地址  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;pip  为  which pip  的显示地址</p><p>查看pip版本：</p><pre class="line-numbers language-none"><code class="language-none">pip -V 或 pip --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我的显示位置为：pip 20.3.4 from &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;dist-packages&#x2F;pip (python 3.7)</p><p>至此，python将指向python3.7，pip将指向python 3.7的pip 20.3.4，实现python和pip的版本对应，且目标容器内二者都是唯一存在，不需要再使用python3和pip3调用python3的对应版本，这样使用pip安装的包将默认存放在  &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;dist-packages  中。</p><h2 id="8-安装PyTorch"><a href="#8-安装PyTorch" class="headerlink" title="8.安装PyTorch"></a>8.安装PyTorch</h2><p>最新版本安装方法：<a href="https://pytorch.org/get-started/locally/">点我查看</a></p><p>历史版本安装方法：<a href="https://pytorch.org/get-started/previous-versions/">点我查看</a></p><pre class="line-numbers language-none"><code class="language-none">pip install torch&#x3D;&#x3D;1.1.0 torchvision&#x3D;&#x3D;0.3.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="9-安装eigen3"><a href="#9-安装eigen3" class="headerlink" title="9.安装eigen3"></a>9.安装eigen3</h2><p>参考网址：<a href="https://blog.csdn.net/xiangxianghehe/article/details/81236299?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-4.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-4.control">点我查看</a></p><h3 id="9-1安装依赖"><a href="#9-1安装依赖" class="headerlink" title="9.1安装依赖"></a>9.1安装依赖</h3><pre class="line-numbers language-none"><code class="language-none">apt-get install libopenblas-devapt-get install --no-install-recommends libboost1.58-all-devapt-get install libx11-devapt-get install libgl1-mesa-dev apt-get install libglu1-mesa-dev apt-get install freeglut3-devapt-get install doxygenwget https:&#x2F;&#x2F;nchc.dl.sourceforge.net&#x2F;project&#x2F;glew&#x2F;glew&#x2F;2.1.0&#x2F;glew-2.1.0.tgz --no-check-certificatetar -xzvf glew-2.1.0.tgzcd glew-2.1.0&#x2F;make make installldconfig -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-2安装Eigen3-3-5"><a href="#9-2安装Eigen3-3-5" class="headerlink" title="9.2安装Eigen3.3.5"></a>9.2安装Eigen3.3.5</h3><pre class="line-numbers language-none"><code class="language-none">wget https:&#x2F;&#x2F;github.com&#x2F;eigenteam&#x2F;eigen-git-mirror&#x2F;archive&#x2F;3.3.5.tar.gztar -xzvf 3.3.5.tar.gz mv eigen-git-mirror-3.3.5&#x2F; eigen-3.3.5&#x2F;cd eigen-3.3.5&#x2F;mkdir buildcd buildcmake ..makemake install ldconfig -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-3测试"><a href="#9-3测试" class="headerlink" title="9.3测试"></a>9.3测试</h3><p>在容器中创建测试文件夹：</p><pre class="line-numbers language-none"><code class="language-none">mkdir install_test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在宿主机上创建如下文件：</p><ul><li>CMakeLists.txt</li></ul><pre class="line-numbers language-none"><code class="language-none">cmake_minimum_required( VERSION 2.8 )project(useEigen)set( CMAKE_BUILD_TYPE &quot;Release&quot; )set( CMAKE_CXX_FLAGS &quot;-O3&quot; )set( CMAKE_CXX_FLAGS &quot;-std&#x3D;c++11&quot;)# 添加Eigen头文件include_directories( &quot;&#x2F;usr&#x2F;local&#x2F;include&#x2F;eigen3&quot; )add_executable(useEigen  main.cpp)find_package(Eigen3 REQUIRED)target_link_libraries($&#123;PROJECT_NAME&#125;  $&#123;EIGEN3_LIBS&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>main.cpp</li></ul><pre class="line-numbers language-none"><code class="language-none">#include &lt;iostream&gt;#include &lt;fstream&gt;#include &lt;vector&gt;#include &lt;Eigen&#x2F;Core&gt;#include &lt;Eigen&#x2F;Dense&gt;#include &lt;Eigen&#x2F;Geometry&gt;#include &lt;Eigen&#x2F;StdVector&gt;using namespace std;int main()&#123;    &#x2F;&#x2F;1.rotation vector to  rotation matrix    Eigen::AngleAxisd rotationVector(M_PI&#x2F;4,Eigen::Vector3d(0,0,1));    Eigen::Matrix3d rotationMatrix&#x3D;Eigen::Matrix3d::Identity();    rotationMatrix&#x3D;rotationVector.toRotationMatrix();    cout&lt;&lt;&quot;rotationMatrix \n&quot;&lt;&lt;rotationMatrix&lt;&lt;endl;    &#x2F;&#x2F;2.rotation vector to quaterniond    Eigen::Quaterniond q&#x3D;Eigen::Quaterniond( rotationVector );    cout&lt;&lt;&quot;rotation quaternion \n&quot;&lt;&lt;q.coeffs()&lt;&lt;endl;    &#x2F;&#x2F;3.rotaion vector to eulerAngles    Eigen::Vector3d eulerAngle&#x3D;rotationVector.matrix().eulerAngles(0,1,2);    cout&lt;&lt;&quot;eulerAngle roll pitch yaw\n&quot;&lt;&lt;180*eulerAngle&#x2F;M_PI&lt;&lt;endl;    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将宿主机上的两个文件拷贝至容器中的install_test里进行测试：</p><pre class="line-numbers language-none"><code class="language-none">docker cp CMakeLists.txt pytorch1.1-gpu:&#x2F;home&#x2F;eigen-3.3.5&#x2F;install_testdocker cp main.cpp  pytorch1.1-gpu:&#x2F;home&#x2F;eigen-3.3.5&#x2F;install_test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>测试：</p><pre class="line-numbers language-none"><code class="language-none">cd install_testcmake  .make.&#x2F;useEigen<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>若显示结果如下，则说明测试成功。</p><pre class="line-numbers language-none"><code class="language-none">rotationMatrix  0.707107 -0.707107         0 0.707107  0.707107         0        0         0         1rotation quaternion        0       00.382683 0.92388eulerAngle roll pitch yaw-0 045<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-安装tensorflow"><a href="#10-安装tensorflow" class="headerlink" title="10.安装tensorflow"></a>10.安装tensorflow</h2><ul><li>tensorflow与cuda的版本对应关系</li></ul><p><img src="https://i.loli.net/2021/05/21/PEoKmlhbcXisCWt.png"></p><p>安装命令：</p><pre class="line-numbers language-none"><code class="language-none">pip install tensorflow-gpu&#x3D;&#x3D;2.0 -i http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple --trusted-host pypi.douban.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> docker </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16-04-LTS：anaconda3安装</title>
      <link href="/2022/11/23/ubuntu16-04-LTS:anaconda3%E5%AE%89%E8%A3%85/"/>
      <url>/2022/11/23/ubuntu16-04-LTS:anaconda3%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1-下载清华源镜像文件"><a href="#1-下载清华源镜像文件" class="headerlink" title="1. 下载清华源镜像文件"></a>1. 下载清华源镜像文件</h1><p>网址：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p><p>版本：建议安装Anaconda3-5.2.0-Linux-x86_64.sh</p><h1 id="2-进入下载目录执行以下命令进行安装"><a href="#2-进入下载目录执行以下命令进行安装" class="headerlink" title="2. 进入下载目录执行以下命令进行安装"></a>2. 进入下载目录执行以下命令进行安装</h1><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">bash Anaconda3-5.2.0-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://i.loli.net/2021/05/16/9curYTMUWmveogb.png"></p><ul><li>一路按回车至底部，出现提示：是否接受安装协议时：回复yes:</li></ul><p><img src="https://i.loli.net/2021/05/16/JU2iRojd3vH4fsY.png"></p><ul><li>默认的路径为&#x2F;home&#x2F;username&#x2F;anaconda3，默认的话直接按ENTER即可，等待安装过程完成即可。</li></ul><p><img src="https://i.loli.net/2021/05/16/iVDa14zUNREPYKs.png"></p><ul><li>询问是否将Anaconda3加入到环境变量中，选：yes</li></ul><p><img src="https://i.loli.net/2021/05/16/DBj5P8VMTzgYu2s.png"></p><ul><li>默认的话直接按ENTER即可，等待安装过程完成即可。</li></ul><h1 id="3-检查是否安装成功"><a href="#3-检查是否安装成功" class="headerlink" title="3.检查是否安装成功"></a>3.检查是否安装成功</h1><p>  使用以下命令可以查看已经存在的conda虚拟环境</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">conda env list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  使用以下命令可以查看conda的路径是否添加成功</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">sudo gedit ~&#x2F;.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  使其立即生效，在终端执行：</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">source ~&#x2F;.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  <strong>4.进入任意一个创建的虚拟环境里面检查python</strong></p><p>  在虚拟环境中输入以下命令：</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">python<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  会出现类似以下含有anaconda的字样：</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Python 3.6.5 |Anaconda, Inc.| (default, Apr 29 2018, 16:14:56) [GCC 7.2.0] on linuxType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>  如果没有出现以下字样，说明系统的python版本需要指定，使用以下命令：</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">sudo gedit ~&#x2F;.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  在bashrc中添加一行：</p>  <pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">alias python&#x3D;python3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  (注意这里的python3是和安装的anaconda3对应的默认pyrhon对应的，可以在conda虚拟环境中的base环境中查看对应的python版本)</p><p>  然后激活bashrc</p>  <pre class="line-numbers language-none"><code class="language-none">source ~&#x2F;.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  这样就可以使用conda创建的虚拟环境对应的python。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu16-04手动安装英伟达显卡驱动</title>
      <link href="/2022/11/23/ubuntu16-04%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85%E8%8B%B1%E4%BC%9F%E8%BE%BE%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
      <url>/2022/11/23/ubuntu16-04%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85%E8%8B%B1%E4%BC%9F%E8%BE%BE%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-屏蔽开源驱动"><a href="#1-屏蔽开源驱动" class="headerlink" title="1.屏蔽开源驱动"></a>1.屏蔽开源驱动</h2><p>屏蔽开源驱动nouveau安装过程会询问是否屏蔽，手动屏蔽也有多种操作方式，可以使用如下方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gedit /etc/modprobe.d/blacklist.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后添加内容到最底段，要回车另起一行。添加的内容为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">blacklist nouveau options nouveau <span class="token assign-left variable">modeset</span><span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>保存再终端更新内核命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> update-initramfs <span class="token parameter variable">-u</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可能会出现如下警告，忽略即可：</p><img src="https://i.loli.net/2021/06/22/lkPBpOvA3MIsfXq.png" style="zoom:50%;" /><h2 id="2-下载驱动"><a href="#2-下载驱动" class="headerlink" title="2.下载驱动"></a>2.下载驱动</h2><p>然后，重启电脑。下载NVIDIA的驱动形如：NVIDIA-Linux-x86_64-384.run 下载网址为：<a href="https://www.geforce.cn/drivers%E3%80%82">https://www.geforce.cn/drivers。</a></p><p>在win10下的设备管理器中可以查看显卡的型号。型号为：NVIDIA GeForce GTX 1050 Ti电脑类型为：笔记本</p><p>所以手动搜索驱动程序时，应该这样选择：</p><p><img src="https://i.loli.net/2021/06/22/S69TiRpgEc3ydPk.png"></p><p>选择第一个驱动版本一般可以安装成功的，但不同电脑可能结果不同，安装失败的话还需要更换版本尝试安装。</p><p>下好的”.run”文件放在home ，目录下，最好将文件名称该为简单点的。</p><h2 id="3-进入root的命令行模型"><a href="#3-进入root的命令行模型" class="headerlink" title="3.进入root的命令行模型"></a>3.进入root的命令行模型</h2><p>安装驱动重启电脑，进入ubuntu高级模式，然后选择下图中的 root 选项：</p><img src="https://i.loli.net/2021/06/22/rnKMFl81T4giEUf.png" style="zoom:50%;" /><p>然后按”回车”：</p><img src="https://i.loli.net/2021/06/22/I1ZeWDCaTcEx5X2.png" style="zoom:50%;" /><h2 id="4-安装驱动"><a href="#4-安装驱动" class="headerlink" title="4.安装驱动"></a>4.安装驱动</h2><p>然后，按”回车”，进入系统目录。安装驱动程序，执行如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/用户名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭当前图形环境</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> lightdm stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因为之前的后缀为”.run”的驱动文件放在home目录下，所以， 到驱动所在文件夹后 执行如下命令修改权限并运行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chmod</span> a+x NVIDIA-Linux-x86_64-xxx.run <span class="token function">sudo</span> <span class="token function">sh</span> NVIDIA-Linux-x86_64-xxx.run -no-opengl-files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后剩余步骤均为默认即可，直接回车执行下一步。</p><ul><li>提示”dkms”安装时，需要安装。</li><li>会提示有”32”字样，选择”OK”继续即可。</li></ul><p>最后重新启动图形环境：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> lightdm start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-查看是否安装成功"><a href="#5-查看是否安装成功" class="headerlink" title="5.查看是否安装成功"></a>5.查看是否安装成功</h2><p>检查安装是否成功并重启电脑，正常进入系统。</p><p>如果出现循环输入登录密码但是无法登录成功的情况，则为驱动版本和自己的电脑不匹配，需要下载其他显卡驱动版本尝试。</p><p>进一步检查，打开终端输入如下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现如下所示信息，即为安装成功:</p><img src="https://i.loli.net/2021/06/22/gZB9FKjSl2T8wGV.png" style="zoom:50%;" /><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 显卡驱动安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10与ubuntu16-04-LTS双系统安装教程</title>
      <link href="/2022/11/23/win10%E4%B8%8Eubuntu16-04-LTS%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/23/win10%E4%B8%8Eubuntu16-04-LTS%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-创建空闲分区"><a href="#1-创建空闲分区" class="headerlink" title="1.创建空闲分区"></a>1.创建空闲分区</h2><p>在win系统下，在”此电脑”→右键”管理“→“磁盘管理”→右键一个不用的磁盘并”格式化“→”删除卷“，分出一个状态为“未分配”的磁盘用于安装ubuntu16.04 LTS</p><h2 id="2-开始安装"><a href="#2-开始安装" class="headerlink" title="2.开始安装"></a>2.开始安装</h2><p>插入具有ubuntu16.04 LTS系统的U盘开始安装系统</p><ul><li>选择系统语言，可以是中文或英文。如需要安装tensflow的话建议安装英文版本</li><li>选择安装类型为其它选项</li></ul><img src="https://i.loli.net/2021/06/22/9FEvKkQmATYq7Ip.jpg" style="zoom: 67%;" /><h2 id="3-双击空闲盘进行分区"><a href="#3-双击空闲盘进行分区" class="headerlink" title="3.双击空闲盘进行分区"></a>3.双击空闲盘进行分区</h2><h3 id="3-1-x2F-boot分区"><a href="#3-1-x2F-boot分区" class="headerlink" title="3.1   &#x2F;boot分区"></a>3.1   &#x2F;boot分区</h3><p>&#x2F;boot：这个就是实现你双系统的原因了，这个就是用于启动 ubuntu 的目录，里面会有系统的引导，这个文件其实只有几十兆，但是我们建议将其划分为 200M 文件格式为 ext4，这个分区必不可少，否则后果你懂得！</p><h3 id="3-2-swap分区"><a href="#3-2-swap分区" class="headerlink" title="3.2   swap分区"></a>3.2   swap分区</h3><p>swap:这个是 Linux 也就是 ubuntu 的交换区目录，这个一般的大小为内存的 2 倍左右， 主要是用来在电脑内存不足的情况下，系统会调用这片区域，来运行程序，我们可以将其分为 4G， 这个把ext4换成交换空间，英文swap</p><h3 id="3-3-x2F-分区"><a href="#3-3-x2F-分区" class="headerlink" title="3.3    &#x2F;分区"></a>3.3    &#x2F;分区</h3><p>&#x2F;:这是 linux 也就是 ubuntu 的根目录就一个反斜杠表示，相当于windows的C盘， 我们将其分为 10G，文件格式为 ext4，条件允许可以大一点，可以20G，毕竟ubuntu装软件默认是装在这里的，大一点可能会省去后面隐藏的麻烦。</p><h3 id="3-4-x2F-home分区"><a href="#3-4-x2F-home分区" class="headerlink" title="3.4   &#x2F;home分区"></a>3.4   &#x2F;home分区</h3><p>&#x2F;home:这是 ubuntu 的“其他盘”， 这个也可以说是我们的个人目录，相当于windows的其他盘，所以为了让我们自己的目录大一点，剩下的全分给它，文件格式为 ext4</p><img src="https://i.loli.net/2021/06/22/IZixlEy6FC8vRKn.png" style="zoom: 67%;" /><p>以上两步新建分区后的类似效果：</p><img src="https://i.loli.net/2021/06/22/KxGUtJWhYPMRS3p.png" style="zoom:67%;" /><h2 id="4-选择安装启动引导的设备"><a href="#4-选择安装启动引导的设备" class="headerlink" title="4.选择安装启动引导的设备"></a>4.选择安装启动引导的设备</h2><p>安装启动引导的设备：windows boot manager</p><img src="https://i.loli.net/2021/06/22/v2JbClS7IwjU46a.png" style="zoom:50%;" /><h2 id="5-自动安装"><a href="#5-自动安装" class="headerlink" title="5.自动安装"></a>5.自动安装</h2><img src="https://i.loli.net/2021/06/22/oMECN25eyXsIAKS.jpg" style="zoom: 50%;" /><img src="https://i.loli.net/2021/06/22/T7CP1BcVWb9wxIR.jpg" style="zoom:50%;" /><p>安装完成后可能显示画面模糊，这是因为没有安装显卡驱动，可以按照教程”Ubuntu16.04手动安装英伟达显卡驱动”安装即可</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手眼标定-Ros-Kinetic-Realsense-D435-AUBOi5-Ubuntu-16-04</title>
      <link href="/2022/11/23/%E6%89%8B%E7%9C%BC%E6%A0%87%E5%AE%9A-Ros-Kinetic-Realsense-D435-AUBOi5-Ubuntu-16-04/"/>
      <url>/2022/11/23/%E6%89%8B%E7%9C%BC%E6%A0%87%E5%AE%9A-Ros-Kinetic-Realsense-D435-AUBOi5-Ubuntu-16-04/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装AUBOi5的Moveit功能包"><a href="#1-安装AUBOi5的Moveit功能包" class="headerlink" title="1.安装AUBOi5的Moveit功能包"></a>1.安装AUBOi5的Moveit功能包</h2><h3 id="1-1环境配置"><a href="#1-1环境配置" class="headerlink" title="1.1环境配置"></a>1.1环境配置</h3><p>下载Move-it package</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-moveit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载moveit_visual_tools</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-moveit-visual-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载industrial_core package</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-industrial-core<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-2建立ROS工作空间"><a href="#1-2建立ROS工作空间" class="headerlink" title="1.2建立ROS工作空间"></a>1.2建立ROS工作空间</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /opt/ros/kinetic/setup.bash<span class="token comment"># catkin_ws为工作空间名称</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/catkin_ws/src<span class="token builtin class-name">cd</span> ~/catkin_ws/catkin_make<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-在-x2F-catkin-ws-x2F-src-目录中下载Moveit功能包，并编译"><a href="#1-2-在-x2F-catkin-ws-x2F-src-目录中下载Moveit功能包，并编译" class="headerlink" title="1.2 在  ~&#x2F;catkin_ws&#x2F;src  目录中下载Moveit功能包，并编译"></a>1.2 在  ~&#x2F;catkin_ws&#x2F;src  目录中下载Moveit功能包，并编译</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/catkin_ws/src<span class="token function">git</span> clone https://github.com/lg609/aubo_robot.git<span class="token builtin class-name">cd</span> ~/catkin_ws/catkin_make<span class="token builtin class-name">source</span> ~/catkin_ws/devel/setup.bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注释：如果提示下列错误，则说明在安装Ros的时候没有安装Ros-moveit功能包：</p><p><img src="https://i.loli.net/2021/05/28/jShBMoz9apcKVXE.png"></p><p>解决办法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-moveit*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注：参考网址：<a href="https://github.com/tahsinkose/hector-moveit/issues/4">点我查看</a></p><h2 id="2-安装Realsense-D435相机驱动与功能包"><a href="#2-安装Realsense-D435相机驱动与功能包" class="headerlink" title="2.安装Realsense D435相机驱动与功能包"></a>2.安装Realsense D435相机驱动与功能包</h2><h3 id="2-1驱动安装"><a href="#2-1驱动安装" class="headerlink" title="2.1驱动安装"></a>2.1驱动安装</h3><p>官方安装教程：<a href="https://github.com/IntelRealSense/librealsense/blob/master/doc/distribution_linux.md">点我查看</a></p><p>参考教程：<a href="https://zhuanlan.zhihu.com/p/93127918">点我查看</a></p><p>注册公匙：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> apt-key adv <span class="token parameter variable">--keyserver</span> keys.gnupg.net --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE <span class="token operator">||</span> <span class="token function">sudo</span> apt-key adv <span class="token parameter variable">--keyserver</span> hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加服务器至存储列表：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> add-apt-repository <span class="token string">"deb https://librealsense.intel.com/Debian/apt-repo xenial main"</span> <span class="token parameter variable">-u</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装所需库：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> librealsense2-dkms<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> librealsense2-utils<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装功能包：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> librealsense2-dev<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> librealsense2-dbg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启动连接界面，进行测试，若可以看到相机图像则证明驱动安装成功：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">realsense-viewer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2功能包安装"><a href="#2-2功能包安装" class="headerlink" title="2.2功能包安装"></a>2.2功能包安装</h3><p>创建工作空间：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/catkin_ws/src <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> ~/catkin_ws/src<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载源码，并检查依赖:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">2.2</span>.7 https://github.com/IntelRealSense/realsense-ros.git <span class="token builtin class-name">cd</span> realsense-ros/realsense2_camera <span class="token function">git</span> checkout <span class="token variable"><span class="token variable">`</span><span class="token function">git</span> tag <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-V</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-P</span> <span class="token string">"^\d+\.\d+\.\d+"</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span><span class="token variable">`</span></span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-ddynamic-reconfigure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>编译：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/catkin_wscatkin_make <span class="token parameter variable">-DCATKIN_ENABLE_TESTING</span><span class="token operator">=</span>False <span class="token parameter variable">-DCMAKE_BUILD_TYPE</span><span class="token operator">=</span>Release catkin_make <span class="token function">install</span> <span class="token builtin class-name">echo</span> <span class="token string">"source ~/catkin_ws/devel/setup.bash"</span> <span class="token operator">>></span> ~/.bashrc <span class="token builtin class-name">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试，启动相机节点：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">roslaunch realsense2_camera rs_camera.launch<span class="token comment"># 查看发布的话题</span>rostopic list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-安装ros-kinetic-visp依赖包"><a href="#3-安装ros-kinetic-visp依赖包" class="headerlink" title="3.安装ros-kinetic-visp依赖包"></a>3.安装ros-kinetic-visp依赖包</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ros-kinetic-visp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-安装aruco-ros二维码检测功能包"><a href="#4-安装aruco-ros二维码检测功能包" class="headerlink" title="4.安装aruco_ros二维码检测功能包"></a>4.安装aruco_ros二维码检测功能包</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/catkin_ws/src<span class="token function">git</span> clone <span class="token parameter variable">-b</span> kinetic-devel https://github.com/pal-robotics/aruco_ros.git<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>catkin_make<span class="token builtin class-name">source</span> ~/catkin_ws/devel/setup.bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-安装visp-hand2eye-calibration"><a href="#5-安装visp-hand2eye-calibration" class="headerlink" title="5.安装visp_hand2eye_calibration"></a>5.安装visp_hand2eye_calibration</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/catkin_ws/src<span class="token function">git</span> clone <span class="token parameter variable">-b</span> kinetic-devel https://github.com/lagadic/vision_visp.git<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>catkin_make <span class="token parameter variable">--pkg</span> visp_hand2eye_calibration<span class="token builtin class-name">source</span> ~/catkin_ws/devel/setup.bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-安装easy-handeye手眼标定功能包"><a href="#6-安装easy-handeye手眼标定功能包" class="headerlink" title="6.安装easy_handeye手眼标定功能包"></a>6.安装easy_handeye手眼标定功能包</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/catkin_ws/src<span class="token function">git</span> clone https://github.com/IFL-CAMP/easy_handeye<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>catkin_make<span class="token builtin class-name">source</span> ~/catkin_ws/devel/setup.bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-标定方法"><a href="#7-标定方法" class="headerlink" title="7.标定方法"></a>7.标定方法</h2><h3 id="7-1眼在手上-eye-in-hand标定方法"><a href="#7-1眼在手上-eye-in-hand标定方法" class="headerlink" title="7.1眼在手上 eye-in-hand标定方法"></a>7.1眼在手上 eye-in-hand标定方法</h3><h4 id="7-1-1修改launch文件"><a href="#7-1-1修改launch文件" class="headerlink" title="7.1.1修改launch文件"></a>7.1.1修改launch文件</h4><p>标定过程需启动 ur5 机械臂的相关节点，realsense 节点，aruco 节点，easy_handeye 节点，可以写一个 launch 文件同时启动上述节点，也可以分别启动。easy_handeye 包中给出了用一个 launch 文件实现的示例，在如下的目录中：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/catkin_ws/src/easy_handeye/docs/example_launch/ur5_kinect_calibration.launch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们可以在此基础上进行修改。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将 launch 文件拷贝到 easy_handeye 功能包的 launch 目录中，顺便改个名字</span><span class="token builtin class-name">cd</span> ~/catkin_ws/src/easy_handeye/docs/example_launch<span class="token function">cp</span> ur5_kinect_calibration.launch ~/catkin_ws/src/easy_handeye/easy_handeye/launch/eye_in_hand_calibration.launchgedit  ~/catkin_ws/src/easy_handeye/easy_handeye/launch/eye_in_hand_calibration.launch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改 launch 文件如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aubo_i5_kinect_handeyecalibration<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment">&lt;!-- 169.254.3.20为AUBOi5机械臂的IP地址,根据实际情况修改 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_ip<span class="token punctuation">"</span></span> <span class="token attr-name">doc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>The IP address of the UR5 robot<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>169.254.3.20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>marker_size<span class="token punctuation">"</span></span> <span class="token attr-name">doc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Size of the ArUco marker used, in meters<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>marker_id<span class="token punctuation">"</span></span> <span class="token attr-name">doc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>The ID of the ArUco marker used<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 1. start the Realsense435 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">file</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(find realsense2_camera)/launch/rs_camera.launch<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 2. start ArUco --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aruco_tracker<span class="token punctuation">"</span></span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aruco_ros<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>single<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remap</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/camera_info<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/camera/color/camera_info<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>remap</span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/image<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/camera/color/image_raw<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_is_rectified<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>marker_size<span class="token punctuation">"</span></span>        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg marker_size)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>marker_id<span class="token punctuation">"</span></span>          <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg marker_id)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reference_frame<span class="token punctuation">"</span></span>    <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera_color_frame<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera_frame<span class="token punctuation">"</span></span>       <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera_color_frame<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>marker_frame<span class="token punctuation">"</span></span>       <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera_marker<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>node</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 3. start the robot --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">file</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(find aubo_i5_moveit_config)/launch/moveit_planning_execution.launch<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 4. start easy_handeye --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">file</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(find easy_handeye)/launch/calibrate.launch<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace_prefix)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- true：相机安装在机械臂末端 false: 相机安装在机械臂外--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye_on_hand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment">&lt;!-- tracking_base_frame 为相机坐标系 camera_color_frame --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tracking_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera_color_frame<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tracking_marker_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera_marker<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- robot_base_frame 为机器人基座坐标系 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>base_link<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- robot_effector_frame 为工具坐标系，即：与相机相连的关节名称 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_effector_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wrist3_Link<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>freehand_robot_movement<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_velocity_scaling<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_acceleration_scaling<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>move_group<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>manipulator_i5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-1-2启动-launch-文件，开始标定"><a href="#7-1-2启动-launch-文件，开始标定" class="headerlink" title="7.1.2启动 launch 文件，开始标定"></a>7.1.2启动 launch 文件，开始标定</h4><p>启动 launch 文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">roslaunch easy_handeye eye_to_hand_calibration.launch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功运行后，会同时打开三个界面：</p><img src="https://i.loli.net/2021/05/28/4Xmzb3hFrnd5R7c.jpg" alt="界面1" style="zoom:50%;" /><img src="https://i.loli.net/2021/05/28/Av7F6K9Gu8pfZs3.jpg"  alt="界面2" style="zoom: 67%;" /><p><img src="https://i.loli.net/2021/05/28/2ydewHu76InBqfs.jpg" alt="界面3"></p><p>在界面 2 中，点击菜单栏(菜单栏在屏幕左上角)的 Plugins -&gt; Visulization -&gt; Image View，选择 &#x2F;aruco_tracker&#x2F;result 话题，界面会如下所示：</p><img src="https://i.loli.net/2021/05/28/YTKPw46HouZGpk9.jpg" style="zoom: 50%;" /><h4 id="7-1-3标定步骤"><a href="#7-1-3标定步骤" class="headerlink" title="7.1.3标定步骤"></a>7.1.3标定步骤</h4><ol><li>手动调节机械臂，使 aruco 二维码移动至相机视野中心处附近，作为 home config。在界面 3 中，点击 check starting pose，若检查成功，界面会出现： 0&#x2F;17，ready to start</li><li>界面 3 中依次点击 Next Pose，Plan，Execute，机械臂会移动至新的位置，若二维码在相机视野范围内，且能检测成功，则进行下一步</li><li>界面 2 中点击 Take Sample，若 Samples 对话框中出现有效信息，说明第一个点标定成功</li><li>重复执行步骤 2 和步骤 3，直至 17 个点全部标定完毕</li><li>界面 2 中点击 Compute，则 Result 对话框中会出现结果</li><li>界面 2 中 Save，会将结果保存为一个 YAML 文件，路径为 <code>~/.ros/easy_handeye</code></li></ol><p><img src="https://i.loli.net/2021/05/28/gV9AWphbyU5mFlP.jpg"></p><h3 id="7-2眼在手外-eye-to-hand标定方法"><a href="#7-2眼在手外-eye-to-hand标定方法" class="headerlink" title="7.2眼在手外 eye-to-hand标定方法"></a>7.2眼在手外 eye-to-hand标定方法</h3><p>方法与“眼在手上”基本相同，需要修改一下 launch 文件，注意两个 launch 文件不要重名。</p><p>唯一修改的地方是 easy_handeye 功能包 calibrate.launch 文件中 “eye_on_hand” 参数改成 true，如下所示</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将 launch 文件拷贝到 easy_handeye 功能包的 launch 目录中，顺便改个名字</span><span class="token builtin class-name">cd</span> ~/catkin_ws/src/easy_handeye/docs/example_launch<span class="token function">cp</span> ur5_kinect_calibration.launch ~/catkin_ws/src/easy_handeye/easy_handeye/launch/eye_to_hand_calibration.launchgedit  ~/catkin_ws/src/easy_handeye/easy_handeye/launch/eye_to_hand_calibration.launch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-将标定结果发送至TF树"><a href="#8-将标定结果发送至TF树" class="headerlink" title="8.将标定结果发送至TF树"></a>8.将标定结果发送至TF树</h2><p>easy_handeye 功能包提供了 publish.launch 文件，可以将标定好的 TF 发布出去</p><h3 id="8-1眼在手上eye-in-hand"><a href="#8-1眼在手上eye-in-hand" class="headerlink" title="8.1眼在手上eye-in-hand"></a>8.1眼在手上eye-in-hand</h3><p>修改publish.launch 文件,要修改 “namespace_prefix” 参数，与眼在手上标定 launch 文件中的 “namespace_prefix” 一致，这样才能找到标定好的 YAML 文件</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye_on_hand<span class="token punctuation">"</span></span> <span class="token attr-name">doc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye-on-hand instead of eye-on-base<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ur5_realsense_handeyecalibration<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace_prefix)_eye_on_hand<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace_prefix)_eye_on_base<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--it is possible to override the link names saved in the yaml file in case of name clashes, for example--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_effector_frame<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tracking_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inverse<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!--publish hand-eye calibration--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">ns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye_on_hand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg robot_base_frame)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_effector_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg robot_effector_frame)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tracking_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg tracking_base_frame)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inverse<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg inverse)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(anon handeye_publisher)<span class="token punctuation">"</span></span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>easy_handeye<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>publish.py<span class="token punctuation">"</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-2眼在手外-eye-to-hand"><a href="#8-2眼在手外-eye-to-hand" class="headerlink" title="8.2眼在手外 eye-to-hand"></a>8.2眼在手外 eye-to-hand</h3><p>修改 “namespace_prefix” 外（同上），还要将 “eye_on_hand” 参数设为false</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye_on_hand<span class="token punctuation">"</span></span> <span class="token attr-name">doc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye-on-hand instead of eye-on-base<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace_prefix<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ur5_realsense_handeyecalibration<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace_prefix)_eye_on_hand<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>namespace<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace_prefix)_eye_on_base<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!--it is possible to override the link names saved in the yaml file in case of name clashes, for example--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_effector_frame<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tracking_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inverse<span class="token punctuation">"</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!--publish hand-eye calibration--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name">ns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg namespace)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eye_on_hand<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg robot_base_frame)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg eye_on_hand)<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot_effector_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg robot_effector_frame)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tracking_base_frame<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg tracking_base_frame)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inverse<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(arg inverse)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$(anon handeye_publisher)<span class="token punctuation">"</span></span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>easy_handeye<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>publish.py<span class="token punctuation">"</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-测试"><a href="#9-测试" class="headerlink" title="9.测试"></a>9.测试</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 开启 publish.luanch 文件，以眼在手上为例</span>roslaunch easy_handeye publish.launch<span class="token comment"># 查看 TF（改成自己的工具坐标系与相机坐标系）</span>rosrun tf tf_echo /tool0_controller /camera_color_frame<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://i.loli.net/2021/05/28/BgCzvN85MxAsUJV.jpg"></p><p>注意：这里四元数的顺序是 [qx, qy, qz, qw]</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手眼标定 </tag>
            
            <tag> AUBOi5 </tag>
            
            <tag> Realsense </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm使用ssh连接服务器中的docker容器</title>
      <link href="/2022/11/23/Pycharm%E4%BD%BF%E7%94%A8ssh%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E7%9A%84docker%E5%AE%B9%E5%99%A8/"/>
      <url>/2022/11/23/Pycharm%E4%BD%BF%E7%94%A8ssh%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E7%9A%84docker%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-拉取cuda、cudnn的docker镜像"><a href="#1-拉取cuda、cudnn的docker镜像" class="headerlink" title="1.拉取cuda、cudnn的docker镜像"></a>1.拉取cuda、cudnn的docker镜像</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-新建并启动交互式容器"><a href="#2-新建并启动交互式容器" class="headerlink" title="2.新建并启动交互式容器"></a>2.新建并启动交互式容器</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> tensorflow1.2.1-gpu <span class="token parameter variable">-v</span> /home/docker_share/:/home/ <span class="token parameter variable">-p</span> <span class="token number">2201</span>:22 <span class="token parameter variable">--gpus</span> all nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04 /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解释：</p><p>–name ：设置新容器的名称为tensorflow1.2.1-gpu</p><p>-v ：设置文件映射，将宿主机的文件&#x2F;home&#x2F;docker_share&#x2F;映射到该容器的&#x2F;home&#x2F;目录下</p><p>-p ：设置容器的端口与宿主机的端口映射，格式为：<strong>主机(宿主)端口:容器端口</strong></p><p>–gpus all 许容器使用所有GPU</p><p>nvidia&#x2F;cuda:10.0-cudnn7-devel-ubuntu16.04：容器的依赖镜像</p><p>&#x2F;bin&#x2F;bash：指定在容器内部运行的进程，该进程是通过docker container run命令来通知容器运行的</p><p>注释：</p><p>为了构建有序且规范的端口映射关系，这里设置一个默认规则用于设置容器的端口与宿主机的端口映射：主机端口固定，容器端口以主机端口为起始位依次排开</p><pre class="line-numbers language-none"><code class="language-none">容器端口主机端口220122220222<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-进入容器后修改容器的root密码"><a href="#3-进入容器后修改容器的root密码" class="headerlink" title="3.进入容器后修改容器的root密码"></a>3.进入容器后修改容器的root密码</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置用户名为root,密码为passwd(将其该为自己想要的密码)</span><span class="token builtin class-name">echo</span> <span class="token string">'root:passwd'</span> <span class="token operator">|</span> chpasswd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-安装openssh-server并启动"><a href="#4-安装openssh-server并启动" class="headerlink" title="4.安装openssh-server并启动"></a>4.安装openssh-server并启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#更新源</span><span class="token function">apt-get</span> update<span class="token comment">#或</span><span class="token function">apt-get</span> <span class="token parameter variable">-y</span> update<span class="token comment"># 安装openssh-server</span><span class="token function">apt-get</span> <span class="token function">install</span> openssh-server<span class="token comment"># 启动之前需手动创建/var/run/sshd，不然启动sshd的时候会报错</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/run/sshd<span class="token comment"># sshd以守护进程运行</span>/usr/sbin/sshd <span class="token parameter variable">-D</span> <span class="token operator">&amp;</span><span class="token comment"># 安装netstat，查看sshd是否监听22端口</span><span class="token function">apt-get</span> <span class="token function">install</span> net-tools<span class="token function">netstat</span> <span class="token parameter variable">-apn</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span class="token comment"># 显示如下</span><span class="token comment"># root@a78aa2e72670:/# netstat -apn | grep ssh</span><span class="token comment"># tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1266/sshd</span><span class="token comment"># tcp6       0      0 :::22                   :::*                    LISTEN      1266/sshd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-ssh登录设置"><a href="#5-ssh登录设置" class="headerlink" title="5.ssh登录设置"></a>5.ssh登录设置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成ssh key</span>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token comment"># 然后提示的设置用默认设置，一直回车即可</span><span class="token comment"># 修改sshd-config允许root登陆</span><span class="token function">vim</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>检查下面的命令是否被注释，会后面的参数是否为yes，若没有该命令需要在文件尾部新增该命令以允许root用户使用ssh登录：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">PermitRootLogin <span class="token function">yes</span> <span class="token comment"># 约在28行：将PermitRootLogin prohibit-password改为PermitRootLogin yes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改完sshd-config之后需要重启sshd服务:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 找到sshd的进程pid</span><span class="token function">ps</span> <span class="token parameter variable">-aux</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span class="token comment"># 杀掉sshd的进程pid</span><span class="token function">kill</span> <span class="token parameter variable">-9</span> sshd的进程pid号<span class="token comment"># 重启</span>/usr/sbin/sshd <span class="token parameter variable">-D</span> <span class="token operator">&amp;</span><span class="token comment"># 再次查看</span><span class="token function">ps</span> <span class="token parameter variable">-aux</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@a78aa2e72670:/<span class="token comment"># ps -aux | grep ssh</span>root      <span class="token number">1266</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">65512</span>  <span class="token number">5468</span> pts/0    S    01:14   <span class="token number">0</span>:00 /usr/sbin/sshd <span class="token parameter variable">-D</span>root      <span class="token number">1301</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">11284</span>   <span class="token number">932</span> pts/0    S+   01:18   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token function">ssh</span>root@a78aa2e72670:/<span class="token comment"># kill -9 1266</span>root@a78aa2e72670:/<span class="token comment"># /usr/sbin/sshd -D &amp;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token number">1302</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>   Killed                  /usr/sbin/sshd <span class="token parameter variable">-D</span>root@a78aa2e72670:/<span class="token comment"># ps -aux | grep ssh</span>root      <span class="token number">1302</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">65512</span>  <span class="token number">5756</span> pts/0    S    01:19   <span class="token number">0</span>:00 /usr/sbin/sshd <span class="token parameter variable">-D</span>root      <span class="token number">1304</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">11284</span>   <span class="token number">944</span> pts/0    S+   01:19   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-退出容器，但不要停止容器，并进行连接测试"><a href="#6-退出容器，但不要停止容器，并进行连接测试" class="headerlink" title="6.退出容器，但不要停止容器，并进行连接测试"></a>6.退出容器，但不要停止容器，并进行连接测试</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在主机登录，需要输入的root密码为前面设置的root密码</span><span class="token function">ssh</span> root@localhost <span class="token parameter variable">-p</span> <span class="token number">8080</span> <span class="token comment"># 8080为刚开始创建容器时候设置的主机端口映射，与容器的22端口形成映射</span><span class="token comment"># 在其他机器上可以使用以下命令登陆，假设宿主机ip为10.12.11.xx</span><span class="token function">ssh</span> root@10.12.11.xx <span class="token parameter variable">-p</span> <span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这里如果提示：ssh_exchange_identification: read: Connection reset by peer</p><p>则：可能是容器的 sshd服务未开启，再次进入容器重启sshd服务即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/sbin/sshd <span class="token parameter variable">-D</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@dc627a3adc4d:/<span class="token comment"># ps -aux | grep ssh</span>root        <span class="token number">32</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">11284</span>   <span class="token number">932</span> pts/1    S+   03:43   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token function">ssh</span>root@dc627a3adc4d:/<span class="token comment"># /usr/sbin/sshd -D &amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">33</span>root@dc627a3adc4d:/<span class="token comment"># ps -aux | grep ssh</span>root        <span class="token number">33</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">65512</span>  <span class="token number">5420</span> pts/1    S    03:43   <span class="token number">0</span>:00 /usr/sbin/sshd <span class="token parameter variable">-D</span>root        <span class="token number">35</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>  <span class="token number">11284</span>   <span class="token number">936</span> pts/1    S+   03:43   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注释：配置完成后可以将容器保存为镜像</p><p>docker commit -a “提交的镜像作者名称” -m “提交时的说明文字” 容器ID或容器名称  保存镜像名称:标签</p><p>示例:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@dc627a3adc4d:/<span class="token comment"># docker commit -a "runoob.com" -m "my apache" a404c6c174a2  mymysql:v1</span>root@dc627a3adc4d:/<span class="token comment"># docker images mymysql:v1</span>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZEmymysql             v1                  37af1236adef        <span class="token number">15</span> seconds ago      <span class="token number">329</span> MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-配置pycharm并连接docker容器"><a href="#7-配置pycharm并连接docker容器" class="headerlink" title="7.配置pycharm并连接docker容器"></a>7.配置pycharm并连接docker容器</h2><p>参考网址：<a href="https://blog.csdn.net/Thanours/article/details/109265315">点我查看</a></p><p>在 Tools &gt;&gt;&gt; Deployment &gt;&gt;&gt; Configuration选项中新建 SFTP 连接：</p><p><img src="https://i.loli.net/2021/05/21/YMm8PE6Hd9ySQ2h.png"></p><img src="https://i.loli.net/2021/05/21/z4dMrhtOH8xvZCR.png"/><p><img src="https://i.loli.net/2021/06/10/TYq9sIE2aRfdyGC.png"></p><ul><li>路径映射(本地程序文件目录与docker文件目录的映射)：</li></ul><p><img src="https://i.loli.net/2021/05/21/yigpdXIMG5QTaLw.png"></p><ul><li>同步本地代码数据到docker容器中：</li></ul><p><img src="https://i.loli.net/2021/05/21/mQJGDp1xaB6EjO9.png"></p><ul><li>上传完代码数据后， 需要选择设置python编译器：</li></ul><p><img src="https://i.loli.net/2021/05/21/htdvCb2qlnOas1Y.png"></p><p><img src="https://i.loli.net/2021/05/21/O3yU6kINc9AT8ea.png"></p><p><img src="https://i.loli.net/2021/05/21/bH5aVPAMXDIz42j.png"></p><p><img src="https://i.loli.net/2021/06/10/BH7mE9diJMrcWCp.png"></p><ul><li>设置好python解释器就可以run代码了：</li></ul><p><img src="https://i.loli.net/2021/05/21/jDGmP8npQtaFCY7.png"></p><p>这里要注意一下，代码所要的运行环境还需要在docker容器安装配置好，比如我这里需要pytorch环境以及python代码运行所需的依赖库都已经在docker容器中通过pip安装好了。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> Pycharm </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数参数传递之引用与指针</title>
      <link href="/2022/11/12/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B9%8B%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88/"/>
      <url>/2022/11/12/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B9%8B%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><h2 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h2><p><strong>形参是实参的拷贝</strong>，改变形参的值并不会影响外部实参的值。从被调用函数的角度来说，值传递是单向的（实参-&gt;形参），参数的值只能传入，不能传出。当函数内部需要修改参数，并且不希望这个改变影响调用者时，采用值传递。</p><h2 id="指针传递"><a href="#指针传递" class="headerlink" title="指针传递"></a>指针传递</h2><p><strong>形参为指向实参地址的指针</strong>，当对形参的指向操作时，就相当于对实参本身进行的操作</p><h2 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h2><p><strong>形参相当于是实参的“别名”</strong>，对形参的操作其实就是对实参的操作，在引用传递过程中，被调函数的形式参数虽然也作为局部变量在栈中开辟了内存空间，但是这时存放的是由主调函数放进来的实参变量的地址。被调函数对形参的任何操作都被处理成间接寻址，即通过栈中存放的地址访问主调函数中的实参变量。正因为如此，被调函数对形参做的任何操作都影响了主调函数中的实参变量。</p><p>引用引入了对象的一个同义词。定义引用的表示方法与定义指针相似，只是用“&amp;”代替了“*”。例如：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">Point pt1(10,10);Point &amp;pt2&#x3D;pt1; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>定义了pt2为pt1的引用。通过这样的定义，pt1和pt2表示同一对象。需要特别强调的是引用并不产生对象的副本，仅仅是对象的同义词。因此，当下面的语句执行后：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">pt1.offset（2，2）；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>pt1和pt2都具有（12，12）的值。<br>引用必须在定义时马上被初始化，因为它必须是某个东西的同义词。你不能先定义一个引用后才<br>初始化它。例如下面语句是非法的：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">Point &amp;pt3；pt3&#x3D;pt1；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="引用传递和指针传递的区别与联系"><a href="#引用传递和指针传递的区别与联系" class="headerlink" title="引用传递和指针传递的区别与联系"></a>引用传递和指针传递的区别与联系</h1><h2 id="引用的规则"><a href="#引用的规则" class="headerlink" title="引用的规则"></a>引用的规则</h2><ul><li>引用被创建的同时必须被初始化（指针则可以在任何时候被初始化）。 </li><li>不能有NULL引用，引用必须与合法的存储单元关联（指针则可以是NULL）。 </li><li>一旦引用被初始化，就不能改变引用的关系（指针则可以随时改变所指的对象）。</li></ul><h2 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h2><p>-都是地址的概念：指针指向一块内存，它的内容是所指内存的地址；而引用则是某块内存的别名。</p><h2 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h2><ul><li><p>指针是一个实体，而引用仅是个别名；</p></li><li><p>引用只能在定义时被初始化一次，之后不可变；指针可变；引用“从一而终”，指针可以“见异思迁”；</p></li><li><p>引用没有const，指针有const，const的指针不可变；（具体指没有int&amp; const a这种形式，而const int&amp; a是有 的， 前者指引用本身即别名不可以改变，这是当然的，所以不需要这种形式，后者指引用所指的值不可以改变）</p></li><li><p>引用不能为空，指针可以为空；</p></li><li><p>“sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身的大小；</p></li><li><p>指针和引用的自增(++)运算意义不一样；</p></li><li><p>引用是类型安全的，而指针不是 (引用比指针多了类型检查</p></li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>从概念上讲，<strong>指针从本质上讲就是存放变量地址的一个变量</strong>，在逻辑上是独立的，它可以被改变，包括其所指向的地址的改变和其指向的地址中所存放的数据的改变。</p><p>而引用是一个别名，它在逻辑上不是独立的，它的存在具有依附性，所以引用必须在一开始就被初始化，而且其引用的对象在其整个生命周期中是不能被改变的（自始至终只能依附于同一个变量）。</p><p>在C++中，指针和引用经常用于函数的参数传递，然而，指针传递参数和引用传递参数是有本质上的不同的：</p><p>指针传递参数本质上是值传递的方式，它所传递的是一个地址值。<em>值传递过程中，被调函数的形式参数作为被调函数的局部变量处理，即在栈中开辟了内存空间以存放由主调函数放进来的实参的值，从而成为了实参的一个副本。值传递的特点是被调函数对形式参数的任何操作都是作为局部变量进行，不会影响主调函数的实参变量的值。（这里是在说实参指针本身的地址值不会变）</em></p><p>而在引用传递过程中，被调函数的形式参数虽然也作为局部变量在栈中开辟了内存空间，但是这时<strong>存放的是由主调函数放进来的实参变量的地址。被调函数对形参的任何操作都被处理成间接寻址，即通过栈中存放的地址访问主调函数中的实参变量</strong>。正因为如此，被调函数对形参做的任何操作都影响了主调函数中的实参变量。</p><p><strong>引用传递和指针传递是不同的，虽然它们都是在被调函数栈空间上的一个局部变量，但是任何对于引用参数的处理都会通过一个间接寻址的方式操作到主调函数中的相关变量。而对于指针传递的参数，如果改变被调函数中的指针地址，它将影响不到主调函数的相关变量。如果想通过指针参数传递来改变主调函数中的相关变量，那就得使用指向指针的指针，或者指针引用。</strong></p><p>为了进一步加深大家对指针和引用的区别，下面我从编译的角度来阐述它们之间的区别：</p><p>程序在编译时分别将指针和引用添加到符号表上，符号表上记录的是变量名及变量所对应地址。指针变量在符号表上对应的地址值为<strong>指针变量的地址值</strong>，指针变量中的值为其指向变量的地址；而引用在符号表上对应的地址值为引用对象的地址值。符号表生成后就不会再改，因此指针可以改变其指向的对象（指针变量中的值可以改），而引用对象则不能修改.</p><h2 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h2><p>使用引用传递参数和使用指针传递参数都可传递变量的地址，但对于int,float等占用内存较少，其作为函数参数时一般使用引用传递参数；而对于结构体而言一般采用指针传递结构体变量的地址。</p><h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><h2 id="传递可变参数"><a href="#传递可变参数" class="headerlink" title="传递可变参数"></a>传递可变参数</h2><p>传统的c中，函数在调用时参数是通过值来传递的，这就是说函数的参数不具备返回值的能力。所以在传统的c中，如果需要函数的参数具有返回值的能力，往往是通过指针来实现的。比如，实现两整数变量值交换的c程序如下：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">void swap_int(int *a,int *b)&#123;    int temp;    temp&#x3D;*a;    a&#x3D;*b;    *b&#x3D;temp;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用引用机制后，以上程序的c++版本为：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">void swap_int(int &amp;a,int &amp;b)&#123;    int temp;    temp&#x3D;a;    a&#x3D;b;    b&#x3D;temp;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用该函数的c++方法为：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">swap_int,y); <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>c++自动把x,y的地址作为参数传递给swap_int函数。</p><h2 id="给函数传递大型对象"><a href="#给函数传递大型对象" class="headerlink" title="给函数传递大型对象"></a>给函数传递大型对象</h2><p>当大型对象被传递给函数时，使用引用参数可使参数传递效率得到提高，因为引用并不产生对象的副本，也就是参数传递时，对象无须复制。下面的例子定义了一个有限整数集合的类：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">const maxCard&#x3D;100;Class Set&#123;    int elems[maxCard]; &#x2F;&#x2F; 集和中的元素，maxCard 表示集合中元素个数的最大值。    int card; &#x2F;&#x2F; 集合中元素的个数。    public:    Set () &#123;card&#x3D;0;&#125; &#x2F;&#x2F;构造函数    friend Set operator * (Set ,Set ) ; &#x2F;&#x2F;重载运算符号*，用于计算集合的交集 用对象作为传值参数    &#x2F;&#x2F; friend Set operator * (Set &amp; ,Set &amp; ) 重载运算符号*，用于计算集合的交集 用对象的引用作为传值参数    ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先考虑集合交集的实现</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">Set operator *( Set Set1,Set Set2)&#123;    Set res;    for(int i&#x3D;0;i&lt;Set1.card;++i)    &#123;        for(int j&#x3D;0;j&gt;Set2.card;++j)        &#123;            if(Set1.elems[i]&#x3D;&#x3D;Set2.elems[j])                &#123;                    res.elems[res.card++]&#x3D;Set1.elems[i];                    break;                &#125;        &#125;            &#125;    return res;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于重载运算符不能对指针单独操作，我们必须把运算数声明为 Set 类型而不是 Set * 。每次使用*做交集运算时，整个集合都被复制，这样效率很低。我们可以用引用来避免这种情况。</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">Set operator *( Set &amp;Set1,Set &amp;Set2)&#123;     Set res;    for(int i&#x3D;0;i&lt;Set1.card;++i)    &#123;        for(int j&#x3D;0;j&gt;Set2.card;++j)&#123;            if(Set1.elems[i]&#x3D;&#x3D;Set2.elems[j])            &#123;                res.elems[res.card++]&#x3D;Set1.elems[i];                break;            &#125;        &#125;                &#125;        return res;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="引用返回值"><a href="#引用返回值" class="headerlink" title="引用返回值"></a>引用返回值</h2><p>如果一个函数返回了引用，那么该函数的调用也可以被赋值。这里有一函数，它拥有两个引用参数并返回一个双精度数的引用：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">double &amp;max(double &amp;d1,double &amp;d2)&#123;    return d1&gt;d2?d1:d2;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>由于max()函数返回一个对双精度数的引用，那么我们就可以用max() 来对其中较大的双精度数加1：</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">max(x,y)+&#x3D;1.0;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二级指针"><a href="#二级指针" class="headerlink" title="二级指针"></a>二级指针</h1><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>在函数的使用过程中，我们都明白传指针和传引用会使实参的值发生改变。那么能够通过传指针改变指针所指向的地址吗？<br>在解决这个问题之前，也许我们应该先了解指针非常容易混淆的三个属性：</p><ul><li>指针变量地址（&amp;p）</li><li>指针变量指向的地址（p，存储数据的地址）</li><li>指针变量指向的地址的值（*p）</li></ul><p>当我们将指针变量与其它变量比较之后就会发现，指针变量同其它变量是相似的，只是多了最后一种操作。比如一个int类型的变量,<code>int x=5;</code>,<code>&amp;x</code>取出存储<code>5</code>这个数据的地址，同样，<code>&amp;p</code>也是存储指针的地址，<code>p</code>就是这个地址里面保存的值，也就是指向的地址。只是与其它变量不同的是，它除了这两种操作之外，还有一个解引用操作符<code>*p</code>去获取指针变量指向的地址里面保存的值。</p><h2 id="指针引用"><a href="#指针引用" class="headerlink" title="指针引用"></a>指针引用</h2><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">void make(int *pp)&#123;    pp&#x3D;new int(66); &#x2F;&#x2F;试图改变p指向的地址&#125;int main()&#123;     int a&#x3D;5;     int *p&#x3D;&amp;a; &#x2F;&#x2F;指针变量指向一个int类型的地址     cout&lt;&lt;&quot;address:&quot;&lt;&lt;&amp;a&lt;&lt;&quot;value:&quot;&lt;&lt;a&lt;&lt;endl;     cout&lt;&lt;&quot;address:&quot;&lt;&lt;p&lt;&lt;&quot;value:&quot;&lt;&lt;*p&lt;&lt;endl;     make(p);     cout&lt;&lt;&quot;address:&quot;&lt;&lt;p&lt;&lt;&quot;value:&quot;&lt;&lt;*p&lt;&lt;endl;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果如下：我们这里虽然使用的是传指针，但是却不是直接改变指针变量指向的地址的值，却是想通过改变指针变量指向的地址来修改它的值，显然这样失败了。</p><p><img src="/2022/11/12/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B9%8B%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88/no.png" alt="错误使用"></p><p>如果我们希望在函数里面修改指针变量存储的地址而不是它的值，这个时候就需要指针引用了。类似于普通变量传入变量引用，我们也传入一个指针引用，在函数里面，你可以将pp认为和p都是这个指针变量（&amp;p&#x3D;&#x3D;&amp;pp），不似传入指针参数的时候形参和实参的变量（&amp;p！&#x3D;&amp;pp）地址不一样。此时我们操作pp的值就是更改了p的值。</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">void make(int *&amp;pp)&#123;    pp&#x3D;new int(66); &#x2F;&#x2F;改变p指向的地址&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果如下：当我们修改传入参数为指针的引用的时候就可以修改指针变量所指向的地址了，可以看见，传入指针引用可以修改指针变量的值（p）和指向的值（*p）。</p><p><img src="/2022/11/12/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B9%8B%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88/yes.png"></p><h2 id="二级指针-1"><a href="#二级指针-1" class="headerlink" title="二级指针"></a>二级指针</h2><p>指向指针的指针变量称为二级指针。<br>如果pp是一个二级指针，那么有如下属性：</p><ul><li>二级指针的地址（&amp;pp）</li><li>二级指针的地址保存的地址（pp）</li><li>二级指针的地址保存的地址，该地址里面保存的地址（*pp）</li><li>二级指针的地址保存的地址，该地址里面保存的地址里面的数据（**pp）</li></ul><p><img src="/2022/11/12/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B9%8B%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88/kuangtu.png"></p><p>除了上面传入指针引用改变一级指针指向的地址以外，我们还可以通过传入一个二级指针去修改它对应的一级指针指向的地址，同样达到了修改指针变量的效果。二级指针的指向的地址存储的值就是一级指针指向的地址。对一级指针变量解引用得到的是指针指向的地址存储的数据，二级指针变量解引用得到的也是该二级指针指向的地址存储的地址值。</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">void make(int **pp)&#123;   int * p&#x3D;new int(66);    *pp&#x3D;p; &#x2F;&#x2F;二级指针的解引用被赋值需要得到一个一级指针变量，上图中二级指针的示意图中*pp&#x3D;p&#125;int main()&#123;     int a&#x3D;5;     int *q&#x3D;&amp;a;     int **pp&#x3D;&amp;q;     cout&lt;&lt;&quot;address:&quot;&lt;&lt;&amp;pp&lt;&lt;&quot;  &quot;&lt;&lt;pp&lt;&lt;&quot;    &quot;&lt;&lt;&amp;q&lt;&lt;&quot;   &quot;&lt;&lt;q&lt;&lt;&quot;       value:&quot;&lt;&lt;*q&lt;&lt;endl;     make(pp);     cout&lt;&lt;&quot;address:&quot;&lt;&lt;&amp;pp&lt;&lt;&quot;  &quot;&lt;&lt;pp&lt;&lt;&quot;    &quot;&lt;&lt;&amp;q&lt;&lt;&quot;   &quot;&lt;&lt;q&lt;&lt;&quot;       value:&quot;&lt;&lt;*q&lt;&lt;endl;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果如下：通过对二级指针的解引用赋值成功修改了一级指针指向的地址。如果仅仅在make函数里面对**pp&#x3D;66;操作，那么所有的地址不会改变，仅仅会改变值为66。</p><p><img src="/2022/11/12/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B9%8B%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88/yes2.png"></p><h1 id="各种类型的函数参数传递"><a href="#各种类型的函数参数传递" class="headerlink" title="各种类型的函数参数传递"></a>各种类型的函数参数传递</h1><h2 id="声明-h"><a href="#声明-h" class="headerlink" title="声明.h"></a>声明.h</h2><pre class="line-numbers language-C" data-language="C"><div class="caption"><span>++</span></div><code class="language-C">&#x2F;&#x2F; 结构体数组   (in_ldc)void getLdc(TLensDistortionCorrection (&amp;in_ldc)[NUM_CAMERAS]);&#x2F;&#x2F; cv::Mat  (in_MatK)void getMatK(cv::Mat *in_MatK);&#x2F;&#x2F; 内存块(map)  (in_BEMap)void getBEMap(unsigned short *&amp;in_BEMap);&#x2F;&#x2F; cv::Rect数组 (in_BESetRoi)void getBESetRoi(cv::Rect *in_BESetRoi);&#x2F;&#x2F; cv::Mat 数组 (in_wide_angle_map)void getWideAngleMap(float **in_wide_angle_map);&#x2F;&#x2F; 整数 (in_wide_angle_width,in_wide_angle_height)void getWideAngleSize(int &amp;in_wide_angle_width, int &amp;in_wide_angle_height);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定义-cpp"><a href="#定义-cpp" class="headerlink" title="定义.cpp"></a>定义.cpp</h2><ul><li><p>结构体数组</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">typedef struct&#123;    float distCenterX;    float distCenterY;    float distFocalLength;    float distFocalLengthInv;    float *lut_d2u;    int32_t lut_d2u_indMax;    float lut_d2u_step;    float lut_d2u_stepInv;    float *lut_u2d;    int32_t lut_u2d_indMax;    float lut_u2d_step;    float lut_u2d_stepInv;    bool if_get_matrix &#x3D; false;    cv::Mat intrinsics &#x3D; cv::Mat(3, 3, CV_32FC1, cv::Scalar::all(0));    cv::Mat distortionCoeff &#x3D; cv::Mat(4, 1, CV_32FC1, cv::Scalar::all(0));&#125; TLensDistortionCorrection;TLensDistortionCorrection TLdc[NUM_CAMERAS];void ParametersInit::getLdc(TLensDistortionCorrection (&amp;in_ldc)[NUM_CAMERAS])&#123;    for (int i &#x3D; 0; i &lt; NUM_CAMERAS; i++)    &#123;        in_ldc[i] &#x3D; TLdc[i];    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>map</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">unsigned short *BEMap &#x3D; NULL;BEMap &#x3D; (unsigned short *)malloc(sizeof(unsigned short) * BEGetRoiSize * 2 * 2 * 4);void getBEMap(unsigned short *&amp;in_BEMap)&#123;    in_BEMap &#x3D; BEMap;&#125;&#x2F;&#x2F; cv::Rectfor (int rect_index &#x3D; 0; rect_index &lt; 4; rect_index++)&#123;    BESetRoi[rect_index] &#x3D; cv::Rect(BE_set_roi[rect_index * 4 + 0], BE_set_roi[rect_index * 4 + 1],                                        BE_set_roi[rect_index * 4 + 2], BE_set_roi[rect_index * 4 + 3]);&#125;void getBESetRoi(cv::Rect *in_BESetRoi)&#123;    for (int i &#x3D; 0; i &lt; NUM_CAMERAS; i++)    &#123;        in_BESetRoi[i] &#x3D; BESetRoi[i];    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>cv::Mat []</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">float *wideAngleViewMap[NUM_CAMERAS] &#x3D; &#123;NULL&#125;;for (int index &#x3D; 0; index &lt; NUM_CAMERAS; index++)&#123;    wideAngleViewMap[index] &#x3D; (float *)malloc(wideAngle_width * wideAngle_height * 3 &#x2F; 2 * 2 * sizeof(float));&#125;void ParametersInit::getWideAngleMap(float **in_wide_angle_map)&#123;    for (int i &#x3D; 0; i &lt; NUM_CAMERAS; i++)    &#123;        if (wideAngleViewMap[i] !&#x3D; NULL)        &#123;            in_wide_angle_map[i] &#x3D; wideAngleViewMap[i];        &#125;        else        &#123;            LOGI(1,&quot;getWideAngleMap failed!&quot;);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>int</p><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int wideAngle_width &#x3D; 720; &#x2F;&#x2F;广角视图的尺寸，需要为偶数int wideAngle_height &#x3D; 720;void ParametersInit::getWideAngleSize(int &amp;in_wide_angle_width, int &amp;in_wide_angle_height)&#123;    in_wide_angle_width &#x3D; wideAngle_width;    in_wide_angle_height &#x3D; wideAngle_height;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="使用-cpp"><a href="#使用-cpp" class="headerlink" title="使用.cpp"></a>使用.cpp</h2><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">&#x2F;&#x2F; TLensDistortionCorrection m_ldc[NUM_CAMERAS];getLdc(my_avm_bsd.m_ldc);&#x2F;&#x2F; cv::Mat m_MatK[NUM_CAMERAS];getMatK(my_avm_bsd.m_MatK);&#x2F;&#x2F; unsigned short *BE_Map;getBEMap(my_BB_YUV.BE_Map);&#x2F;&#x2F; cv::Rect BE_SetRoi[4];getBESetRoi(my_BB_YUV.BE_SetRoi);&#x2F;&#x2F; float *wide_angle_map[NUM_CAMERAS] &#x3D; &#123;NULL&#125;;getWideAngleMap(g_avm_set-&gt;wide_angle_map);&#x2F;&#x2F; int m_wideAngle_width;int m_wideAngle_height;getWideAngleSize(g_avm_set-&gt;m_wideAngle_width, g_avm_set-&gt;m_wideAngle_height);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h1><ul><li><a href="https://www.pudn.com/news/62615ba10e75e420124071b2.html">C++中引用传递与指针传递区别（进一步整理）</a> </li><li><a href="https://blog.csdn.net/qq_32483145/article/details/52901230">二级指针和指针引用函数传参（C++）</a></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 函数参数传递 </tag>
            
            <tag> 引用与指针 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
